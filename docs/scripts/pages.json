[{"name":"Acquired","description":"io.github.smyrgeorge.sqlx4k.Connection.Status.Acquired","location":"sqlx4k/io.github.smyrgeorge.sqlx4k/-connection/-status/-acquired/index.html","searchKeys":["Acquired","Acquired","io.github.smyrgeorge.sqlx4k.Connection.Status.Acquired"]},{"name":"CannotDecode","description":"io.github.smyrgeorge.sqlx4k.SQLError.Code.CannotDecode","location":"sqlx4k/io.github.smyrgeorge.sqlx4k/-s-q-l-error/-code/-cannot-decode/index.html","searchKeys":["CannotDecode","CannotDecode","io.github.smyrgeorge.sqlx4k.SQLError.Code.CannotDecode"]},{"name":"CannotDecodeEnumValue","description":"io.github.smyrgeorge.sqlx4k.SQLError.Code.CannotDecodeEnumValue","location":"sqlx4k/io.github.smyrgeorge.sqlx4k/-s-q-l-error/-code/-cannot-decode-enum-value/index.html","searchKeys":["CannotDecodeEnumValue","CannotDecodeEnumValue","io.github.smyrgeorge.sqlx4k.SQLError.Code.CannotDecodeEnumValue"]},{"name":"Closed","description":"io.github.smyrgeorge.sqlx4k.Transaction.Status.Closed","location":"sqlx4k/io.github.smyrgeorge.sqlx4k/-transaction/-status/-closed/index.html","searchKeys":["Closed","Closed","io.github.smyrgeorge.sqlx4k.Transaction.Status.Closed"]},{"name":"ConnectionIsReleased","description":"io.github.smyrgeorge.sqlx4k.SQLError.Code.ConnectionIsReleased","location":"sqlx4k/io.github.smyrgeorge.sqlx4k/-s-q-l-error/-code/-connection-is-released/index.html","searchKeys":["ConnectionIsReleased","ConnectionIsReleased","io.github.smyrgeorge.sqlx4k.SQLError.Code.ConnectionIsReleased"]},{"name":"Database","description":"io.github.smyrgeorge.sqlx4k.SQLError.Code.Database","location":"sqlx4k/io.github.smyrgeorge.sqlx4k/-s-q-l-error/-code/-database/index.html","searchKeys":["Database","Database","io.github.smyrgeorge.sqlx4k.SQLError.Code.Database"]},{"name":"Migrate","description":"io.github.smyrgeorge.sqlx4k.SQLError.Code.Migrate","location":"sqlx4k/io.github.smyrgeorge.sqlx4k/-s-q-l-error/-code/-migrate/index.html","searchKeys":["Migrate","Migrate","io.github.smyrgeorge.sqlx4k.SQLError.Code.Migrate"]},{"name":"MySQL","description":"io.github.smyrgeorge.sqlx4k.Dialect.MySQL","location":"sqlx4k/io.github.smyrgeorge.sqlx4k/-dialect/-my-s-q-l/index.html","searchKeys":["MySQL","MySQL","io.github.smyrgeorge.sqlx4k.Dialect.MySQL"]},{"name":"NamedParameterNotFound","description":"io.github.smyrgeorge.sqlx4k.SQLError.Code.NamedParameterNotFound","location":"sqlx4k/io.github.smyrgeorge.sqlx4k/-s-q-l-error/-code/-named-parameter-not-found/index.html","searchKeys":["NamedParameterNotFound","NamedParameterNotFound","io.github.smyrgeorge.sqlx4k.SQLError.Code.NamedParameterNotFound"]},{"name":"NamedParameterTypeNotSupported","description":"io.github.smyrgeorge.sqlx4k.SQLError.Code.NamedParameterTypeNotSupported","location":"sqlx4k/io.github.smyrgeorge.sqlx4k/-s-q-l-error/-code/-named-parameter-type-not-supported/index.html","searchKeys":["NamedParameterTypeNotSupported","NamedParameterTypeNotSupported","io.github.smyrgeorge.sqlx4k.SQLError.Code.NamedParameterTypeNotSupported"]},{"name":"NamedParameterValueNotSupplied","description":"io.github.smyrgeorge.sqlx4k.SQLError.Code.NamedParameterValueNotSupplied","location":"sqlx4k/io.github.smyrgeorge.sqlx4k/-s-q-l-error/-code/-named-parameter-value-not-supplied/index.html","searchKeys":["NamedParameterValueNotSupplied","NamedParameterValueNotSupplied","io.github.smyrgeorge.sqlx4k.SQLError.Code.NamedParameterValueNotSupplied"]},{"name":"Open","description":"io.github.smyrgeorge.sqlx4k.Transaction.Status.Open","location":"sqlx4k/io.github.smyrgeorge.sqlx4k/-transaction/-status/-open/index.html","searchKeys":["Open","Open","io.github.smyrgeorge.sqlx4k.Transaction.Status.Open"]},{"name":"Pool","description":"io.github.smyrgeorge.sqlx4k.SQLError.Code.Pool","location":"sqlx4k/io.github.smyrgeorge.sqlx4k/-s-q-l-error/-code/-pool/index.html","searchKeys":["Pool","Pool","io.github.smyrgeorge.sqlx4k.SQLError.Code.Pool"]},{"name":"PoolClosed","description":"io.github.smyrgeorge.sqlx4k.SQLError.Code.PoolClosed","location":"sqlx4k/io.github.smyrgeorge.sqlx4k/-s-q-l-error/-code/-pool-closed/index.html","searchKeys":["PoolClosed","PoolClosed","io.github.smyrgeorge.sqlx4k.SQLError.Code.PoolClosed"]},{"name":"PoolTimedOut","description":"io.github.smyrgeorge.sqlx4k.SQLError.Code.PoolTimedOut","location":"sqlx4k/io.github.smyrgeorge.sqlx4k/-s-q-l-error/-code/-pool-timed-out/index.html","searchKeys":["PoolTimedOut","PoolTimedOut","io.github.smyrgeorge.sqlx4k.SQLError.Code.PoolTimedOut"]},{"name":"PositionalParameterOutOfBounds","description":"io.github.smyrgeorge.sqlx4k.SQLError.Code.PositionalParameterOutOfBounds","location":"sqlx4k/io.github.smyrgeorge.sqlx4k/-s-q-l-error/-code/-positional-parameter-out-of-bounds/index.html","searchKeys":["PositionalParameterOutOfBounds","PositionalParameterOutOfBounds","io.github.smyrgeorge.sqlx4k.SQLError.Code.PositionalParameterOutOfBounds"]},{"name":"PositionalParameterValueNotSupplied","description":"io.github.smyrgeorge.sqlx4k.SQLError.Code.PositionalParameterValueNotSupplied","location":"sqlx4k/io.github.smyrgeorge.sqlx4k/-s-q-l-error/-code/-positional-parameter-value-not-supplied/index.html","searchKeys":["PositionalParameterValueNotSupplied","PositionalParameterValueNotSupplied","io.github.smyrgeorge.sqlx4k.SQLError.Code.PositionalParameterValueNotSupplied"]},{"name":"PostgreSQL","description":"io.github.smyrgeorge.sqlx4k.Dialect.PostgreSQL","location":"sqlx4k/io.github.smyrgeorge.sqlx4k/-dialect/-postgre-s-q-l/index.html","searchKeys":["PostgreSQL","PostgreSQL","io.github.smyrgeorge.sqlx4k.Dialect.PostgreSQL"]},{"name":"Released","description":"io.github.smyrgeorge.sqlx4k.Connection.Status.Released","location":"sqlx4k/io.github.smyrgeorge.sqlx4k/-connection/-status/-released/index.html","searchKeys":["Released","Released","io.github.smyrgeorge.sqlx4k.Connection.Status.Released"]},{"name":"SQLite","description":"io.github.smyrgeorge.sqlx4k.Dialect.SQLite","location":"sqlx4k/io.github.smyrgeorge.sqlx4k/-dialect/-s-q-lite/index.html","searchKeys":["SQLite","SQLite","io.github.smyrgeorge.sqlx4k.Dialect.SQLite"]},{"name":"TransactionIsClosed","description":"io.github.smyrgeorge.sqlx4k.SQLError.Code.TransactionIsClosed","location":"sqlx4k/io.github.smyrgeorge.sqlx4k/-s-q-l-error/-code/-transaction-is-closed/index.html","searchKeys":["TransactionIsClosed","TransactionIsClosed","io.github.smyrgeorge.sqlx4k.SQLError.Code.TransactionIsClosed"]},{"name":"WorkerCrashed","description":"io.github.smyrgeorge.sqlx4k.SQLError.Code.WorkerCrashed","location":"sqlx4k/io.github.smyrgeorge.sqlx4k/-s-q-l-error/-code/-worker-crashed/index.html","searchKeys":["WorkerCrashed","WorkerCrashed","io.github.smyrgeorge.sqlx4k.SQLError.Code.WorkerCrashed"]},{"name":"abstract class AbstractStatement(sql: String) : Statement","description":"io.github.smyrgeorge.sqlx4k.impl.statement.AbstractStatement","location":"sqlx4k/io.github.smyrgeorge.sqlx4k.impl.statement/-abstract-statement/index.html","searchKeys":["AbstractStatement","abstract class AbstractStatement(sql: String) : Statement","io.github.smyrgeorge.sqlx4k.impl.statement.AbstractStatement"]},{"name":"abstract fun bind(index: Int, value: Any?): Statement","description":"io.github.smyrgeorge.sqlx4k.Statement.bind","location":"sqlx4k/io.github.smyrgeorge.sqlx4k/-statement/bind.html","searchKeys":["bind","abstract fun bind(index: Int, value: Any?): Statement","io.github.smyrgeorge.sqlx4k.Statement.bind"]},{"name":"abstract fun bind(parameter: String, value: Any?): Statement","description":"io.github.smyrgeorge.sqlx4k.Statement.bind","location":"sqlx4k/io.github.smyrgeorge.sqlx4k/-statement/bind.html","searchKeys":["bind","abstract fun bind(parameter: String, value: Any?): Statement","io.github.smyrgeorge.sqlx4k.Statement.bind"]},{"name":"abstract fun encode(value: T): Any","description":"io.github.smyrgeorge.sqlx4k.Statement.ValueEncoder.encode","location":"sqlx4k/io.github.smyrgeorge.sqlx4k/-statement/-value-encoder/encode.html","searchKeys":["encode","abstract fun encode(value: T): Any","io.github.smyrgeorge.sqlx4k.Statement.ValueEncoder.encode"]},{"name":"abstract fun map(row: ResultSet.Row): T","description":"io.github.smyrgeorge.sqlx4k.RowMapper.map","location":"sqlx4k/io.github.smyrgeorge.sqlx4k/-row-mapper/map.html","searchKeys":["map","abstract fun map(row: ResultSet.Row): T","io.github.smyrgeorge.sqlx4k.RowMapper.map"]},{"name":"abstract fun poolIdleSize(): Int","description":"io.github.smyrgeorge.sqlx4k.ConnectionPool.poolIdleSize","location":"sqlx4k/io.github.smyrgeorge.sqlx4k/-connection-pool/pool-idle-size.html","searchKeys":["poolIdleSize","abstract fun poolIdleSize(): Int","io.github.smyrgeorge.sqlx4k.ConnectionPool.poolIdleSize"]},{"name":"abstract fun poolSize(): Int","description":"io.github.smyrgeorge.sqlx4k.ConnectionPool.poolSize","location":"sqlx4k/io.github.smyrgeorge.sqlx4k/-connection-pool/pool-size.html","searchKeys":["poolSize","abstract fun poolSize(): Int","io.github.smyrgeorge.sqlx4k.ConnectionPool.poolSize"]},{"name":"abstract fun render(encoders: Statement.ValueEncoderRegistry = ValueEncoderRegistry.EMPTY): String","description":"io.github.smyrgeorge.sqlx4k.Statement.render","location":"sqlx4k/io.github.smyrgeorge.sqlx4k/-statement/render.html","searchKeys":["render","abstract fun render(encoders: Statement.ValueEncoderRegistry = ValueEncoderRegistry.EMPTY): String","io.github.smyrgeorge.sqlx4k.Statement.render"]},{"name":"abstract suspend fun <T> fetchAll(statement: Statement, rowMapper: RowMapper<T>): Result<List<T>>","description":"io.github.smyrgeorge.sqlx4k.QueryExecutor.fetchAll","location":"sqlx4k/io.github.smyrgeorge.sqlx4k/-query-executor/fetch-all.html","searchKeys":["fetchAll","abstract suspend fun <T> fetchAll(statement: Statement, rowMapper: RowMapper<T>): Result<List<T>>","io.github.smyrgeorge.sqlx4k.QueryExecutor.fetchAll"]},{"name":"abstract suspend fun acquire(): Result<Connection>","description":"io.github.smyrgeorge.sqlx4k.ConnectionPool.acquire","location":"sqlx4k/io.github.smyrgeorge.sqlx4k/-connection-pool/acquire.html","searchKeys":["acquire","abstract suspend fun acquire(): Result<Connection>","io.github.smyrgeorge.sqlx4k.ConnectionPool.acquire"]},{"name":"abstract suspend fun begin(): Result<Transaction>","description":"io.github.smyrgeorge.sqlx4k.QueryExecutor.Transactional.begin","location":"sqlx4k/io.github.smyrgeorge.sqlx4k/-query-executor/-transactional/begin.html","searchKeys":["begin","abstract suspend fun begin(): Result<Transaction>","io.github.smyrgeorge.sqlx4k.QueryExecutor.Transactional.begin"]},{"name":"abstract suspend fun close(): Result<Unit>","description":"io.github.smyrgeorge.sqlx4k.ConnectionPool.close","location":"sqlx4k/io.github.smyrgeorge.sqlx4k/-connection-pool/close.html","searchKeys":["close","abstract suspend fun close(): Result<Unit>","io.github.smyrgeorge.sqlx4k.ConnectionPool.close"]},{"name":"abstract suspend fun commit(): Result<Unit>","description":"io.github.smyrgeorge.sqlx4k.Transaction.commit","location":"sqlx4k/io.github.smyrgeorge.sqlx4k/-transaction/commit.html","searchKeys":["commit","abstract suspend fun commit(): Result<Unit>","io.github.smyrgeorge.sqlx4k.Transaction.commit"]},{"name":"abstract suspend fun delete(context: QueryExecutor, entity: T): Result<Unit>","description":"io.github.smyrgeorge.sqlx4k.CrudRepository.delete","location":"sqlx4k/io.github.smyrgeorge.sqlx4k/-crud-repository/delete.html","searchKeys":["delete","abstract suspend fun delete(context: QueryExecutor, entity: T): Result<Unit>","io.github.smyrgeorge.sqlx4k.CrudRepository.delete"]},{"name":"abstract suspend fun delete(entity: T): Result<Unit>","description":"io.github.smyrgeorge.sqlx4k.ContextCrudRepository.delete","location":"sqlx4k/io.github.smyrgeorge.sqlx4k/-context-crud-repository/delete.html","searchKeys":["delete","abstract suspend fun delete(entity: T): Result<Unit>","io.github.smyrgeorge.sqlx4k.ContextCrudRepository.delete"]},{"name":"abstract suspend fun execute(sql: String): Result<Long>","description":"io.github.smyrgeorge.sqlx4k.QueryExecutor.execute","location":"sqlx4k/io.github.smyrgeorge.sqlx4k/-query-executor/execute.html","searchKeys":["execute","abstract suspend fun execute(sql: String): Result<Long>","io.github.smyrgeorge.sqlx4k.QueryExecutor.execute"]},{"name":"abstract suspend fun execute(statement: Statement): Result<Long>","description":"io.github.smyrgeorge.sqlx4k.QueryExecutor.execute","location":"sqlx4k/io.github.smyrgeorge.sqlx4k/-query-executor/execute.html","searchKeys":["execute","abstract suspend fun execute(statement: Statement): Result<Long>","io.github.smyrgeorge.sqlx4k.QueryExecutor.execute"]},{"name":"abstract suspend fun fetchAll(sql: String): Result<ResultSet>","description":"io.github.smyrgeorge.sqlx4k.QueryExecutor.fetchAll","location":"sqlx4k/io.github.smyrgeorge.sqlx4k/-query-executor/fetch-all.html","searchKeys":["fetchAll","abstract suspend fun fetchAll(sql: String): Result<ResultSet>","io.github.smyrgeorge.sqlx4k.QueryExecutor.fetchAll"]},{"name":"abstract suspend fun fetchAll(statement: Statement): Result<ResultSet>","description":"io.github.smyrgeorge.sqlx4k.QueryExecutor.fetchAll","location":"sqlx4k/io.github.smyrgeorge.sqlx4k/-query-executor/fetch-all.html","searchKeys":["fetchAll","abstract suspend fun fetchAll(statement: Statement): Result<ResultSet>","io.github.smyrgeorge.sqlx4k.QueryExecutor.fetchAll"]},{"name":"abstract suspend fun insert(context: QueryExecutor, entity: T): Result<T>","description":"io.github.smyrgeorge.sqlx4k.CrudRepository.insert","location":"sqlx4k/io.github.smyrgeorge.sqlx4k/-crud-repository/insert.html","searchKeys":["insert","abstract suspend fun insert(context: QueryExecutor, entity: T): Result<T>","io.github.smyrgeorge.sqlx4k.CrudRepository.insert"]},{"name":"abstract suspend fun insert(entity: T): Result<T>","description":"io.github.smyrgeorge.sqlx4k.ContextCrudRepository.insert","location":"sqlx4k/io.github.smyrgeorge.sqlx4k/-context-crud-repository/insert.html","searchKeys":["insert","abstract suspend fun insert(entity: T): Result<T>","io.github.smyrgeorge.sqlx4k.ContextCrudRepository.insert"]},{"name":"abstract suspend fun migrate(path: String = \"./db/migrations\", table: String = \"_sqlx4k_migrations\", schema: String? = null, createSchema: Boolean = false, afterStatementExecution: suspend (Statement, Duration) -> Unit = { _, _ -> }, afterFileMigration: suspend (Migration, Duration) -> Unit = { _, _ -> }): Result<Migrator.Results>","description":"io.github.smyrgeorge.sqlx4k.QueryExecutor.Migrate.migrate","location":"sqlx4k/io.github.smyrgeorge.sqlx4k/-query-executor/-migrate/migrate.html","searchKeys":["migrate","abstract suspend fun migrate(path: String = \"./db/migrations\", table: String = \"_sqlx4k_migrations\", schema: String? = null, createSchema: Boolean = false, afterStatementExecution: suspend (Statement, Duration) -> Unit = { _, _ -> }, afterFileMigration: suspend (Migration, Duration) -> Unit = { _, _ -> }): Result<Migrator.Results>","io.github.smyrgeorge.sqlx4k.QueryExecutor.Migrate.migrate"]},{"name":"abstract suspend fun release(): Result<Unit>","description":"io.github.smyrgeorge.sqlx4k.Connection.release","location":"sqlx4k/io.github.smyrgeorge.sqlx4k/-connection/release.html","searchKeys":["release","abstract suspend fun release(): Result<Unit>","io.github.smyrgeorge.sqlx4k.Connection.release"]},{"name":"abstract suspend fun rollback(): Result<Unit>","description":"io.github.smyrgeorge.sqlx4k.Transaction.rollback","location":"sqlx4k/io.github.smyrgeorge.sqlx4k/-transaction/rollback.html","searchKeys":["rollback","abstract suspend fun rollback(): Result<Unit>","io.github.smyrgeorge.sqlx4k.Transaction.rollback"]},{"name":"abstract suspend fun save(context: QueryExecutor, entity: T): Result<T>","description":"io.github.smyrgeorge.sqlx4k.CrudRepository.save","location":"sqlx4k/io.github.smyrgeorge.sqlx4k/-crud-repository/save.html","searchKeys":["save","abstract suspend fun save(context: QueryExecutor, entity: T): Result<T>","io.github.smyrgeorge.sqlx4k.CrudRepository.save"]},{"name":"abstract suspend fun save(entity: T): Result<T>","description":"io.github.smyrgeorge.sqlx4k.ContextCrudRepository.save","location":"sqlx4k/io.github.smyrgeorge.sqlx4k/-context-crud-repository/save.html","searchKeys":["save","abstract suspend fun save(entity: T): Result<T>","io.github.smyrgeorge.sqlx4k.ContextCrudRepository.save"]},{"name":"abstract suspend fun update(context: QueryExecutor, entity: T): Result<T>","description":"io.github.smyrgeorge.sqlx4k.CrudRepository.update","location":"sqlx4k/io.github.smyrgeorge.sqlx4k/-crud-repository/update.html","searchKeys":["update","abstract suspend fun update(context: QueryExecutor, entity: T): Result<T>","io.github.smyrgeorge.sqlx4k.CrudRepository.update"]},{"name":"abstract suspend fun update(entity: T): Result<T>","description":"io.github.smyrgeorge.sqlx4k.ContextCrudRepository.update","location":"sqlx4k/io.github.smyrgeorge.sqlx4k/-context-crud-repository/update.html","searchKeys":["update","abstract suspend fun update(entity: T): Result<T>","io.github.smyrgeorge.sqlx4k.ContextCrudRepository.update"]},{"name":"abstract val extractedNamedParameters: Set<String>","description":"io.github.smyrgeorge.sqlx4k.Statement.extractedNamedParameters","location":"sqlx4k/io.github.smyrgeorge.sqlx4k/-statement/extracted-named-parameters.html","searchKeys":["extractedNamedParameters","abstract val extractedNamedParameters: Set<String>","io.github.smyrgeorge.sqlx4k.Statement.extractedNamedParameters"]},{"name":"abstract val extractedPositionalParameters: Int","description":"io.github.smyrgeorge.sqlx4k.Statement.extractedPositionalParameters","location":"sqlx4k/io.github.smyrgeorge.sqlx4k/-statement/extracted-positional-parameters.html","searchKeys":["extractedPositionalParameters","abstract val extractedPositionalParameters: Int","io.github.smyrgeorge.sqlx4k.Statement.extractedPositionalParameters"]},{"name":"abstract val status: Connection.Status","description":"io.github.smyrgeorge.sqlx4k.Connection.status","location":"sqlx4k/io.github.smyrgeorge.sqlx4k/-connection/status.html","searchKeys":["status","abstract val status: Connection.Status","io.github.smyrgeorge.sqlx4k.Connection.status"]},{"name":"abstract val status: Transaction.Status","description":"io.github.smyrgeorge.sqlx4k.Transaction.status","location":"sqlx4k/io.github.smyrgeorge.sqlx4k/-transaction/status.html","searchKeys":["status","abstract val status: Transaction.Status","io.github.smyrgeorge.sqlx4k.Transaction.status"]},{"name":"annotation class Column(val insert: Boolean = true, val update: Boolean = true)","description":"io.github.smyrgeorge.sqlx4k.annotation.Column","location":"sqlx4k/io.github.smyrgeorge.sqlx4k.annotation/-column/index.html","searchKeys":["Column","annotation class Column(val insert: Boolean = true, val update: Boolean = true)","io.github.smyrgeorge.sqlx4k.annotation.Column"]},{"name":"annotation class Id(val insert: Boolean = false)","description":"io.github.smyrgeorge.sqlx4k.annotation.Id","location":"sqlx4k/io.github.smyrgeorge.sqlx4k.annotation/-id/index.html","searchKeys":["Id","annotation class Id(val insert: Boolean = false)","io.github.smyrgeorge.sqlx4k.annotation.Id"]},{"name":"annotation class Query(val value: String, val checkSyntax: Boolean = true, val checkSchema: Boolean = true)","description":"io.github.smyrgeorge.sqlx4k.annotation.Query","location":"sqlx4k/io.github.smyrgeorge.sqlx4k.annotation/-query/index.html","searchKeys":["Query","annotation class Query(val value: String, val checkSyntax: Boolean = true, val checkSchema: Boolean = true)","io.github.smyrgeorge.sqlx4k.annotation.Query"]},{"name":"annotation class Repository(val mapper: KClass<out RowMapper<*>>)","description":"io.github.smyrgeorge.sqlx4k.annotation.Repository","location":"sqlx4k/io.github.smyrgeorge.sqlx4k.annotation/-repository/index.html","searchKeys":["Repository","annotation class Repository(val mapper: KClass<out RowMapper<*>>)","io.github.smyrgeorge.sqlx4k.annotation.Repository"]},{"name":"annotation class Table(val name: String)","description":"io.github.smyrgeorge.sqlx4k.annotation.Table","location":"sqlx4k/io.github.smyrgeorge.sqlx4k.annotation/-table/index.html","searchKeys":["Table","annotation class Table(val name: String)","io.github.smyrgeorge.sqlx4k.annotation.Table"]},{"name":"class Builder","description":"io.github.smyrgeorge.sqlx4k.ConnectionPool.Options.Builder","location":"sqlx4k/io.github.smyrgeorge.sqlx4k/-connection-pool/-options/-builder/index.html","searchKeys":["Builder","class Builder","io.github.smyrgeorge.sqlx4k.ConnectionPool.Options.Builder"]},{"name":"class ExtendedStatement(sql: String) : AbstractStatement","description":"io.github.smyrgeorge.sqlx4k.impl.statement.ExtendedStatement","location":"sqlx4k/io.github.smyrgeorge.sqlx4k.impl.statement/-extended-statement/index.html","searchKeys":["ExtendedStatement","class ExtendedStatement(sql: String) : AbstractStatement","io.github.smyrgeorge.sqlx4k.impl.statement.ExtendedStatement"]},{"name":"class IteratorImpl(rs: ResultSet) : Iterator<ResultSet.Row> ","description":"io.github.smyrgeorge.sqlx4k.ResultSet.IteratorImpl","location":"sqlx4k/io.github.smyrgeorge.sqlx4k/-result-set/-iterator-impl/index.html","searchKeys":["IteratorImpl","class IteratorImpl(rs: ResultSet) : Iterator<ResultSet.Row> ","io.github.smyrgeorge.sqlx4k.ResultSet.IteratorImpl"]},{"name":"class Metadata(columns: List<ResultSet.Metadata.Column>)","description":"io.github.smyrgeorge.sqlx4k.ResultSet.Metadata","location":"sqlx4k/io.github.smyrgeorge.sqlx4k/-result-set/-metadata/index.html","searchKeys":["Metadata","class Metadata(columns: List<ResultSet.Metadata.Column>)","io.github.smyrgeorge.sqlx4k.ResultSet.Metadata"]},{"name":"class ResultSet(val rows: List<ResultSet.Row>, val error: SQLError?, val metadata: ResultSet.Metadata) : Iterable<ResultSet.Row> ","description":"io.github.smyrgeorge.sqlx4k.ResultSet","location":"sqlx4k/io.github.smyrgeorge.sqlx4k/-result-set/index.html","searchKeys":["ResultSet","class ResultSet(val rows: List<ResultSet.Row>, val error: SQLError?, val metadata: ResultSet.Metadata) : Iterable<ResultSet.Row> ","io.github.smyrgeorge.sqlx4k.ResultSet"]},{"name":"class SQLError(val code: SQLError.Code, message: String? = null) : RuntimeException","description":"io.github.smyrgeorge.sqlx4k.SQLError","location":"sqlx4k/io.github.smyrgeorge.sqlx4k/-s-q-l-error/index.html","searchKeys":["SQLError","class SQLError(val code: SQLError.Code, message: String? = null) : RuntimeException","io.github.smyrgeorge.sqlx4k.SQLError"]},{"name":"class SimpleStatement(sql: String) : AbstractStatement","description":"io.github.smyrgeorge.sqlx4k.impl.statement.SimpleStatement","location":"sqlx4k/io.github.smyrgeorge.sqlx4k.impl.statement/-simple-statement/index.html","searchKeys":["SimpleStatement","class SimpleStatement(sql: String) : AbstractStatement","io.github.smyrgeorge.sqlx4k.impl.statement.SimpleStatement"]},{"name":"class TransactionContext(tx: Transaction) : CoroutineContext.Element, Transaction","description":"io.github.smyrgeorge.sqlx4k.impl.coroutines.TransactionContext","location":"sqlx4k/io.github.smyrgeorge.sqlx4k.impl.coroutines/-transaction-context/index.html","searchKeys":["TransactionContext","class TransactionContext(tx: Transaction) : CoroutineContext.Element, Transaction","io.github.smyrgeorge.sqlx4k.impl.coroutines.TransactionContext"]},{"name":"class ValueEncoderRegistry","description":"io.github.smyrgeorge.sqlx4k.Statement.ValueEncoderRegistry","location":"sqlx4k/io.github.smyrgeorge.sqlx4k/-statement/-value-encoder-registry/index.html","searchKeys":["ValueEncoderRegistry","class ValueEncoderRegistry","io.github.smyrgeorge.sqlx4k.Statement.ValueEncoderRegistry"]},{"name":"constructor()","description":"io.github.smyrgeorge.sqlx4k.ConnectionPool.Options.Builder.Builder","location":"sqlx4k/io.github.smyrgeorge.sqlx4k/-connection-pool/-options/-builder/-builder.html","searchKeys":["Builder","constructor()","io.github.smyrgeorge.sqlx4k.ConnectionPool.Options.Builder.Builder"]},{"name":"constructor()","description":"io.github.smyrgeorge.sqlx4k.Statement.ValueEncoderRegistry.ValueEncoderRegistry","location":"sqlx4k/io.github.smyrgeorge.sqlx4k/-statement/-value-encoder-registry/-value-encoder-registry.html","searchKeys":["ValueEncoderRegistry","constructor()","io.github.smyrgeorge.sqlx4k.Statement.ValueEncoderRegistry.ValueEncoderRegistry"]},{"name":"constructor(code: SQLError.Code, message: String? = null)","description":"io.github.smyrgeorge.sqlx4k.SQLError.SQLError","location":"sqlx4k/io.github.smyrgeorge.sqlx4k/-s-q-l-error/-s-q-l-error.html","searchKeys":["SQLError","constructor(code: SQLError.Code, message: String? = null)","io.github.smyrgeorge.sqlx4k.SQLError.SQLError"]},{"name":"constructor(columns: List<ResultSet.Metadata.Column>)","description":"io.github.smyrgeorge.sqlx4k.ResultSet.Metadata.Metadata","location":"sqlx4k/io.github.smyrgeorge.sqlx4k/-result-set/-metadata/-metadata.html","searchKeys":["Metadata","constructor(columns: List<ResultSet.Metadata.Column>)","io.github.smyrgeorge.sqlx4k.ResultSet.Metadata.Metadata"]},{"name":"constructor(columns: List<ResultSet.Row.Column>)","description":"io.github.smyrgeorge.sqlx4k.ResultSet.Row.Row","location":"sqlx4k/io.github.smyrgeorge.sqlx4k/-result-set/-row/-row.html","searchKeys":["Row","constructor(columns: List<ResultSet.Row.Column>)","io.github.smyrgeorge.sqlx4k.ResultSet.Row.Row"]},{"name":"constructor(minConnections: Int? = null, maxConnections: Int = 10, acquireTimeout: Duration? = null, idleTimeout: Duration? = null, maxLifetime: Duration? = null)","description":"io.github.smyrgeorge.sqlx4k.ConnectionPool.Options.Options","location":"sqlx4k/io.github.smyrgeorge.sqlx4k/-connection-pool/-options/-options.html","searchKeys":["Options","constructor(minConnections: Int? = null, maxConnections: Int = 10, acquireTimeout: Duration? = null, idleTimeout: Duration? = null, maxLifetime: Duration? = null)","io.github.smyrgeorge.sqlx4k.ConnectionPool.Options.Options"]},{"name":"constructor(name: String, content: String, checksum: String)","description":"io.github.smyrgeorge.sqlx4k.impl.migrate.MigrationFile.MigrationFile","location":"sqlx4k/io.github.smyrgeorge.sqlx4k.impl.migrate/-migration-file/-migration-file.html","searchKeys":["MigrationFile","constructor(name: String, content: String, checksum: String)","io.github.smyrgeorge.sqlx4k.impl.migrate.MigrationFile.MigrationFile"]},{"name":"constructor(ordinal: Int, name: String, type: String)","description":"io.github.smyrgeorge.sqlx4k.ResultSet.Metadata.Column.Column","location":"sqlx4k/io.github.smyrgeorge.sqlx4k/-result-set/-metadata/-column/-column.html","searchKeys":["Column","constructor(ordinal: Int, name: String, type: String)","io.github.smyrgeorge.sqlx4k.ResultSet.Metadata.Column.Column"]},{"name":"constructor(ordinal: Int, name: String, type: String, value: String?)","description":"io.github.smyrgeorge.sqlx4k.ResultSet.Row.Column.Column","location":"sqlx4k/io.github.smyrgeorge.sqlx4k/-result-set/-row/-column/-column.html","searchKeys":["Column","constructor(ordinal: Int, name: String, type: String, value: String?)","io.github.smyrgeorge.sqlx4k.ResultSet.Row.Column.Column"]},{"name":"constructor(rows: List<ResultSet.Row>, error: SQLError?, metadata: ResultSet.Metadata)","description":"io.github.smyrgeorge.sqlx4k.ResultSet.ResultSet","location":"sqlx4k/io.github.smyrgeorge.sqlx4k/-result-set/-result-set.html","searchKeys":["ResultSet","constructor(rows: List<ResultSet.Row>, error: SQLError?, metadata: ResultSet.Metadata)","io.github.smyrgeorge.sqlx4k.ResultSet.ResultSet"]},{"name":"constructor(rs: ResultSet)","description":"io.github.smyrgeorge.sqlx4k.ResultSet.IteratorImpl.IteratorImpl","location":"sqlx4k/io.github.smyrgeorge.sqlx4k/-result-set/-iterator-impl/-iterator-impl.html","searchKeys":["IteratorImpl","constructor(rs: ResultSet)","io.github.smyrgeorge.sqlx4k.ResultSet.IteratorImpl.IteratorImpl"]},{"name":"constructor(sql: String)","description":"io.github.smyrgeorge.sqlx4k.impl.statement.AbstractStatement.AbstractStatement","location":"sqlx4k/io.github.smyrgeorge.sqlx4k.impl.statement/-abstract-statement/-abstract-statement.html","searchKeys":["AbstractStatement","constructor(sql: String)","io.github.smyrgeorge.sqlx4k.impl.statement.AbstractStatement.AbstractStatement"]},{"name":"constructor(sql: String)","description":"io.github.smyrgeorge.sqlx4k.impl.statement.ExtendedStatement.ExtendedStatement","location":"sqlx4k/io.github.smyrgeorge.sqlx4k.impl.statement/-extended-statement/-extended-statement.html","searchKeys":["ExtendedStatement","constructor(sql: String)","io.github.smyrgeorge.sqlx4k.impl.statement.ExtendedStatement.ExtendedStatement"]},{"name":"constructor(sql: String)","description":"io.github.smyrgeorge.sqlx4k.impl.statement.SimpleStatement.SimpleStatement","location":"sqlx4k/io.github.smyrgeorge.sqlx4k.impl.statement/-simple-statement/-simple-statement.html","searchKeys":["SimpleStatement","constructor(sql: String)","io.github.smyrgeorge.sqlx4k.impl.statement.SimpleStatement.SimpleStatement"]},{"name":"constructor(total: Int, applied: Int, validated: Int, executionTime: Duration)","description":"io.github.smyrgeorge.sqlx4k.impl.migrate.Migrator.Results.Results","location":"sqlx4k/io.github.smyrgeorge.sqlx4k.impl.migrate/-migrator/-results/-results.html","searchKeys":["Results","constructor(total: Int, applied: Int, validated: Int, executionTime: Duration)","io.github.smyrgeorge.sqlx4k.impl.migrate.Migrator.Results.Results"]},{"name":"constructor(tx: Transaction)","description":"io.github.smyrgeorge.sqlx4k.impl.coroutines.TransactionContext.TransactionContext","location":"sqlx4k/io.github.smyrgeorge.sqlx4k.impl.coroutines/-transaction-context/-transaction-context.html","searchKeys":["TransactionContext","constructor(tx: Transaction)","io.github.smyrgeorge.sqlx4k.impl.coroutines.TransactionContext.TransactionContext"]},{"name":"constructor(value: Iterable<*>)","description":"io.github.smyrgeorge.sqlx4k.impl.types.NoWrappingTuple.NoWrappingTuple","location":"sqlx4k/io.github.smyrgeorge.sqlx4k.impl.types/-no-wrapping-tuple/-no-wrapping-tuple.html","searchKeys":["NoWrappingTuple","constructor(value: Iterable<*>)","io.github.smyrgeorge.sqlx4k.impl.types.NoWrappingTuple.NoWrappingTuple"]},{"name":"constructor(value: String)","description":"io.github.smyrgeorge.sqlx4k.impl.types.NoQuotingString.NoQuotingString","location":"sqlx4k/io.github.smyrgeorge.sqlx4k.impl.types/-no-quoting-string/-no-quoting-string.html","searchKeys":["NoQuotingString","constructor(value: String)","io.github.smyrgeorge.sqlx4k.impl.types.NoQuotingString.NoQuotingString"]},{"name":"constructor(version: Long, name: String, installedOn: Instant, checksum: String, executionTime: Long)","description":"io.github.smyrgeorge.sqlx4k.impl.migrate.Migration.Migration","location":"sqlx4k/io.github.smyrgeorge.sqlx4k.impl.migrate/-migration/-migration.html","searchKeys":["Migration","constructor(version: Long, name: String, installedOn: Instant, checksum: String, executionTime: Long)","io.github.smyrgeorge.sqlx4k.impl.migrate.Migration.Migration"]},{"name":"data class Column(val ordinal: Int, val name: String, val type: String)","description":"io.github.smyrgeorge.sqlx4k.ResultSet.Metadata.Column","location":"sqlx4k/io.github.smyrgeorge.sqlx4k/-result-set/-metadata/-column/index.html","searchKeys":["Column","data class Column(val ordinal: Int, val name: String, val type: String)","io.github.smyrgeorge.sqlx4k.ResultSet.Metadata.Column"]},{"name":"data class Column(val ordinal: Int, val name: String, val type: String, value: String?)","description":"io.github.smyrgeorge.sqlx4k.ResultSet.Row.Column","location":"sqlx4k/io.github.smyrgeorge.sqlx4k/-result-set/-row/-column/index.html","searchKeys":["Column","data class Column(val ordinal: Int, val name: String, val type: String, value: String?)","io.github.smyrgeorge.sqlx4k.ResultSet.Row.Column"]},{"name":"data class Migration(val version: Long, val name: String, val installedOn: Instant, val checksum: String, val executionTime: Long)","description":"io.github.smyrgeorge.sqlx4k.impl.migrate.Migration","location":"sqlx4k/io.github.smyrgeorge.sqlx4k.impl.migrate/-migration/index.html","searchKeys":["Migration","data class Migration(val version: Long, val name: String, val installedOn: Instant, val checksum: String, val executionTime: Long)","io.github.smyrgeorge.sqlx4k.impl.migrate.Migration"]},{"name":"data class MigrationFile(val name: String, val content: String, val checksum: String)","description":"io.github.smyrgeorge.sqlx4k.impl.migrate.MigrationFile","location":"sqlx4k/io.github.smyrgeorge.sqlx4k.impl.migrate/-migration-file/index.html","searchKeys":["MigrationFile","data class MigrationFile(val name: String, val content: String, val checksum: String)","io.github.smyrgeorge.sqlx4k.impl.migrate.MigrationFile"]},{"name":"data class Options(val minConnections: Int? = null, val maxConnections: Int = 10, val acquireTimeout: Duration? = null, val idleTimeout: Duration? = null, val maxLifetime: Duration? = null)","description":"io.github.smyrgeorge.sqlx4k.ConnectionPool.Options","location":"sqlx4k/io.github.smyrgeorge.sqlx4k/-connection-pool/-options/index.html","searchKeys":["Options","data class Options(val minConnections: Int? = null, val maxConnections: Int = 10, val acquireTimeout: Duration? = null, val idleTimeout: Duration? = null, val maxLifetime: Duration? = null)","io.github.smyrgeorge.sqlx4k.ConnectionPool.Options"]},{"name":"data class Results(val total: Int, val applied: Int, val validated: Int, val executionTime: Duration)","description":"io.github.smyrgeorge.sqlx4k.impl.migrate.Migrator.Results","location":"sqlx4k/io.github.smyrgeorge.sqlx4k.impl.migrate/-migrator/-results/index.html","searchKeys":["Results","data class Results(val total: Int, val applied: Int, val validated: Int, val executionTime: Duration)","io.github.smyrgeorge.sqlx4k.impl.migrate.Migrator.Results"]},{"name":"data class Row(columns: List<ResultSet.Row.Column>)","description":"io.github.smyrgeorge.sqlx4k.ResultSet.Row","location":"sqlx4k/io.github.smyrgeorge.sqlx4k/-result-set/-row/index.html","searchKeys":["Row","data class Row(columns: List<ResultSet.Row.Column>)","io.github.smyrgeorge.sqlx4k.ResultSet.Row"]},{"name":"enum Code : Enum<SQLError.Code> ","description":"io.github.smyrgeorge.sqlx4k.SQLError.Code","location":"sqlx4k/io.github.smyrgeorge.sqlx4k/-s-q-l-error/-code/index.html","searchKeys":["Code","enum Code : Enum<SQLError.Code> ","io.github.smyrgeorge.sqlx4k.SQLError.Code"]},{"name":"enum Dialect : Enum<Dialect> ","description":"io.github.smyrgeorge.sqlx4k.Dialect","location":"sqlx4k/io.github.smyrgeorge.sqlx4k/-dialect/index.html","searchKeys":["Dialect","enum Dialect : Enum<Dialect> ","io.github.smyrgeorge.sqlx4k.Dialect"]},{"name":"enum Status : Enum<Connection.Status> ","description":"io.github.smyrgeorge.sqlx4k.Connection.Status","location":"sqlx4k/io.github.smyrgeorge.sqlx4k/-connection/-status/index.html","searchKeys":["Status","enum Status : Enum<Connection.Status> ","io.github.smyrgeorge.sqlx4k.Connection.Status"]},{"name":"enum Status : Enum<Transaction.Status> ","description":"io.github.smyrgeorge.sqlx4k.Transaction.Status","location":"sqlx4k/io.github.smyrgeorge.sqlx4k/-transaction/-status/index.html","searchKeys":["Status","enum Status : Enum<Transaction.Status> ","io.github.smyrgeorge.sqlx4k.Transaction.Status"]},{"name":"fun <Error class: unknown class>.throwIfError()","description":"io.github.smyrgeorge.sqlx4k.impl.extensions.throwIfError","location":"sqlx4k/io.github.smyrgeorge.sqlx4k.impl.extensions/throw-if-error.html","searchKeys":["throwIfError","fun <Error class: unknown class>.throwIfError()","io.github.smyrgeorge.sqlx4k.impl.extensions.throwIfError"]},{"name":"fun <Error class: unknown class>.toResultSet(): ResultSet","description":"io.github.smyrgeorge.sqlx4k.impl.extensions.toResultSet","location":"sqlx4k/io.github.smyrgeorge.sqlx4k.impl.extensions/to-result-set.html","searchKeys":["toResultSet","fun <Error class: unknown class>.toResultSet(): ResultSet","io.github.smyrgeorge.sqlx4k.impl.extensions.toResultSet"]},{"name":"fun <Error class: unknown class><<Error class: unknown class>>?.rowsAffectedOrError(): Long","description":"io.github.smyrgeorge.sqlx4k.impl.extensions.rowsAffectedOrError","location":"sqlx4k/io.github.smyrgeorge.sqlx4k.impl.extensions/rows-affected-or-error.html","searchKeys":["rowsAffectedOrError","fun <Error class: unknown class><<Error class: unknown class>>?.rowsAffectedOrError(): Long","io.github.smyrgeorge.sqlx4k.impl.extensions.rowsAffectedOrError"]},{"name":"fun <Error class: unknown class><<Error class: unknown class>>?.rtOrError(): <Error class: unknown class><out <Error class: unknown class>>","description":"io.github.smyrgeorge.sqlx4k.impl.extensions.rtOrError","location":"sqlx4k/io.github.smyrgeorge.sqlx4k.impl.extensions/rt-or-error.html","searchKeys":["rtOrError","fun <Error class: unknown class><<Error class: unknown class>>?.rtOrError(): <Error class: unknown class><out <Error class: unknown class>>","io.github.smyrgeorge.sqlx4k.impl.extensions.rtOrError"]},{"name":"fun <Error class: unknown class><<Error class: unknown class>>?.throwIfError()","description":"io.github.smyrgeorge.sqlx4k.impl.extensions.throwIfError","location":"sqlx4k/io.github.smyrgeorge.sqlx4k.impl.extensions/throw-if-error.html","searchKeys":["throwIfError","fun <Error class: unknown class><<Error class: unknown class>>?.throwIfError()","io.github.smyrgeorge.sqlx4k.impl.extensions.throwIfError"]},{"name":"fun Any?.encodeValue(encoders: Statement.ValueEncoderRegistry): String","description":"io.github.smyrgeorge.sqlx4k.impl.extensions.encodeValue","location":"sqlx4k/io.github.smyrgeorge.sqlx4k.impl.extensions/encode-value.html","searchKeys":["encodeValue","fun Any?.encodeValue(encoders: Statement.ValueEncoderRegistry): String","io.github.smyrgeorge.sqlx4k.impl.extensions.encodeValue"]},{"name":"fun Instant.toTimestampString(timeZone: TimeZone = TimeZone.UTC): String","description":"io.github.smyrgeorge.sqlx4k.impl.extensions.toTimestampString","location":"sqlx4k/io.github.smyrgeorge.sqlx4k.impl.extensions/to-timestamp-string.html","searchKeys":["toTimestampString","fun Instant.toTimestampString(timeZone: TimeZone = TimeZone.UTC): String","io.github.smyrgeorge.sqlx4k.impl.extensions.toTimestampString"]},{"name":"fun ResultSet.Row.Column.asBoolean(): Boolean","description":"io.github.smyrgeorge.sqlx4k.impl.extensions.asBoolean","location":"sqlx4k/io.github.smyrgeorge.sqlx4k.impl.extensions/as-boolean.html","searchKeys":["asBoolean","fun ResultSet.Row.Column.asBoolean(): Boolean","io.github.smyrgeorge.sqlx4k.impl.extensions.asBoolean"]},{"name":"fun ResultSet.Row.Column.asBooleanOrNull(): Boolean?","description":"io.github.smyrgeorge.sqlx4k.impl.extensions.asBooleanOrNull","location":"sqlx4k/io.github.smyrgeorge.sqlx4k.impl.extensions/as-boolean-or-null.html","searchKeys":["asBooleanOrNull","fun ResultSet.Row.Column.asBooleanOrNull(): Boolean?","io.github.smyrgeorge.sqlx4k.impl.extensions.asBooleanOrNull"]},{"name":"fun ResultSet.Row.Column.asByteArray(): ByteArray","description":"io.github.smyrgeorge.sqlx4k.impl.extensions.asByteArray","location":"sqlx4k/io.github.smyrgeorge.sqlx4k.impl.extensions/as-byte-array.html","searchKeys":["asByteArray","fun ResultSet.Row.Column.asByteArray(): ByteArray","io.github.smyrgeorge.sqlx4k.impl.extensions.asByteArray"]},{"name":"fun ResultSet.Row.Column.asByteArrayOrNull(): ByteArray?","description":"io.github.smyrgeorge.sqlx4k.impl.extensions.asByteArrayOrNull","location":"sqlx4k/io.github.smyrgeorge.sqlx4k.impl.extensions/as-byte-array-or-null.html","searchKeys":["asByteArrayOrNull","fun ResultSet.Row.Column.asByteArrayOrNull(): ByteArray?","io.github.smyrgeorge.sqlx4k.impl.extensions.asByteArrayOrNull"]},{"name":"fun ResultSet.Row.Column.asChar(): Char","description":"io.github.smyrgeorge.sqlx4k.impl.extensions.asChar","location":"sqlx4k/io.github.smyrgeorge.sqlx4k.impl.extensions/as-char.html","searchKeys":["asChar","fun ResultSet.Row.Column.asChar(): Char","io.github.smyrgeorge.sqlx4k.impl.extensions.asChar"]},{"name":"fun ResultSet.Row.Column.asCharOrNull(): Char?","description":"io.github.smyrgeorge.sqlx4k.impl.extensions.asCharOrNull","location":"sqlx4k/io.github.smyrgeorge.sqlx4k.impl.extensions/as-char-or-null.html","searchKeys":["asCharOrNull","fun ResultSet.Row.Column.asCharOrNull(): Char?","io.github.smyrgeorge.sqlx4k.impl.extensions.asCharOrNull"]},{"name":"fun ResultSet.Row.Column.asDouble(): Double","description":"io.github.smyrgeorge.sqlx4k.impl.extensions.asDouble","location":"sqlx4k/io.github.smyrgeorge.sqlx4k.impl.extensions/as-double.html","searchKeys":["asDouble","fun ResultSet.Row.Column.asDouble(): Double","io.github.smyrgeorge.sqlx4k.impl.extensions.asDouble"]},{"name":"fun ResultSet.Row.Column.asDoubleOrNull(): Double?","description":"io.github.smyrgeorge.sqlx4k.impl.extensions.asDoubleOrNull","location":"sqlx4k/io.github.smyrgeorge.sqlx4k.impl.extensions/as-double-or-null.html","searchKeys":["asDoubleOrNull","fun ResultSet.Row.Column.asDoubleOrNull(): Double?","io.github.smyrgeorge.sqlx4k.impl.extensions.asDoubleOrNull"]},{"name":"fun ResultSet.Row.Column.asFloat(): Float","description":"io.github.smyrgeorge.sqlx4k.impl.extensions.asFloat","location":"sqlx4k/io.github.smyrgeorge.sqlx4k.impl.extensions/as-float.html","searchKeys":["asFloat","fun ResultSet.Row.Column.asFloat(): Float","io.github.smyrgeorge.sqlx4k.impl.extensions.asFloat"]},{"name":"fun ResultSet.Row.Column.asFloatOrNull(): Float?","description":"io.github.smyrgeorge.sqlx4k.impl.extensions.asFloatOrNull","location":"sqlx4k/io.github.smyrgeorge.sqlx4k.impl.extensions/as-float-or-null.html","searchKeys":["asFloatOrNull","fun ResultSet.Row.Column.asFloatOrNull(): Float?","io.github.smyrgeorge.sqlx4k.impl.extensions.asFloatOrNull"]},{"name":"fun ResultSet.Row.Column.asInstant(): Instant","description":"io.github.smyrgeorge.sqlx4k.impl.extensions.asInstant","location":"sqlx4k/io.github.smyrgeorge.sqlx4k.impl.extensions/as-instant.html","searchKeys":["asInstant","fun ResultSet.Row.Column.asInstant(): Instant","io.github.smyrgeorge.sqlx4k.impl.extensions.asInstant"]},{"name":"fun ResultSet.Row.Column.asInstantOrNull(): Instant?","description":"io.github.smyrgeorge.sqlx4k.impl.extensions.asInstantOrNull","location":"sqlx4k/io.github.smyrgeorge.sqlx4k.impl.extensions/as-instant-or-null.html","searchKeys":["asInstantOrNull","fun ResultSet.Row.Column.asInstantOrNull(): Instant?","io.github.smyrgeorge.sqlx4k.impl.extensions.asInstantOrNull"]},{"name":"fun ResultSet.Row.Column.asInt(): Int","description":"io.github.smyrgeorge.sqlx4k.impl.extensions.asInt","location":"sqlx4k/io.github.smyrgeorge.sqlx4k.impl.extensions/as-int.html","searchKeys":["asInt","fun ResultSet.Row.Column.asInt(): Int","io.github.smyrgeorge.sqlx4k.impl.extensions.asInt"]},{"name":"fun ResultSet.Row.Column.asIntOrNull(): Int?","description":"io.github.smyrgeorge.sqlx4k.impl.extensions.asIntOrNull","location":"sqlx4k/io.github.smyrgeorge.sqlx4k.impl.extensions/as-int-or-null.html","searchKeys":["asIntOrNull","fun ResultSet.Row.Column.asIntOrNull(): Int?","io.github.smyrgeorge.sqlx4k.impl.extensions.asIntOrNull"]},{"name":"fun ResultSet.Row.Column.asLocalDate(): LocalDate","description":"io.github.smyrgeorge.sqlx4k.impl.extensions.asLocalDate","location":"sqlx4k/io.github.smyrgeorge.sqlx4k.impl.extensions/as-local-date.html","searchKeys":["asLocalDate","fun ResultSet.Row.Column.asLocalDate(): LocalDate","io.github.smyrgeorge.sqlx4k.impl.extensions.asLocalDate"]},{"name":"fun ResultSet.Row.Column.asLocalDateOrNull(): LocalDate?","description":"io.github.smyrgeorge.sqlx4k.impl.extensions.asLocalDateOrNull","location":"sqlx4k/io.github.smyrgeorge.sqlx4k.impl.extensions/as-local-date-or-null.html","searchKeys":["asLocalDateOrNull","fun ResultSet.Row.Column.asLocalDateOrNull(): LocalDate?","io.github.smyrgeorge.sqlx4k.impl.extensions.asLocalDateOrNull"]},{"name":"fun ResultSet.Row.Column.asLocalDateTime(): LocalDateTime","description":"io.github.smyrgeorge.sqlx4k.impl.extensions.asLocalDateTime","location":"sqlx4k/io.github.smyrgeorge.sqlx4k.impl.extensions/as-local-date-time.html","searchKeys":["asLocalDateTime","fun ResultSet.Row.Column.asLocalDateTime(): LocalDateTime","io.github.smyrgeorge.sqlx4k.impl.extensions.asLocalDateTime"]},{"name":"fun ResultSet.Row.Column.asLocalDateTimeOrNull(): LocalDateTime?","description":"io.github.smyrgeorge.sqlx4k.impl.extensions.asLocalDateTimeOrNull","location":"sqlx4k/io.github.smyrgeorge.sqlx4k.impl.extensions/as-local-date-time-or-null.html","searchKeys":["asLocalDateTimeOrNull","fun ResultSet.Row.Column.asLocalDateTimeOrNull(): LocalDateTime?","io.github.smyrgeorge.sqlx4k.impl.extensions.asLocalDateTimeOrNull"]},{"name":"fun ResultSet.Row.Column.asLocalTime(): LocalTime","description":"io.github.smyrgeorge.sqlx4k.impl.extensions.asLocalTime","location":"sqlx4k/io.github.smyrgeorge.sqlx4k.impl.extensions/as-local-time.html","searchKeys":["asLocalTime","fun ResultSet.Row.Column.asLocalTime(): LocalTime","io.github.smyrgeorge.sqlx4k.impl.extensions.asLocalTime"]},{"name":"fun ResultSet.Row.Column.asLocalTimeOrNull(): LocalTime?","description":"io.github.smyrgeorge.sqlx4k.impl.extensions.asLocalTimeOrNull","location":"sqlx4k/io.github.smyrgeorge.sqlx4k.impl.extensions/as-local-time-or-null.html","searchKeys":["asLocalTimeOrNull","fun ResultSet.Row.Column.asLocalTimeOrNull(): LocalTime?","io.github.smyrgeorge.sqlx4k.impl.extensions.asLocalTimeOrNull"]},{"name":"fun ResultSet.Row.Column.asLong(): Long","description":"io.github.smyrgeorge.sqlx4k.impl.extensions.asLong","location":"sqlx4k/io.github.smyrgeorge.sqlx4k.impl.extensions/as-long.html","searchKeys":["asLong","fun ResultSet.Row.Column.asLong(): Long","io.github.smyrgeorge.sqlx4k.impl.extensions.asLong"]},{"name":"fun ResultSet.Row.Column.asLongOrNull(): Long?","description":"io.github.smyrgeorge.sqlx4k.impl.extensions.asLongOrNull","location":"sqlx4k/io.github.smyrgeorge.sqlx4k.impl.extensions/as-long-or-null.html","searchKeys":["asLongOrNull","fun ResultSet.Row.Column.asLongOrNull(): Long?","io.github.smyrgeorge.sqlx4k.impl.extensions.asLongOrNull"]},{"name":"fun ResultSet.Row.Column.asShort(): Short","description":"io.github.smyrgeorge.sqlx4k.impl.extensions.asShort","location":"sqlx4k/io.github.smyrgeorge.sqlx4k.impl.extensions/as-short.html","searchKeys":["asShort","fun ResultSet.Row.Column.asShort(): Short","io.github.smyrgeorge.sqlx4k.impl.extensions.asShort"]},{"name":"fun ResultSet.Row.Column.asShortOrNull(): Short?","description":"io.github.smyrgeorge.sqlx4k.impl.extensions.asShortOrNull","location":"sqlx4k/io.github.smyrgeorge.sqlx4k.impl.extensions/as-short-or-null.html","searchKeys":["asShortOrNull","fun ResultSet.Row.Column.asShortOrNull(): Short?","io.github.smyrgeorge.sqlx4k.impl.extensions.asShortOrNull"]},{"name":"fun ResultSet.Row.Column.asUuid(): Uuid","description":"io.github.smyrgeorge.sqlx4k.impl.extensions.asUuid","location":"sqlx4k/io.github.smyrgeorge.sqlx4k.impl.extensions/as-uuid.html","searchKeys":["asUuid","fun ResultSet.Row.Column.asUuid(): Uuid","io.github.smyrgeorge.sqlx4k.impl.extensions.asUuid"]},{"name":"fun ResultSet.Row.Column.asUuidOrNull(): Uuid?","description":"io.github.smyrgeorge.sqlx4k.impl.extensions.asUuidOrNull","location":"sqlx4k/io.github.smyrgeorge.sqlx4k.impl.extensions/as-uuid-or-null.html","searchKeys":["asUuidOrNull","fun ResultSet.Row.Column.asUuidOrNull(): Uuid?","io.github.smyrgeorge.sqlx4k.impl.extensions.asUuidOrNull"]},{"name":"fun acquireTimeout(acquireTimeout: Duration): ConnectionPool.Options.Builder","description":"io.github.smyrgeorge.sqlx4k.ConnectionPool.Options.Builder.acquireTimeout","location":"sqlx4k/io.github.smyrgeorge.sqlx4k/-connection-pool/-options/-builder/acquire-timeout.html","searchKeys":["acquireTimeout","fun acquireTimeout(acquireTimeout: Duration): ConnectionPool.Options.Builder","io.github.smyrgeorge.sqlx4k.ConnectionPool.Options.Builder.acquireTimeout"]},{"name":"fun asString(): String","description":"io.github.smyrgeorge.sqlx4k.ResultSet.Row.Column.asString","location":"sqlx4k/io.github.smyrgeorge.sqlx4k/-result-set/-row/-column/as-string.html","searchKeys":["asString","fun asString(): String","io.github.smyrgeorge.sqlx4k.ResultSet.Row.Column.asString"]},{"name":"fun asStringOrNull(): String?","description":"io.github.smyrgeorge.sqlx4k.ResultSet.Row.Column.asStringOrNull","location":"sqlx4k/io.github.smyrgeorge.sqlx4k/-result-set/-row/-column/as-string-or-null.html","searchKeys":["asStringOrNull","fun asStringOrNull(): String?","io.github.smyrgeorge.sqlx4k.ResultSet.Row.Column.asStringOrNull"]},{"name":"fun build(): ConnectionPool.Options","description":"io.github.smyrgeorge.sqlx4k.ConnectionPool.Options.Builder.build","location":"sqlx4k/io.github.smyrgeorge.sqlx4k/-connection-pool/-options/-builder/build.html","searchKeys":["build","fun build(): ConnectionPool.Options","io.github.smyrgeorge.sqlx4k.ConnectionPool.Options.Builder.build"]},{"name":"fun builder(): ConnectionPool.Options.Builder","description":"io.github.smyrgeorge.sqlx4k.ConnectionPool.Options.Companion.builder","location":"sqlx4k/io.github.smyrgeorge.sqlx4k/-connection-pool/-options/-companion/builder.html","searchKeys":["builder","fun builder(): ConnectionPool.Options.Builder","io.github.smyrgeorge.sqlx4k.ConnectionPool.Options.Companion.builder"]},{"name":"fun create(sql: String): Statement","description":"io.github.smyrgeorge.sqlx4k.Statement.Companion.create","location":"sqlx4k/io.github.smyrgeorge.sqlx4k/-statement/-companion/create.html","searchKeys":["create","fun create(sql: String): Statement","io.github.smyrgeorge.sqlx4k.Statement.Companion.create"]},{"name":"fun ex(): Nothing","description":"io.github.smyrgeorge.sqlx4k.SQLError.ex","location":"sqlx4k/io.github.smyrgeorge.sqlx4k/-s-q-l-error/ex.html","searchKeys":["ex","fun ex(): Nothing","io.github.smyrgeorge.sqlx4k.SQLError.ex"]},{"name":"fun get(name: String): ResultSet.Row.Column","description":"io.github.smyrgeorge.sqlx4k.ResultSet.Row.get","location":"sqlx4k/io.github.smyrgeorge.sqlx4k/-result-set/-row/get.html","searchKeys":["get","fun get(name: String): ResultSet.Row.Column","io.github.smyrgeorge.sqlx4k.ResultSet.Row.get"]},{"name":"fun get(ordinal: Int): ResultSet.Row.Column","description":"io.github.smyrgeorge.sqlx4k.ResultSet.Row.get","location":"sqlx4k/io.github.smyrgeorge.sqlx4k/-result-set/-row/get.html","searchKeys":["get","fun get(ordinal: Int): ResultSet.Row.Column","io.github.smyrgeorge.sqlx4k.ResultSet.Row.get"]},{"name":"fun get(type: KClass<*>): Statement.ValueEncoder<Any>?","description":"io.github.smyrgeorge.sqlx4k.Statement.ValueEncoderRegistry.get","location":"sqlx4k/io.github.smyrgeorge.sqlx4k/-statement/-value-encoder-registry/get.html","searchKeys":["get","fun get(type: KClass<*>): Statement.ValueEncoder<Any>?","io.github.smyrgeorge.sqlx4k.Statement.ValueEncoderRegistry.get"]},{"name":"fun getColumn(index: Int): ResultSet.Metadata.Column","description":"io.github.smyrgeorge.sqlx4k.ResultSet.Metadata.getColumn","location":"sqlx4k/io.github.smyrgeorge.sqlx4k/-result-set/-metadata/get-column.html","searchKeys":["getColumn","fun getColumn(index: Int): ResultSet.Metadata.Column","io.github.smyrgeorge.sqlx4k.ResultSet.Metadata.getColumn"]},{"name":"fun getColumn(name: String): ResultSet.Metadata.Column","description":"io.github.smyrgeorge.sqlx4k.ResultSet.Metadata.getColumn","location":"sqlx4k/io.github.smyrgeorge.sqlx4k/-result-set/-metadata/get-column.html","searchKeys":["getColumn","fun getColumn(name: String): ResultSet.Metadata.Column","io.github.smyrgeorge.sqlx4k.ResultSet.Metadata.getColumn"]},{"name":"fun getColumnCount(): Int","description":"io.github.smyrgeorge.sqlx4k.ResultSet.Metadata.getColumnCount","location":"sqlx4k/io.github.smyrgeorge.sqlx4k/-result-set/-metadata/get-column-count.html","searchKeys":["getColumnCount","fun getColumnCount(): Int","io.github.smyrgeorge.sqlx4k.ResultSet.Metadata.getColumnCount"]},{"name":"fun idleTimeout(idleTimeout: Duration): ConnectionPool.Options.Builder","description":"io.github.smyrgeorge.sqlx4k.ConnectionPool.Options.Builder.idleTimeout","location":"sqlx4k/io.github.smyrgeorge.sqlx4k/-connection-pool/-options/-builder/idle-timeout.html","searchKeys":["idleTimeout","fun idleTimeout(idleTimeout: Duration): ConnectionPool.Options.Builder","io.github.smyrgeorge.sqlx4k.ConnectionPool.Options.Builder.idleTimeout"]},{"name":"fun isError(): Boolean","description":"io.github.smyrgeorge.sqlx4k.ResultSet.isError","location":"sqlx4k/io.github.smyrgeorge.sqlx4k/-result-set/is-error.html","searchKeys":["isError","fun isError(): Boolean","io.github.smyrgeorge.sqlx4k.ResultSet.isError"]},{"name":"fun maxConnections(maxConnections: Int): ConnectionPool.Options.Builder","description":"io.github.smyrgeorge.sqlx4k.ConnectionPool.Options.Builder.maxConnections","location":"sqlx4k/io.github.smyrgeorge.sqlx4k/-connection-pool/-options/-builder/max-connections.html","searchKeys":["maxConnections","fun maxConnections(maxConnections: Int): ConnectionPool.Options.Builder","io.github.smyrgeorge.sqlx4k.ConnectionPool.Options.Builder.maxConnections"]},{"name":"fun maxLifetime(maxLifetime: Duration): ConnectionPool.Options.Builder","description":"io.github.smyrgeorge.sqlx4k.ConnectionPool.Options.Builder.maxLifetime","location":"sqlx4k/io.github.smyrgeorge.sqlx4k/-connection-pool/-options/-builder/max-lifetime.html","searchKeys":["maxLifetime","fun maxLifetime(maxLifetime: Duration): ConnectionPool.Options.Builder","io.github.smyrgeorge.sqlx4k.ConnectionPool.Options.Builder.maxLifetime"]},{"name":"fun minConnections(minConnections: Int): ConnectionPool.Options.Builder","description":"io.github.smyrgeorge.sqlx4k.ConnectionPool.Options.Builder.minConnections","location":"sqlx4k/io.github.smyrgeorge.sqlx4k/-connection-pool/-options/-builder/min-connections.html","searchKeys":["minConnections","fun minConnections(minConnections: Int): ConnectionPool.Options.Builder","io.github.smyrgeorge.sqlx4k.ConnectionPool.Options.Builder.minConnections"]},{"name":"fun register(type: KClass<*>, renderer: Statement.ValueEncoder<*>): Statement.ValueEncoderRegistry","description":"io.github.smyrgeorge.sqlx4k.Statement.ValueEncoderRegistry.register","location":"sqlx4k/io.github.smyrgeorge.sqlx4k/-statement/-value-encoder-registry/register.html","searchKeys":["register","fun register(type: KClass<*>, renderer: Statement.ValueEncoder<*>): Statement.ValueEncoderRegistry","io.github.smyrgeorge.sqlx4k.Statement.ValueEncoderRegistry.register"]},{"name":"fun throwIfError()","description":"io.github.smyrgeorge.sqlx4k.ResultSet.throwIfError","location":"sqlx4k/io.github.smyrgeorge.sqlx4k/-result-set/throw-if-error.html","searchKeys":["throwIfError","fun throwIfError()","io.github.smyrgeorge.sqlx4k.ResultSet.throwIfError"]},{"name":"fun toMetadata(): ResultSet.Metadata","description":"io.github.smyrgeorge.sqlx4k.ResultSet.Row.toMetadata","location":"sqlx4k/io.github.smyrgeorge.sqlx4k/-result-set/-row/to-metadata.html","searchKeys":["toMetadata","fun toMetadata(): ResultSet.Metadata","io.github.smyrgeorge.sqlx4k.ResultSet.Row.toMetadata"]},{"name":"fun toResult(): Result<ResultSet>","description":"io.github.smyrgeorge.sqlx4k.ResultSet.toResult","location":"sqlx4k/io.github.smyrgeorge.sqlx4k/-result-set/to-result.html","searchKeys":["toResult","fun toResult(): Result<ResultSet>","io.github.smyrgeorge.sqlx4k.ResultSet.toResult"]},{"name":"fun unregister(type: KClass<*>): Statement.ValueEncoderRegistry","description":"io.github.smyrgeorge.sqlx4k.Statement.ValueEncoderRegistry.unregister","location":"sqlx4k/io.github.smyrgeorge.sqlx4k/-statement/-value-encoder-registry/unregister.html","searchKeys":["unregister","fun unregister(type: KClass<*>): Statement.ValueEncoderRegistry","io.github.smyrgeorge.sqlx4k.Statement.ValueEncoderRegistry.unregister"]},{"name":"fun valueOf(value: String): Connection.Status","description":"io.github.smyrgeorge.sqlx4k.Connection.Status.valueOf","location":"sqlx4k/io.github.smyrgeorge.sqlx4k/-connection/-status/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): Connection.Status","io.github.smyrgeorge.sqlx4k.Connection.Status.valueOf"]},{"name":"fun valueOf(value: String): Dialect","description":"io.github.smyrgeorge.sqlx4k.Dialect.valueOf","location":"sqlx4k/io.github.smyrgeorge.sqlx4k/-dialect/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): Dialect","io.github.smyrgeorge.sqlx4k.Dialect.valueOf"]},{"name":"fun valueOf(value: String): SQLError.Code","description":"io.github.smyrgeorge.sqlx4k.SQLError.Code.valueOf","location":"sqlx4k/io.github.smyrgeorge.sqlx4k/-s-q-l-error/-code/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): SQLError.Code","io.github.smyrgeorge.sqlx4k.SQLError.Code.valueOf"]},{"name":"fun valueOf(value: String): Transaction.Status","description":"io.github.smyrgeorge.sqlx4k.Transaction.Status.valueOf","location":"sqlx4k/io.github.smyrgeorge.sqlx4k/-transaction/-status/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): Transaction.Status","io.github.smyrgeorge.sqlx4k.Transaction.Status.valueOf"]},{"name":"fun values(): Array<Connection.Status>","description":"io.github.smyrgeorge.sqlx4k.Connection.Status.values","location":"sqlx4k/io.github.smyrgeorge.sqlx4k/-connection/-status/values.html","searchKeys":["values","fun values(): Array<Connection.Status>","io.github.smyrgeorge.sqlx4k.Connection.Status.values"]},{"name":"fun values(): Array<Dialect>","description":"io.github.smyrgeorge.sqlx4k.Dialect.values","location":"sqlx4k/io.github.smyrgeorge.sqlx4k/-dialect/values.html","searchKeys":["values","fun values(): Array<Dialect>","io.github.smyrgeorge.sqlx4k.Dialect.values"]},{"name":"fun values(): Array<SQLError.Code>","description":"io.github.smyrgeorge.sqlx4k.SQLError.Code.values","location":"sqlx4k/io.github.smyrgeorge.sqlx4k/-s-q-l-error/-code/values.html","searchKeys":["values","fun values(): Array<SQLError.Code>","io.github.smyrgeorge.sqlx4k.SQLError.Code.values"]},{"name":"fun values(): Array<Transaction.Status>","description":"io.github.smyrgeorge.sqlx4k.Transaction.Status.values","location":"sqlx4k/io.github.smyrgeorge.sqlx4k/-transaction/-status/values.html","searchKeys":["values","fun values(): Array<Transaction.Status>","io.github.smyrgeorge.sqlx4k.Transaction.Status.values"]},{"name":"inline fun <T : Enum<T>> ResultSet.Row.Column.asEnum(): T","description":"io.github.smyrgeorge.sqlx4k.impl.extensions.asEnum","location":"sqlx4k/io.github.smyrgeorge.sqlx4k.impl.extensions/as-enum.html","searchKeys":["asEnum","inline fun <T : Enum<T>> ResultSet.Row.Column.asEnum(): T","io.github.smyrgeorge.sqlx4k.impl.extensions.asEnum"]},{"name":"inline fun <T : Enum<T>> ResultSet.Row.Column.asEnumOrNull(): T?","description":"io.github.smyrgeorge.sqlx4k.impl.extensions.asEnumOrNull","location":"sqlx4k/io.github.smyrgeorge.sqlx4k.impl.extensions/as-enum-or-null.html","searchKeys":["asEnumOrNull","inline fun <T : Enum<T>> ResultSet.Row.Column.asEnumOrNull(): T?","io.github.smyrgeorge.sqlx4k.impl.extensions.asEnumOrNull"]},{"name":"inline fun <T : Enum<T>> String.toEnum(): T","description":"io.github.smyrgeorge.sqlx4k.impl.extensions.toEnum","location":"sqlx4k/io.github.smyrgeorge.sqlx4k.impl.extensions/to-enum.html","searchKeys":["toEnum","inline fun <T : Enum<T>> String.toEnum(): T","io.github.smyrgeorge.sqlx4k.impl.extensions.toEnum"]},{"name":"inline fun <T> <Error class: unknown class><<Error class: unknown class>>?.use(block: (<Error class: unknown class>) -> T): T","description":"io.github.smyrgeorge.sqlx4k.impl.extensions.use","location":"sqlx4k/io.github.smyrgeorge.sqlx4k.impl.extensions/use.html","searchKeys":["use","inline fun <T> <Error class: unknown class><<Error class: unknown class>>?.use(block: (<Error class: unknown class>) -> T): T","io.github.smyrgeorge.sqlx4k.impl.extensions.use"]},{"name":"inline suspend fun <T> new(db: Driver, crossinline f: suspend TransactionContext.() -> T): T","description":"io.github.smyrgeorge.sqlx4k.impl.coroutines.TransactionContext.Companion.new","location":"sqlx4k/io.github.smyrgeorge.sqlx4k.impl.coroutines/-transaction-context/-companion/new.html","searchKeys":["new","inline suspend fun <T> new(db: Driver, crossinline f: suspend TransactionContext.() -> T): T","io.github.smyrgeorge.sqlx4k.impl.coroutines.TransactionContext.Companion.new"]},{"name":"inline suspend fun <T> withCurrent(crossinline f: suspend TransactionContext.() -> T): T","description":"io.github.smyrgeorge.sqlx4k.impl.coroutines.TransactionContext.Companion.withCurrent","location":"sqlx4k/io.github.smyrgeorge.sqlx4k.impl.coroutines/-transaction-context/-companion/with-current.html","searchKeys":["withCurrent","inline suspend fun <T> withCurrent(crossinline f: suspend TransactionContext.() -> T): T","io.github.smyrgeorge.sqlx4k.impl.coroutines.TransactionContext.Companion.withCurrent"]},{"name":"inline suspend fun <T> withCurrent(db: Driver, crossinline f: suspend TransactionContext.() -> T): T","description":"io.github.smyrgeorge.sqlx4k.impl.coroutines.TransactionContext.Companion.withCurrent","location":"sqlx4k/io.github.smyrgeorge.sqlx4k.impl.coroutines/-transaction-context/-companion/with-current.html","searchKeys":["withCurrent","inline suspend fun <T> withCurrent(db: Driver, crossinline f: suspend TransactionContext.() -> T): T","io.github.smyrgeorge.sqlx4k.impl.coroutines.TransactionContext.Companion.withCurrent"]},{"name":"inline suspend fun current(): TransactionContext","description":"io.github.smyrgeorge.sqlx4k.impl.coroutines.TransactionContext.Companion.current","location":"sqlx4k/io.github.smyrgeorge.sqlx4k.impl.coroutines/-transaction-context/-companion/current.html","searchKeys":["current","inline suspend fun current(): TransactionContext","io.github.smyrgeorge.sqlx4k.impl.coroutines.TransactionContext.Companion.current"]},{"name":"inline suspend fun currentOrNull(): TransactionContext?","description":"io.github.smyrgeorge.sqlx4k.impl.coroutines.TransactionContext.Companion.currentOrNull","location":"sqlx4k/io.github.smyrgeorge.sqlx4k.impl.coroutines/-transaction-context/-companion/current-or-null.html","searchKeys":["currentOrNull","inline suspend fun currentOrNull(): TransactionContext?","io.github.smyrgeorge.sqlx4k.impl.coroutines.TransactionContext.Companion.currentOrNull"]},{"name":"inline suspend fun sqlx(crossinline operation: (<Error class: unknown class><out <Error class: unknown class>>) -> Unit): <Error class: unknown class><<Error class: unknown class>>?","description":"io.github.smyrgeorge.sqlx4k.impl.extensions.sqlx","location":"sqlx4k/io.github.smyrgeorge.sqlx4k.impl.extensions/sqlx.html","searchKeys":["sqlx","inline suspend fun sqlx(crossinline operation: (<Error class: unknown class><out <Error class: unknown class>>) -> Unit): <Error class: unknown class><<Error class: unknown class>>?","io.github.smyrgeorge.sqlx4k.impl.extensions.sqlx"]},{"name":"interface Connection : QueryExecutor, QueryExecutor.Transactional","description":"io.github.smyrgeorge.sqlx4k.Connection","location":"sqlx4k/io.github.smyrgeorge.sqlx4k/-connection/index.html","searchKeys":["Connection","interface Connection : QueryExecutor, QueryExecutor.Transactional","io.github.smyrgeorge.sqlx4k.Connection"]},{"name":"interface ConnectionPool","description":"io.github.smyrgeorge.sqlx4k.ConnectionPool","location":"sqlx4k/io.github.smyrgeorge.sqlx4k/-connection-pool/index.html","searchKeys":["ConnectionPool","interface ConnectionPool","io.github.smyrgeorge.sqlx4k.ConnectionPool"]},{"name":"interface ContextCrudRepository<T>","description":"io.github.smyrgeorge.sqlx4k.ContextCrudRepository","location":"sqlx4k/io.github.smyrgeorge.sqlx4k/-context-crud-repository/index.html","searchKeys":["ContextCrudRepository","interface ContextCrudRepository<T>","io.github.smyrgeorge.sqlx4k.ContextCrudRepository"]},{"name":"interface CrudRepository<T>","description":"io.github.smyrgeorge.sqlx4k.CrudRepository","location":"sqlx4k/io.github.smyrgeorge.sqlx4k/-crud-repository/index.html","searchKeys":["CrudRepository","interface CrudRepository<T>","io.github.smyrgeorge.sqlx4k.CrudRepository"]},{"name":"interface Driver : ConnectionPool, QueryExecutor, QueryExecutor.Transactional, QueryExecutor.Migrate","description":"io.github.smyrgeorge.sqlx4k.Driver","location":"sqlx4k/io.github.smyrgeorge.sqlx4k/-driver/index.html","searchKeys":["Driver","interface Driver : ConnectionPool, QueryExecutor, QueryExecutor.Transactional, QueryExecutor.Migrate","io.github.smyrgeorge.sqlx4k.Driver"]},{"name":"interface DriverNativeUtils","description":"io.github.smyrgeorge.sqlx4k.DriverNativeUtils","location":"sqlx4k/io.github.smyrgeorge.sqlx4k/-driver-native-utils/index.html","searchKeys":["DriverNativeUtils","interface DriverNativeUtils","io.github.smyrgeorge.sqlx4k.DriverNativeUtils"]},{"name":"interface Migrate","description":"io.github.smyrgeorge.sqlx4k.QueryExecutor.Migrate","location":"sqlx4k/io.github.smyrgeorge.sqlx4k/-query-executor/-migrate/index.html","searchKeys":["Migrate","interface Migrate","io.github.smyrgeorge.sqlx4k.QueryExecutor.Migrate"]},{"name":"interface QueryExecutor","description":"io.github.smyrgeorge.sqlx4k.QueryExecutor","location":"sqlx4k/io.github.smyrgeorge.sqlx4k/-query-executor/index.html","searchKeys":["QueryExecutor","interface QueryExecutor","io.github.smyrgeorge.sqlx4k.QueryExecutor"]},{"name":"interface RowMapper<T>","description":"io.github.smyrgeorge.sqlx4k.RowMapper","location":"sqlx4k/io.github.smyrgeorge.sqlx4k/-row-mapper/index.html","searchKeys":["RowMapper","interface RowMapper<T>","io.github.smyrgeorge.sqlx4k.RowMapper"]},{"name":"interface Statement","description":"io.github.smyrgeorge.sqlx4k.Statement","location":"sqlx4k/io.github.smyrgeorge.sqlx4k/-statement/index.html","searchKeys":["Statement","interface Statement","io.github.smyrgeorge.sqlx4k.Statement"]},{"name":"interface Transaction : QueryExecutor","description":"io.github.smyrgeorge.sqlx4k.Transaction","location":"sqlx4k/io.github.smyrgeorge.sqlx4k/-transaction/index.html","searchKeys":["Transaction","interface Transaction : QueryExecutor","io.github.smyrgeorge.sqlx4k.Transaction"]},{"name":"interface Transactional","description":"io.github.smyrgeorge.sqlx4k.QueryExecutor.Transactional","location":"sqlx4k/io.github.smyrgeorge.sqlx4k/-query-executor/-transactional/index.html","searchKeys":["Transactional","interface Transactional","io.github.smyrgeorge.sqlx4k.QueryExecutor.Transactional"]},{"name":"interface ValueEncoder<T>","description":"io.github.smyrgeorge.sqlx4k.Statement.ValueEncoder","location":"sqlx4k/io.github.smyrgeorge.sqlx4k/-statement/-value-encoder/index.html","searchKeys":["ValueEncoder","interface ValueEncoder<T>","io.github.smyrgeorge.sqlx4k.Statement.ValueEncoder"]},{"name":"object Companion","description":"io.github.smyrgeorge.sqlx4k.ConnectionPool.Options.Companion","location":"sqlx4k/io.github.smyrgeorge.sqlx4k/-connection-pool/-options/-companion/index.html","searchKeys":["Companion","object Companion","io.github.smyrgeorge.sqlx4k.ConnectionPool.Options.Companion"]},{"name":"object Companion","description":"io.github.smyrgeorge.sqlx4k.DriverNativeUtils.Companion","location":"sqlx4k/io.github.smyrgeorge.sqlx4k/-driver-native-utils/-companion/index.html","searchKeys":["Companion","object Companion","io.github.smyrgeorge.sqlx4k.DriverNativeUtils.Companion"]},{"name":"object Companion","description":"io.github.smyrgeorge.sqlx4k.Statement.Companion","location":"sqlx4k/io.github.smyrgeorge.sqlx4k/-statement/-companion/index.html","searchKeys":["Companion","object Companion","io.github.smyrgeorge.sqlx4k.Statement.Companion"]},{"name":"object Companion","description":"io.github.smyrgeorge.sqlx4k.Statement.ValueEncoderRegistry.Companion","location":"sqlx4k/io.github.smyrgeorge.sqlx4k/-statement/-value-encoder-registry/-companion/index.html","searchKeys":["Companion","object Companion","io.github.smyrgeorge.sqlx4k.Statement.ValueEncoderRegistry.Companion"]},{"name":"object Companion","description":"io.github.smyrgeorge.sqlx4k.impl.migrate.Migration.Companion","location":"sqlx4k/io.github.smyrgeorge.sqlx4k.impl.migrate/-migration/-companion/index.html","searchKeys":["Companion","object Companion","io.github.smyrgeorge.sqlx4k.impl.migrate.Migration.Companion"]},{"name":"object Companion","description":"io.github.smyrgeorge.sqlx4k.impl.migrate.MigrationFile.Companion","location":"sqlx4k/io.github.smyrgeorge.sqlx4k.impl.migrate/-migration-file/-companion/index.html","searchKeys":["Companion","object Companion","io.github.smyrgeorge.sqlx4k.impl.migrate.MigrationFile.Companion"]},{"name":"object Companion","description":"io.github.smyrgeorge.sqlx4k.impl.migrate.Migrator.Results.Companion","location":"sqlx4k/io.github.smyrgeorge.sqlx4k.impl.migrate/-migrator/-results/-companion/index.html","searchKeys":["Companion","object Companion","io.github.smyrgeorge.sqlx4k.impl.migrate.Migrator.Results.Companion"]},{"name":"object Companion : CoroutineContext.Key<TransactionContext> ","description":"io.github.smyrgeorge.sqlx4k.impl.coroutines.TransactionContext.Companion","location":"sqlx4k/io.github.smyrgeorge.sqlx4k.impl.coroutines/-transaction-context/-companion/index.html","searchKeys":["Companion","object Companion : CoroutineContext.Key<TransactionContext> ","io.github.smyrgeorge.sqlx4k.impl.coroutines.TransactionContext.Companion"]},{"name":"object Migrator","description":"io.github.smyrgeorge.sqlx4k.impl.migrate.Migrator","location":"sqlx4k/io.github.smyrgeorge.sqlx4k.impl.migrate/-migrator/index.html","searchKeys":["Migrator","object Migrator","io.github.smyrgeorge.sqlx4k.impl.migrate.Migrator"]},{"name":"open fun assertIsAcquired()","description":"io.github.smyrgeorge.sqlx4k.Connection.assertIsAcquired","location":"sqlx4k/io.github.smyrgeorge.sqlx4k/-connection/assert-is-acquired.html","searchKeys":["assertIsAcquired","open fun assertIsAcquired()","io.github.smyrgeorge.sqlx4k.Connection.assertIsAcquired"]},{"name":"open fun assertIsOpen()","description":"io.github.smyrgeorge.sqlx4k.Transaction.assertIsOpen","location":"sqlx4k/io.github.smyrgeorge.sqlx4k/-transaction/assert-is-open.html","searchKeys":["assertIsOpen","open fun assertIsOpen()","io.github.smyrgeorge.sqlx4k.Transaction.assertIsOpen"]},{"name":"open fun map(rs: ResultSet): List<T>","description":"io.github.smyrgeorge.sqlx4k.RowMapper.map","location":"sqlx4k/io.github.smyrgeorge.sqlx4k/-row-mapper/map.html","searchKeys":["map","open fun map(rs: ResultSet): List<T>","io.github.smyrgeorge.sqlx4k.RowMapper.map"]},{"name":"open operator override fun hasNext(): Boolean","description":"io.github.smyrgeorge.sqlx4k.ResultSet.IteratorImpl.hasNext","location":"sqlx4k/io.github.smyrgeorge.sqlx4k/-result-set/-iterator-impl/has-next.html","searchKeys":["hasNext","open operator override fun hasNext(): Boolean","io.github.smyrgeorge.sqlx4k.ResultSet.IteratorImpl.hasNext"]},{"name":"open operator override fun iterator(): Iterator<ResultSet.Row>","description":"io.github.smyrgeorge.sqlx4k.ResultSet.iterator","location":"sqlx4k/io.github.smyrgeorge.sqlx4k/-result-set/iterator.html","searchKeys":["iterator","open operator override fun iterator(): Iterator<ResultSet.Row>","io.github.smyrgeorge.sqlx4k.ResultSet.iterator"]},{"name":"open operator override fun next(): ResultSet.Row","description":"io.github.smyrgeorge.sqlx4k.ResultSet.IteratorImpl.next","location":"sqlx4k/io.github.smyrgeorge.sqlx4k/-result-set/-iterator-impl/next.html","searchKeys":["next","open operator override fun next(): ResultSet.Row","io.github.smyrgeorge.sqlx4k.ResultSet.IteratorImpl.next"]},{"name":"open override fun bind(index: Int, value: Any?): AbstractStatement","description":"io.github.smyrgeorge.sqlx4k.impl.statement.AbstractStatement.bind","location":"sqlx4k/io.github.smyrgeorge.sqlx4k.impl.statement/-abstract-statement/bind.html","searchKeys":["bind","open override fun bind(index: Int, value: Any?): AbstractStatement","io.github.smyrgeorge.sqlx4k.impl.statement.AbstractStatement.bind"]},{"name":"open override fun bind(index: Int, value: Any?): ExtendedStatement","description":"io.github.smyrgeorge.sqlx4k.impl.statement.ExtendedStatement.bind","location":"sqlx4k/io.github.smyrgeorge.sqlx4k.impl.statement/-extended-statement/bind.html","searchKeys":["bind","open override fun bind(index: Int, value: Any?): ExtendedStatement","io.github.smyrgeorge.sqlx4k.impl.statement.ExtendedStatement.bind"]},{"name":"open override fun bind(parameter: String, value: Any?): AbstractStatement","description":"io.github.smyrgeorge.sqlx4k.impl.statement.AbstractStatement.bind","location":"sqlx4k/io.github.smyrgeorge.sqlx4k.impl.statement/-abstract-statement/bind.html","searchKeys":["bind","open override fun bind(parameter: String, value: Any?): AbstractStatement","io.github.smyrgeorge.sqlx4k.impl.statement.AbstractStatement.bind"]},{"name":"open override fun render(encoders: Statement.ValueEncoderRegistry): String","description":"io.github.smyrgeorge.sqlx4k.impl.statement.AbstractStatement.render","location":"sqlx4k/io.github.smyrgeorge.sqlx4k.impl.statement/-abstract-statement/render.html","searchKeys":["render","open override fun render(encoders: Statement.ValueEncoderRegistry): String","io.github.smyrgeorge.sqlx4k.impl.statement.AbstractStatement.render"]},{"name":"open override fun render(encoders: Statement.ValueEncoderRegistry): String","description":"io.github.smyrgeorge.sqlx4k.impl.statement.ExtendedStatement.render","location":"sqlx4k/io.github.smyrgeorge.sqlx4k.impl.statement/-extended-statement/render.html","searchKeys":["render","open override fun render(encoders: Statement.ValueEncoderRegistry): String","io.github.smyrgeorge.sqlx4k.impl.statement.ExtendedStatement.render"]},{"name":"open override fun toString(): String","description":"io.github.smyrgeorge.sqlx4k.impl.coroutines.TransactionContext.toString","location":"sqlx4k/io.github.smyrgeorge.sqlx4k.impl.coroutines/-transaction-context/to-string.html","searchKeys":["toString","open override fun toString(): String","io.github.smyrgeorge.sqlx4k.impl.coroutines.TransactionContext.toString"]},{"name":"open override fun toString(): String","description":"io.github.smyrgeorge.sqlx4k.impl.statement.ExtendedStatement.toString","location":"sqlx4k/io.github.smyrgeorge.sqlx4k.impl.statement/-extended-statement/to-string.html","searchKeys":["toString","open override fun toString(): String","io.github.smyrgeorge.sqlx4k.impl.statement.ExtendedStatement.toString"]},{"name":"open override fun toString(): String","description":"io.github.smyrgeorge.sqlx4k.impl.statement.SimpleStatement.toString","location":"sqlx4k/io.github.smyrgeorge.sqlx4k.impl.statement/-simple-statement/to-string.html","searchKeys":["toString","open override fun toString(): String","io.github.smyrgeorge.sqlx4k.impl.statement.SimpleStatement.toString"]},{"name":"open override fun toString(): String","description":"io.github.smyrgeorge.sqlx4k.impl.types.NoQuotingString.toString","location":"sqlx4k/io.github.smyrgeorge.sqlx4k.impl.types/-no-quoting-string/to-string.html","searchKeys":["toString","open override fun toString(): String","io.github.smyrgeorge.sqlx4k.impl.types.NoQuotingString.toString"]},{"name":"open override val extractedNamedParameters: Set<String>","description":"io.github.smyrgeorge.sqlx4k.impl.statement.AbstractStatement.extractedNamedParameters","location":"sqlx4k/io.github.smyrgeorge.sqlx4k.impl.statement/-abstract-statement/extracted-named-parameters.html","searchKeys":["extractedNamedParameters","open override val extractedNamedParameters: Set<String>","io.github.smyrgeorge.sqlx4k.impl.statement.AbstractStatement.extractedNamedParameters"]},{"name":"open override val extractedPositionalParameters: Int","description":"io.github.smyrgeorge.sqlx4k.impl.statement.AbstractStatement.extractedPositionalParameters","location":"sqlx4k/io.github.smyrgeorge.sqlx4k.impl.statement/-abstract-statement/extracted-positional-parameters.html","searchKeys":["extractedPositionalParameters","open override val extractedPositionalParameters: Int","io.github.smyrgeorge.sqlx4k.impl.statement.AbstractStatement.extractedPositionalParameters"]},{"name":"open override val key: CoroutineContext.Key<TransactionContext>","description":"io.github.smyrgeorge.sqlx4k.impl.coroutines.TransactionContext.key","location":"sqlx4k/io.github.smyrgeorge.sqlx4k.impl.coroutines/-transaction-context/key.html","searchKeys":["key","open override val key: CoroutineContext.Key<TransactionContext>","io.github.smyrgeorge.sqlx4k.impl.coroutines.TransactionContext.key"]},{"name":"open suspend fun <T> fetchAll(sql: String, rowMapper: RowMapper<T>): Result<List<T>>","description":"io.github.smyrgeorge.sqlx4k.QueryExecutor.fetchAll","location":"sqlx4k/io.github.smyrgeorge.sqlx4k/-query-executor/fetch-all.html","searchKeys":["fetchAll","open suspend fun <T> fetchAll(sql: String, rowMapper: RowMapper<T>): Result<List<T>>","io.github.smyrgeorge.sqlx4k.QueryExecutor.fetchAll"]},{"name":"open suspend fun <T> transaction(f: suspend Transaction.() -> T): T","description":"io.github.smyrgeorge.sqlx4k.QueryExecutor.Transactional.transaction","location":"sqlx4k/io.github.smyrgeorge.sqlx4k/-query-executor/-transactional/transaction.html","searchKeys":["transaction","open suspend fun <T> transaction(f: suspend Transaction.() -> T): T","io.github.smyrgeorge.sqlx4k.QueryExecutor.Transactional.transaction"]},{"name":"suspend fun migrate(db: Driver, files: List<MigrationFile>, table: String, schema: String?, createSchema: Boolean, dialect: Dialect, afterStatementExecution: suspend (Statement, Duration) -> Unit, afterFileMigration: suspend (Migration, Duration) -> Unit): Result<Migrator.Results>","description":"io.github.smyrgeorge.sqlx4k.impl.migrate.Migrator.migrate","location":"sqlx4k/io.github.smyrgeorge.sqlx4k.impl.migrate/-migrator/migrate.html","searchKeys":["migrate","suspend fun migrate(db: Driver, files: List<MigrationFile>, table: String, schema: String?, createSchema: Boolean, dialect: Dialect, afterStatementExecution: suspend (Statement, Duration) -> Unit, afterFileMigration: suspend (Migration, Duration) -> Unit): Result<Migrator.Results>","io.github.smyrgeorge.sqlx4k.impl.migrate.Migrator.migrate"]},{"name":"suspend fun migrate(db: Driver, path: String, table: String, schema: String?, createSchema: Boolean, dialect: Dialect, afterStatementExecution: suspend (Statement, Duration) -> Unit, afterFileMigration: suspend (Migration, Duration) -> Unit): Result<Migrator.Results>","description":"io.github.smyrgeorge.sqlx4k.impl.migrate.Migrator.migrate","location":"sqlx4k/io.github.smyrgeorge.sqlx4k.impl.migrate/-migrator/migrate.html","searchKeys":["migrate","suspend fun migrate(db: Driver, path: String, table: String, schema: String?, createSchema: Boolean, dialect: Dialect, afterStatementExecution: suspend (Statement, Duration) -> Unit, afterFileMigration: suspend (Migration, Duration) -> Unit): Result<Migrator.Results>","io.github.smyrgeorge.sqlx4k.impl.migrate.Migrator.migrate"]},{"name":"val EMPTY: Statement.ValueEncoderRegistry","description":"io.github.smyrgeorge.sqlx4k.Statement.ValueEncoderRegistry.Companion.EMPTY","location":"sqlx4k/io.github.smyrgeorge.sqlx4k/-statement/-value-encoder-registry/-companion/-e-m-p-t-y.html","searchKeys":["EMPTY","val EMPTY: Statement.ValueEncoderRegistry","io.github.smyrgeorge.sqlx4k.Statement.ValueEncoderRegistry.Companion.EMPTY"]},{"name":"val Empty: Migrator.Results","description":"io.github.smyrgeorge.sqlx4k.impl.migrate.Migrator.Results.Companion.Empty","location":"sqlx4k/io.github.smyrgeorge.sqlx4k.impl.migrate/-migrator/-results/-companion/-empty.html","searchKeys":["Empty","val Empty: Migrator.Results","io.github.smyrgeorge.sqlx4k.impl.migrate.Migrator.Results.Companion.Empty"]},{"name":"val acquireTimeout: Duration? = null","description":"io.github.smyrgeorge.sqlx4k.ConnectionPool.Options.acquireTimeout","location":"sqlx4k/io.github.smyrgeorge.sqlx4k/-connection-pool/-options/acquire-timeout.html","searchKeys":["acquireTimeout","val acquireTimeout: Duration? = null","io.github.smyrgeorge.sqlx4k.ConnectionPool.Options.acquireTimeout"]},{"name":"val applied: Int","description":"io.github.smyrgeorge.sqlx4k.impl.migrate.Migrator.Results.applied","location":"sqlx4k/io.github.smyrgeorge.sqlx4k.impl.migrate/-migrator/-results/applied.html","searchKeys":["applied","val applied: Int","io.github.smyrgeorge.sqlx4k.impl.migrate.Migrator.Results.applied"]},{"name":"val checkSchema: Boolean = true","description":"io.github.smyrgeorge.sqlx4k.annotation.Query.checkSchema","location":"sqlx4k/io.github.smyrgeorge.sqlx4k.annotation/-query/check-schema.html","searchKeys":["checkSchema","val checkSchema: Boolean = true","io.github.smyrgeorge.sqlx4k.annotation.Query.checkSchema"]},{"name":"val checkSyntax: Boolean = true","description":"io.github.smyrgeorge.sqlx4k.annotation.Query.checkSyntax","location":"sqlx4k/io.github.smyrgeorge.sqlx4k.annotation/-query/check-syntax.html","searchKeys":["checkSyntax","val checkSyntax: Boolean = true","io.github.smyrgeorge.sqlx4k.annotation.Query.checkSyntax"]},{"name":"val checksum: String","description":"io.github.smyrgeorge.sqlx4k.impl.migrate.Migration.checksum","location":"sqlx4k/io.github.smyrgeorge.sqlx4k.impl.migrate/-migration/checksum.html","searchKeys":["checksum","val checksum: String","io.github.smyrgeorge.sqlx4k.impl.migrate.Migration.checksum"]},{"name":"val checksum: String","description":"io.github.smyrgeorge.sqlx4k.impl.migrate.MigrationFile.checksum","location":"sqlx4k/io.github.smyrgeorge.sqlx4k.impl.migrate/-migration-file/checksum.html","searchKeys":["checksum","val checksum: String","io.github.smyrgeorge.sqlx4k.impl.migrate.MigrationFile.checksum"]},{"name":"val code: SQLError.Code","description":"io.github.smyrgeorge.sqlx4k.SQLError.code","location":"sqlx4k/io.github.smyrgeorge.sqlx4k/-s-q-l-error/code.html","searchKeys":["code","val code: SQLError.Code","io.github.smyrgeorge.sqlx4k.SQLError.code"]},{"name":"val content: String","description":"io.github.smyrgeorge.sqlx4k.impl.migrate.MigrationFile.content","location":"sqlx4k/io.github.smyrgeorge.sqlx4k.impl.migrate/-migration-file/content.html","searchKeys":["content","val content: String","io.github.smyrgeorge.sqlx4k.impl.migrate.MigrationFile.content"]},{"name":"val description: String","description":"io.github.smyrgeorge.sqlx4k.impl.migrate.MigrationFile.description","location":"sqlx4k/io.github.smyrgeorge.sqlx4k.impl.migrate/-migration-file/description.html","searchKeys":["description","val description: String","io.github.smyrgeorge.sqlx4k.impl.migrate.MigrationFile.description"]},{"name":"val entries: EnumEntries<Connection.Status>","description":"io.github.smyrgeorge.sqlx4k.Connection.Status.entries","location":"sqlx4k/io.github.smyrgeorge.sqlx4k/-connection/-status/entries.html","searchKeys":["entries","val entries: EnumEntries<Connection.Status>","io.github.smyrgeorge.sqlx4k.Connection.Status.entries"]},{"name":"val entries: EnumEntries<Dialect>","description":"io.github.smyrgeorge.sqlx4k.Dialect.entries","location":"sqlx4k/io.github.smyrgeorge.sqlx4k/-dialect/entries.html","searchKeys":["entries","val entries: EnumEntries<Dialect>","io.github.smyrgeorge.sqlx4k.Dialect.entries"]},{"name":"val entries: EnumEntries<SQLError.Code>","description":"io.github.smyrgeorge.sqlx4k.SQLError.Code.entries","location":"sqlx4k/io.github.smyrgeorge.sqlx4k/-s-q-l-error/-code/entries.html","searchKeys":["entries","val entries: EnumEntries<SQLError.Code>","io.github.smyrgeorge.sqlx4k.SQLError.Code.entries"]},{"name":"val entries: EnumEntries<Transaction.Status>","description":"io.github.smyrgeorge.sqlx4k.Transaction.Status.entries","location":"sqlx4k/io.github.smyrgeorge.sqlx4k/-transaction/-status/entries.html","searchKeys":["entries","val entries: EnumEntries<Transaction.Status>","io.github.smyrgeorge.sqlx4k.Transaction.Status.entries"]},{"name":"val error: SQLError?","description":"io.github.smyrgeorge.sqlx4k.ResultSet.error","location":"sqlx4k/io.github.smyrgeorge.sqlx4k/-result-set/error.html","searchKeys":["error","val error: SQLError?","io.github.smyrgeorge.sqlx4k.ResultSet.error"]},{"name":"val executionTime: Duration","description":"io.github.smyrgeorge.sqlx4k.impl.migrate.Migrator.Results.executionTime","location":"sqlx4k/io.github.smyrgeorge.sqlx4k.impl.migrate/-migrator/-results/execution-time.html","searchKeys":["executionTime","val executionTime: Duration","io.github.smyrgeorge.sqlx4k.impl.migrate.Migrator.Results.executionTime"]},{"name":"val executionTime: Long","description":"io.github.smyrgeorge.sqlx4k.impl.migrate.Migration.executionTime","location":"sqlx4k/io.github.smyrgeorge.sqlx4k.impl.migrate/-migration/execution-time.html","searchKeys":["executionTime","val executionTime: Long","io.github.smyrgeorge.sqlx4k.impl.migrate.Migration.executionTime"]},{"name":"val fn: <Error class: unknown class>","description":"io.github.smyrgeorge.sqlx4k.DriverNativeUtils.Companion.fn","location":"sqlx4k/io.github.smyrgeorge.sqlx4k/-driver-native-utils/-companion/fn.html","searchKeys":["fn","val fn: <Error class: unknown class>","io.github.smyrgeorge.sqlx4k.DriverNativeUtils.Companion.fn"]},{"name":"val idleTimeout: Duration? = null","description":"io.github.smyrgeorge.sqlx4k.ConnectionPool.Options.idleTimeout","location":"sqlx4k/io.github.smyrgeorge.sqlx4k/-connection-pool/-options/idle-timeout.html","searchKeys":["idleTimeout","val idleTimeout: Duration? = null","io.github.smyrgeorge.sqlx4k.ConnectionPool.Options.idleTimeout"]},{"name":"val insert: Boolean = false","description":"io.github.smyrgeorge.sqlx4k.annotation.Id.insert","location":"sqlx4k/io.github.smyrgeorge.sqlx4k.annotation/-id/insert.html","searchKeys":["insert","val insert: Boolean = false","io.github.smyrgeorge.sqlx4k.annotation.Id.insert"]},{"name":"val insert: Boolean = true","description":"io.github.smyrgeorge.sqlx4k.annotation.Column.insert","location":"sqlx4k/io.github.smyrgeorge.sqlx4k.annotation/-column/insert.html","searchKeys":["insert","val insert: Boolean = true","io.github.smyrgeorge.sqlx4k.annotation.Column.insert"]},{"name":"val installedOn: Instant","description":"io.github.smyrgeorge.sqlx4k.impl.migrate.Migration.installedOn","location":"sqlx4k/io.github.smyrgeorge.sqlx4k.impl.migrate/-migration/installed-on.html","searchKeys":["installedOn","val installedOn: Instant","io.github.smyrgeorge.sqlx4k.impl.migrate.Migration.installedOn"]},{"name":"val mapper: KClass<out RowMapper<*>>","description":"io.github.smyrgeorge.sqlx4k.annotation.Repository.mapper","location":"sqlx4k/io.github.smyrgeorge.sqlx4k.annotation/-repository/mapper.html","searchKeys":["mapper","val mapper: KClass<out RowMapper<*>>","io.github.smyrgeorge.sqlx4k.annotation.Repository.mapper"]},{"name":"val maxConnections: Int = 10","description":"io.github.smyrgeorge.sqlx4k.ConnectionPool.Options.maxConnections","location":"sqlx4k/io.github.smyrgeorge.sqlx4k/-connection-pool/-options/max-connections.html","searchKeys":["maxConnections","val maxConnections: Int = 10","io.github.smyrgeorge.sqlx4k.ConnectionPool.Options.maxConnections"]},{"name":"val maxLifetime: Duration? = null","description":"io.github.smyrgeorge.sqlx4k.ConnectionPool.Options.maxLifetime","location":"sqlx4k/io.github.smyrgeorge.sqlx4k/-connection-pool/-options/max-lifetime.html","searchKeys":["maxLifetime","val maxLifetime: Duration? = null","io.github.smyrgeorge.sqlx4k.ConnectionPool.Options.maxLifetime"]},{"name":"val metadata: ResultSet.Metadata","description":"io.github.smyrgeorge.sqlx4k.ResultSet.metadata","location":"sqlx4k/io.github.smyrgeorge.sqlx4k/-result-set/metadata.html","searchKeys":["metadata","val metadata: ResultSet.Metadata","io.github.smyrgeorge.sqlx4k.ResultSet.metadata"]},{"name":"val minConnections: Int? = null","description":"io.github.smyrgeorge.sqlx4k.ConnectionPool.Options.minConnections","location":"sqlx4k/io.github.smyrgeorge.sqlx4k/-connection-pool/-options/min-connections.html","searchKeys":["minConnections","val minConnections: Int? = null","io.github.smyrgeorge.sqlx4k.ConnectionPool.Options.minConnections"]},{"name":"val name: String","description":"io.github.smyrgeorge.sqlx4k.ResultSet.Metadata.Column.name","location":"sqlx4k/io.github.smyrgeorge.sqlx4k/-result-set/-metadata/-column/name.html","searchKeys":["name","val name: String","io.github.smyrgeorge.sqlx4k.ResultSet.Metadata.Column.name"]},{"name":"val name: String","description":"io.github.smyrgeorge.sqlx4k.ResultSet.Row.Column.name","location":"sqlx4k/io.github.smyrgeorge.sqlx4k/-result-set/-row/-column/name.html","searchKeys":["name","val name: String","io.github.smyrgeorge.sqlx4k.ResultSet.Row.Column.name"]},{"name":"val name: String","description":"io.github.smyrgeorge.sqlx4k.annotation.Table.name","location":"sqlx4k/io.github.smyrgeorge.sqlx4k.annotation/-table/name.html","searchKeys":["name","val name: String","io.github.smyrgeorge.sqlx4k.annotation.Table.name"]},{"name":"val name: String","description":"io.github.smyrgeorge.sqlx4k.impl.migrate.Migration.name","location":"sqlx4k/io.github.smyrgeorge.sqlx4k.impl.migrate/-migration/name.html","searchKeys":["name","val name: String","io.github.smyrgeorge.sqlx4k.impl.migrate.Migration.name"]},{"name":"val name: String","description":"io.github.smyrgeorge.sqlx4k.impl.migrate.MigrationFile.name","location":"sqlx4k/io.github.smyrgeorge.sqlx4k.impl.migrate/-migration-file/name.html","searchKeys":["name","val name: String","io.github.smyrgeorge.sqlx4k.impl.migrate.MigrationFile.name"]},{"name":"val ordinal: Int","description":"io.github.smyrgeorge.sqlx4k.ResultSet.Metadata.Column.ordinal","location":"sqlx4k/io.github.smyrgeorge.sqlx4k/-result-set/-metadata/-column/ordinal.html","searchKeys":["ordinal","val ordinal: Int","io.github.smyrgeorge.sqlx4k.ResultSet.Metadata.Column.ordinal"]},{"name":"val ordinal: Int","description":"io.github.smyrgeorge.sqlx4k.ResultSet.Row.Column.ordinal","location":"sqlx4k/io.github.smyrgeorge.sqlx4k/-result-set/-row/-column/ordinal.html","searchKeys":["ordinal","val ordinal: Int","io.github.smyrgeorge.sqlx4k.ResultSet.Row.Column.ordinal"]},{"name":"val rows: List<ResultSet.Row>","description":"io.github.smyrgeorge.sqlx4k.ResultSet.rows","location":"sqlx4k/io.github.smyrgeorge.sqlx4k/-result-set/rows.html","searchKeys":["rows","val rows: List<ResultSet.Row>","io.github.smyrgeorge.sqlx4k.ResultSet.rows"]},{"name":"val size: Int","description":"io.github.smyrgeorge.sqlx4k.ResultSet.Row.size","location":"sqlx4k/io.github.smyrgeorge.sqlx4k/-result-set/-row/size.html","searchKeys":["size","val size: Int","io.github.smyrgeorge.sqlx4k.ResultSet.Row.size"]},{"name":"val size: Int","description":"io.github.smyrgeorge.sqlx4k.ResultSet.size","location":"sqlx4k/io.github.smyrgeorge.sqlx4k/-result-set/size.html","searchKeys":["size","val size: Int","io.github.smyrgeorge.sqlx4k.ResultSet.size"]},{"name":"val total: Int","description":"io.github.smyrgeorge.sqlx4k.impl.migrate.Migrator.Results.total","location":"sqlx4k/io.github.smyrgeorge.sqlx4k.impl.migrate/-migrator/-results/total.html","searchKeys":["total","val total: Int","io.github.smyrgeorge.sqlx4k.impl.migrate.Migrator.Results.total"]},{"name":"val type: String","description":"io.github.smyrgeorge.sqlx4k.ResultSet.Metadata.Column.type","location":"sqlx4k/io.github.smyrgeorge.sqlx4k/-result-set/-metadata/-column/type.html","searchKeys":["type","val type: String","io.github.smyrgeorge.sqlx4k.ResultSet.Metadata.Column.type"]},{"name":"val type: String","description":"io.github.smyrgeorge.sqlx4k.ResultSet.Row.Column.type","location":"sqlx4k/io.github.smyrgeorge.sqlx4k/-result-set/-row/-column/type.html","searchKeys":["type","val type: String","io.github.smyrgeorge.sqlx4k.ResultSet.Row.Column.type"]},{"name":"val update: Boolean = true","description":"io.github.smyrgeorge.sqlx4k.annotation.Column.update","location":"sqlx4k/io.github.smyrgeorge.sqlx4k.annotation/-column/update.html","searchKeys":["update","val update: Boolean = true","io.github.smyrgeorge.sqlx4k.annotation.Column.update"]},{"name":"val validated: Int","description":"io.github.smyrgeorge.sqlx4k.impl.migrate.Migrator.Results.validated","location":"sqlx4k/io.github.smyrgeorge.sqlx4k.impl.migrate/-migrator/-results/validated.html","searchKeys":["validated","val validated: Int","io.github.smyrgeorge.sqlx4k.impl.migrate.Migrator.Results.validated"]},{"name":"val value: Iterable<*>","description":"io.github.smyrgeorge.sqlx4k.impl.types.NoWrappingTuple.value","location":"sqlx4k/io.github.smyrgeorge.sqlx4k.impl.types/-no-wrapping-tuple/value.html","searchKeys":["value","val value: Iterable<*>","io.github.smyrgeorge.sqlx4k.impl.types.NoWrappingTuple.value"]},{"name":"val value: String","description":"io.github.smyrgeorge.sqlx4k.annotation.Query.value","location":"sqlx4k/io.github.smyrgeorge.sqlx4k.annotation/-query/value.html","searchKeys":["value","val value: String","io.github.smyrgeorge.sqlx4k.annotation.Query.value"]},{"name":"val value: String","description":"io.github.smyrgeorge.sqlx4k.impl.types.NoQuotingString.value","location":"sqlx4k/io.github.smyrgeorge.sqlx4k.impl.types/-no-quoting-string/value.html","searchKeys":["value","val value: String","io.github.smyrgeorge.sqlx4k.impl.types.NoQuotingString.value"]},{"name":"val version: Long","description":"io.github.smyrgeorge.sqlx4k.impl.migrate.Migration.version","location":"sqlx4k/io.github.smyrgeorge.sqlx4k.impl.migrate/-migration/version.html","searchKeys":["version","val version: Long","io.github.smyrgeorge.sqlx4k.impl.migrate.Migration.version"]},{"name":"val version: Long","description":"io.github.smyrgeorge.sqlx4k.impl.migrate.MigrationFile.version","location":"sqlx4k/io.github.smyrgeorge.sqlx4k.impl.migrate/-migration-file/version.html","searchKeys":["version","val version: Long","io.github.smyrgeorge.sqlx4k.impl.migrate.MigrationFile.version"]},{"name":"value class NoQuotingString(val value: String)","description":"io.github.smyrgeorge.sqlx4k.impl.types.NoQuotingString","location":"sqlx4k/io.github.smyrgeorge.sqlx4k.impl.types/-no-quoting-string/index.html","searchKeys":["NoQuotingString","value class NoQuotingString(val value: String)","io.github.smyrgeorge.sqlx4k.impl.types.NoQuotingString"]},{"name":"value class NoWrappingTuple(val value: Iterable<*>)","description":"io.github.smyrgeorge.sqlx4k.impl.types.NoWrappingTuple","location":"sqlx4k/io.github.smyrgeorge.sqlx4k.impl.types/-no-wrapping-tuple/index.html","searchKeys":["NoWrappingTuple","value class NoWrappingTuple(val value: Iterable<*>)","io.github.smyrgeorge.sqlx4k.impl.types.NoWrappingTuple"]},{"name":"class Cn(rt: <Error class: unknown class><out <Error class: unknown class>>, cn: <Error class: unknown class><out <Error class: unknown class>>) : Connection","description":"io.github.smyrgeorge.sqlx4k.sqlite.SQLite.Cn","location":"sqlx4k-sqlite/io.github.smyrgeorge.sqlx4k.sqlite/-s-q-lite/-cn/index.html","searchKeys":["Cn","class Cn(rt: <Error class: unknown class><out <Error class: unknown class>>, cn: <Error class: unknown class><out <Error class: unknown class>>) : Connection","io.github.smyrgeorge.sqlx4k.sqlite.SQLite.Cn"]},{"name":"class SQLite(url: String, options: ConnectionPool.Options = ConnectionPool.Options()) : ISQLite","description":"io.github.smyrgeorge.sqlx4k.sqlite.SQLite","location":"sqlx4k-sqlite/io.github.smyrgeorge.sqlx4k.sqlite/-s-q-lite/index.html","searchKeys":["SQLite","class SQLite(url: String, options: ConnectionPool.Options = ConnectionPool.Options()) : ISQLite","io.github.smyrgeorge.sqlx4k.sqlite.SQLite"]},{"name":"class Tx(rt: <Error class: unknown class><out <Error class: unknown class>>, tx: <Error class: unknown class><out <Error class: unknown class>>) : Transaction","description":"io.github.smyrgeorge.sqlx4k.sqlite.SQLite.Tx","location":"sqlx4k-sqlite/io.github.smyrgeorge.sqlx4k.sqlite/-s-q-lite/-tx/index.html","searchKeys":["Tx","class Tx(rt: <Error class: unknown class><out <Error class: unknown class>>, tx: <Error class: unknown class><out <Error class: unknown class>>) : Transaction","io.github.smyrgeorge.sqlx4k.sqlite.SQLite.Tx"]},{"name":"constructor(rt: <Error class: unknown class><out <Error class: unknown class>>, cn: <Error class: unknown class><out <Error class: unknown class>>)","description":"io.github.smyrgeorge.sqlx4k.sqlite.SQLite.Cn.Cn","location":"sqlx4k-sqlite/io.github.smyrgeorge.sqlx4k.sqlite/-s-q-lite/-cn/-cn.html","searchKeys":["Cn","constructor(rt: <Error class: unknown class><out <Error class: unknown class>>, cn: <Error class: unknown class><out <Error class: unknown class>>)","io.github.smyrgeorge.sqlx4k.sqlite.SQLite.Cn.Cn"]},{"name":"constructor(rt: <Error class: unknown class><out <Error class: unknown class>>, tx: <Error class: unknown class><out <Error class: unknown class>>)","description":"io.github.smyrgeorge.sqlx4k.sqlite.SQLite.Tx.Tx","location":"sqlx4k-sqlite/io.github.smyrgeorge.sqlx4k.sqlite/-s-q-lite/-tx/-tx.html","searchKeys":["Tx","constructor(rt: <Error class: unknown class><out <Error class: unknown class>>, tx: <Error class: unknown class><out <Error class: unknown class>>)","io.github.smyrgeorge.sqlx4k.sqlite.SQLite.Tx.Tx"]},{"name":"constructor(url: String, options: ConnectionPool.Options = ConnectionPool.Options())","description":"io.github.smyrgeorge.sqlx4k.sqlite.SQLite.SQLite","location":"sqlx4k-sqlite/io.github.smyrgeorge.sqlx4k.sqlite/-s-q-lite/-s-q-lite.html","searchKeys":["SQLite","constructor(url: String, options: ConnectionPool.Options = ConnectionPool.Options())","io.github.smyrgeorge.sqlx4k.sqlite.SQLite.SQLite"]},{"name":"expect fun sqlite(url: String, options: ConnectionPool.Options = ConnectionPool.Options()): ISQLite","description":"io.github.smyrgeorge.sqlx4k.sqlite.sqlite","location":"sqlx4k-sqlite/io.github.smyrgeorge.sqlx4k.sqlite/sqlite.html","searchKeys":["sqlite","expect fun sqlite(url: String, options: ConnectionPool.Options = ConnectionPool.Options()): ISQLite","io.github.smyrgeorge.sqlx4k.sqlite.sqlite"]},{"name":"interface ISQLite : Driver","description":"io.github.smyrgeorge.sqlx4k.sqlite.ISQLite","location":"sqlx4k-sqlite/io.github.smyrgeorge.sqlx4k.sqlite/-i-s-q-lite/index.html","searchKeys":["ISQLite","interface ISQLite : Driver","io.github.smyrgeorge.sqlx4k.sqlite.ISQLite"]},{"name":"object Companion","description":"io.github.smyrgeorge.sqlx4k.sqlite.SQLite.Companion","location":"sqlx4k-sqlite/io.github.smyrgeorge.sqlx4k.sqlite/-s-q-lite/-companion/index.html","searchKeys":["Companion","object Companion","io.github.smyrgeorge.sqlx4k.sqlite.SQLite.Companion"]},{"name":"open override fun poolIdleSize(): Int","description":"io.github.smyrgeorge.sqlx4k.sqlite.SQLite.poolIdleSize","location":"sqlx4k-sqlite/io.github.smyrgeorge.sqlx4k.sqlite/-s-q-lite/pool-idle-size.html","searchKeys":["poolIdleSize","open override fun poolIdleSize(): Int","io.github.smyrgeorge.sqlx4k.sqlite.SQLite.poolIdleSize"]},{"name":"open override fun poolSize(): Int","description":"io.github.smyrgeorge.sqlx4k.sqlite.SQLite.poolSize","location":"sqlx4k-sqlite/io.github.smyrgeorge.sqlx4k.sqlite/-s-q-lite/pool-size.html","searchKeys":["poolSize","open override fun poolSize(): Int","io.github.smyrgeorge.sqlx4k.sqlite.SQLite.poolSize"]},{"name":"open override val status: Connection.Status","description":"io.github.smyrgeorge.sqlx4k.sqlite.SQLite.Cn.status","location":"sqlx4k-sqlite/io.github.smyrgeorge.sqlx4k.sqlite/-s-q-lite/-cn/status.html","searchKeys":["status","open override val status: Connection.Status","io.github.smyrgeorge.sqlx4k.sqlite.SQLite.Cn.status"]},{"name":"open override val status: Transaction.Status","description":"io.github.smyrgeorge.sqlx4k.sqlite.SQLite.Tx.status","location":"sqlx4k-sqlite/io.github.smyrgeorge.sqlx4k.sqlite/-s-q-lite/-tx/status.html","searchKeys":["status","open override val status: Transaction.Status","io.github.smyrgeorge.sqlx4k.sqlite.SQLite.Tx.status"]},{"name":"open suspend override fun <T> fetchAll(statement: Statement, rowMapper: RowMapper<T>): Result<List<T>>","description":"io.github.smyrgeorge.sqlx4k.sqlite.SQLite.Cn.fetchAll","location":"sqlx4k-sqlite/io.github.smyrgeorge.sqlx4k.sqlite/-s-q-lite/-cn/fetch-all.html","searchKeys":["fetchAll","open suspend override fun <T> fetchAll(statement: Statement, rowMapper: RowMapper<T>): Result<List<T>>","io.github.smyrgeorge.sqlx4k.sqlite.SQLite.Cn.fetchAll"]},{"name":"open suspend override fun <T> fetchAll(statement: Statement, rowMapper: RowMapper<T>): Result<List<T>>","description":"io.github.smyrgeorge.sqlx4k.sqlite.SQLite.Tx.fetchAll","location":"sqlx4k-sqlite/io.github.smyrgeorge.sqlx4k.sqlite/-s-q-lite/-tx/fetch-all.html","searchKeys":["fetchAll","open suspend override fun <T> fetchAll(statement: Statement, rowMapper: RowMapper<T>): Result<List<T>>","io.github.smyrgeorge.sqlx4k.sqlite.SQLite.Tx.fetchAll"]},{"name":"open suspend override fun <T> fetchAll(statement: Statement, rowMapper: RowMapper<T>): Result<List<T>>","description":"io.github.smyrgeorge.sqlx4k.sqlite.SQLite.fetchAll","location":"sqlx4k-sqlite/io.github.smyrgeorge.sqlx4k.sqlite/-s-q-lite/fetch-all.html","searchKeys":["fetchAll","open suspend override fun <T> fetchAll(statement: Statement, rowMapper: RowMapper<T>): Result<List<T>>","io.github.smyrgeorge.sqlx4k.sqlite.SQLite.fetchAll"]},{"name":"open suspend override fun acquire(): Result<Connection>","description":"io.github.smyrgeorge.sqlx4k.sqlite.SQLite.acquire","location":"sqlx4k-sqlite/io.github.smyrgeorge.sqlx4k.sqlite/-s-q-lite/acquire.html","searchKeys":["acquire","open suspend override fun acquire(): Result<Connection>","io.github.smyrgeorge.sqlx4k.sqlite.SQLite.acquire"]},{"name":"open suspend override fun begin(): Result<Transaction>","description":"io.github.smyrgeorge.sqlx4k.sqlite.SQLite.Cn.begin","location":"sqlx4k-sqlite/io.github.smyrgeorge.sqlx4k.sqlite/-s-q-lite/-cn/begin.html","searchKeys":["begin","open suspend override fun begin(): Result<Transaction>","io.github.smyrgeorge.sqlx4k.sqlite.SQLite.Cn.begin"]},{"name":"open suspend override fun begin(): Result<Transaction>","description":"io.github.smyrgeorge.sqlx4k.sqlite.SQLite.begin","location":"sqlx4k-sqlite/io.github.smyrgeorge.sqlx4k.sqlite/-s-q-lite/begin.html","searchKeys":["begin","open suspend override fun begin(): Result<Transaction>","io.github.smyrgeorge.sqlx4k.sqlite.SQLite.begin"]},{"name":"open suspend override fun close(): Result<Unit>","description":"io.github.smyrgeorge.sqlx4k.sqlite.SQLite.close","location":"sqlx4k-sqlite/io.github.smyrgeorge.sqlx4k.sqlite/-s-q-lite/close.html","searchKeys":["close","open suspend override fun close(): Result<Unit>","io.github.smyrgeorge.sqlx4k.sqlite.SQLite.close"]},{"name":"open suspend override fun commit(): Result<Unit>","description":"io.github.smyrgeorge.sqlx4k.sqlite.SQLite.Tx.commit","location":"sqlx4k-sqlite/io.github.smyrgeorge.sqlx4k.sqlite/-s-q-lite/-tx/commit.html","searchKeys":["commit","open suspend override fun commit(): Result<Unit>","io.github.smyrgeorge.sqlx4k.sqlite.SQLite.Tx.commit"]},{"name":"open suspend override fun execute(sql: String): Result<Long>","description":"io.github.smyrgeorge.sqlx4k.sqlite.SQLite.Cn.execute","location":"sqlx4k-sqlite/io.github.smyrgeorge.sqlx4k.sqlite/-s-q-lite/-cn/execute.html","searchKeys":["execute","open suspend override fun execute(sql: String): Result<Long>","io.github.smyrgeorge.sqlx4k.sqlite.SQLite.Cn.execute"]},{"name":"open suspend override fun execute(sql: String): Result<Long>","description":"io.github.smyrgeorge.sqlx4k.sqlite.SQLite.Tx.execute","location":"sqlx4k-sqlite/io.github.smyrgeorge.sqlx4k.sqlite/-s-q-lite/-tx/execute.html","searchKeys":["execute","open suspend override fun execute(sql: String): Result<Long>","io.github.smyrgeorge.sqlx4k.sqlite.SQLite.Tx.execute"]},{"name":"open suspend override fun execute(sql: String): Result<Long>","description":"io.github.smyrgeorge.sqlx4k.sqlite.SQLite.execute","location":"sqlx4k-sqlite/io.github.smyrgeorge.sqlx4k.sqlite/-s-q-lite/execute.html","searchKeys":["execute","open suspend override fun execute(sql: String): Result<Long>","io.github.smyrgeorge.sqlx4k.sqlite.SQLite.execute"]},{"name":"open suspend override fun execute(statement: Statement): Result<Long>","description":"io.github.smyrgeorge.sqlx4k.sqlite.SQLite.Cn.execute","location":"sqlx4k-sqlite/io.github.smyrgeorge.sqlx4k.sqlite/-s-q-lite/-cn/execute.html","searchKeys":["execute","open suspend override fun execute(statement: Statement): Result<Long>","io.github.smyrgeorge.sqlx4k.sqlite.SQLite.Cn.execute"]},{"name":"open suspend override fun execute(statement: Statement): Result<Long>","description":"io.github.smyrgeorge.sqlx4k.sqlite.SQLite.Tx.execute","location":"sqlx4k-sqlite/io.github.smyrgeorge.sqlx4k.sqlite/-s-q-lite/-tx/execute.html","searchKeys":["execute","open suspend override fun execute(statement: Statement): Result<Long>","io.github.smyrgeorge.sqlx4k.sqlite.SQLite.Tx.execute"]},{"name":"open suspend override fun execute(statement: Statement): Result<Long>","description":"io.github.smyrgeorge.sqlx4k.sqlite.SQLite.execute","location":"sqlx4k-sqlite/io.github.smyrgeorge.sqlx4k.sqlite/-s-q-lite/execute.html","searchKeys":["execute","open suspend override fun execute(statement: Statement): Result<Long>","io.github.smyrgeorge.sqlx4k.sqlite.SQLite.execute"]},{"name":"open suspend override fun fetchAll(sql: String): Result<ResultSet>","description":"io.github.smyrgeorge.sqlx4k.sqlite.SQLite.Cn.fetchAll","location":"sqlx4k-sqlite/io.github.smyrgeorge.sqlx4k.sqlite/-s-q-lite/-cn/fetch-all.html","searchKeys":["fetchAll","open suspend override fun fetchAll(sql: String): Result<ResultSet>","io.github.smyrgeorge.sqlx4k.sqlite.SQLite.Cn.fetchAll"]},{"name":"open suspend override fun fetchAll(sql: String): Result<ResultSet>","description":"io.github.smyrgeorge.sqlx4k.sqlite.SQLite.Tx.fetchAll","location":"sqlx4k-sqlite/io.github.smyrgeorge.sqlx4k.sqlite/-s-q-lite/-tx/fetch-all.html","searchKeys":["fetchAll","open suspend override fun fetchAll(sql: String): Result<ResultSet>","io.github.smyrgeorge.sqlx4k.sqlite.SQLite.Tx.fetchAll"]},{"name":"open suspend override fun fetchAll(sql: String): Result<ResultSet>","description":"io.github.smyrgeorge.sqlx4k.sqlite.SQLite.fetchAll","location":"sqlx4k-sqlite/io.github.smyrgeorge.sqlx4k.sqlite/-s-q-lite/fetch-all.html","searchKeys":["fetchAll","open suspend override fun fetchAll(sql: String): Result<ResultSet>","io.github.smyrgeorge.sqlx4k.sqlite.SQLite.fetchAll"]},{"name":"open suspend override fun fetchAll(statement: Statement): Result<ResultSet>","description":"io.github.smyrgeorge.sqlx4k.sqlite.SQLite.Cn.fetchAll","location":"sqlx4k-sqlite/io.github.smyrgeorge.sqlx4k.sqlite/-s-q-lite/-cn/fetch-all.html","searchKeys":["fetchAll","open suspend override fun fetchAll(statement: Statement): Result<ResultSet>","io.github.smyrgeorge.sqlx4k.sqlite.SQLite.Cn.fetchAll"]},{"name":"open suspend override fun fetchAll(statement: Statement): Result<ResultSet>","description":"io.github.smyrgeorge.sqlx4k.sqlite.SQLite.Tx.fetchAll","location":"sqlx4k-sqlite/io.github.smyrgeorge.sqlx4k.sqlite/-s-q-lite/-tx/fetch-all.html","searchKeys":["fetchAll","open suspend override fun fetchAll(statement: Statement): Result<ResultSet>","io.github.smyrgeorge.sqlx4k.sqlite.SQLite.Tx.fetchAll"]},{"name":"open suspend override fun fetchAll(statement: Statement): Result<ResultSet>","description":"io.github.smyrgeorge.sqlx4k.sqlite.SQLite.fetchAll","location":"sqlx4k-sqlite/io.github.smyrgeorge.sqlx4k.sqlite/-s-q-lite/fetch-all.html","searchKeys":["fetchAll","open suspend override fun fetchAll(statement: Statement): Result<ResultSet>","io.github.smyrgeorge.sqlx4k.sqlite.SQLite.fetchAll"]},{"name":"open suspend override fun migrate(path: String, table: String, schema: String?, createSchema: Boolean, afterStatementExecution: suspend (Statement, Duration) -> Unit, afterFileMigration: suspend (Migration, Duration) -> Unit): Result<Migrator.Results>","description":"io.github.smyrgeorge.sqlx4k.sqlite.SQLite.migrate","location":"sqlx4k-sqlite/io.github.smyrgeorge.sqlx4k.sqlite/-s-q-lite/migrate.html","searchKeys":["migrate","open suspend override fun migrate(path: String, table: String, schema: String?, createSchema: Boolean, afterStatementExecution: suspend (Statement, Duration) -> Unit, afterFileMigration: suspend (Migration, Duration) -> Unit): Result<Migrator.Results>","io.github.smyrgeorge.sqlx4k.sqlite.SQLite.migrate"]},{"name":"open suspend override fun release(): Result<Unit>","description":"io.github.smyrgeorge.sqlx4k.sqlite.SQLite.Cn.release","location":"sqlx4k-sqlite/io.github.smyrgeorge.sqlx4k.sqlite/-s-q-lite/-cn/release.html","searchKeys":["release","open suspend override fun release(): Result<Unit>","io.github.smyrgeorge.sqlx4k.sqlite.SQLite.Cn.release"]},{"name":"open suspend override fun rollback(): Result<Unit>","description":"io.github.smyrgeorge.sqlx4k.sqlite.SQLite.Tx.rollback","location":"sqlx4k-sqlite/io.github.smyrgeorge.sqlx4k.sqlite/-s-q-lite/-tx/rollback.html","searchKeys":["rollback","open suspend override fun rollback(): Result<Unit>","io.github.smyrgeorge.sqlx4k.sqlite.SQLite.Tx.rollback"]},{"name":"val encoders: Statement.ValueEncoderRegistry","description":"io.github.smyrgeorge.sqlx4k.sqlite.SQLite.Companion.encoders","location":"sqlx4k-sqlite/io.github.smyrgeorge.sqlx4k.sqlite/-s-q-lite/-companion/encoders.html","searchKeys":["encoders","val encoders: Statement.ValueEncoderRegistry","io.github.smyrgeorge.sqlx4k.sqlite.SQLite.Companion.encoders"]},{"name":"class Cn(connection: Connection) : Connection","description":"io.github.smyrgeorge.sqlx4k.mysql.MySQL.Cn","location":"sqlx4k-mysql/io.github.smyrgeorge.sqlx4k.mysql/[jvm]-my-s-q-l/-cn/index.html","searchKeys":["Cn","class Cn(connection: Connection) : Connection","io.github.smyrgeorge.sqlx4k.mysql.MySQL.Cn"]},{"name":"class Cn(rt: <Error class: unknown class><out <Error class: unknown class>>, cn: <Error class: unknown class><out <Error class: unknown class>>) : Connection","description":"io.github.smyrgeorge.sqlx4k.mysql.MySQL.Cn","location":"sqlx4k-mysql/io.github.smyrgeorge.sqlx4k.mysql/[native]-my-s-q-l/-cn/index.html","searchKeys":["Cn","class Cn(rt: <Error class: unknown class><out <Error class: unknown class>>, cn: <Error class: unknown class><out <Error class: unknown class>>) : Connection","io.github.smyrgeorge.sqlx4k.mysql.MySQL.Cn"]},{"name":"class MySQL(url: String, username: String, password: String, options: ConnectionPool.Options = ConnectionPool.Options()) : IMySQL","description":"io.github.smyrgeorge.sqlx4k.mysql.MySQL","location":"sqlx4k-mysql/io.github.smyrgeorge.sqlx4k.mysql/[jvm]-my-s-q-l/index.html","searchKeys":["MySQL","class MySQL(url: String, username: String, password: String, options: ConnectionPool.Options = ConnectionPool.Options()) : IMySQL","io.github.smyrgeorge.sqlx4k.mysql.MySQL"]},{"name":"class MySQL(url: String, username: String, password: String, options: ConnectionPool.Options = ConnectionPool.Options()) : IMySQL","description":"io.github.smyrgeorge.sqlx4k.mysql.MySQL","location":"sqlx4k-mysql/io.github.smyrgeorge.sqlx4k.mysql/[native]-my-s-q-l/index.html","searchKeys":["MySQL","class MySQL(url: String, username: String, password: String, options: ConnectionPool.Options = ConnectionPool.Options()) : IMySQL","io.github.smyrgeorge.sqlx4k.mysql.MySQL"]},{"name":"class Tx(connection: Connection, closeConnectionAfterTx: Boolean) : Transaction","description":"io.github.smyrgeorge.sqlx4k.mysql.MySQL.Tx","location":"sqlx4k-mysql/io.github.smyrgeorge.sqlx4k.mysql/[jvm]-my-s-q-l/-tx/index.html","searchKeys":["Tx","class Tx(connection: Connection, closeConnectionAfterTx: Boolean) : Transaction","io.github.smyrgeorge.sqlx4k.mysql.MySQL.Tx"]},{"name":"class Tx(rt: <Error class: unknown class><out <Error class: unknown class>>, tx: <Error class: unknown class><out <Error class: unknown class>>) : Transaction","description":"io.github.smyrgeorge.sqlx4k.mysql.MySQL.Tx","location":"sqlx4k-mysql/io.github.smyrgeorge.sqlx4k.mysql/[native]-my-s-q-l/-tx/index.html","searchKeys":["Tx","class Tx(rt: <Error class: unknown class><out <Error class: unknown class>>, tx: <Error class: unknown class><out <Error class: unknown class>>) : Transaction","io.github.smyrgeorge.sqlx4k.mysql.MySQL.Tx"]},{"name":"constructor(connection: Connection)","description":"io.github.smyrgeorge.sqlx4k.mysql.MySQL.Cn.Cn","location":"sqlx4k-mysql/io.github.smyrgeorge.sqlx4k.mysql/[jvm]-my-s-q-l/-cn/-cn.html","searchKeys":["Cn","constructor(connection: Connection)","io.github.smyrgeorge.sqlx4k.mysql.MySQL.Cn.Cn"]},{"name":"constructor(connection: Connection, closeConnectionAfterTx: Boolean)","description":"io.github.smyrgeorge.sqlx4k.mysql.MySQL.Tx.Tx","location":"sqlx4k-mysql/io.github.smyrgeorge.sqlx4k.mysql/[jvm]-my-s-q-l/-tx/-tx.html","searchKeys":["Tx","constructor(connection: Connection, closeConnectionAfterTx: Boolean)","io.github.smyrgeorge.sqlx4k.mysql.MySQL.Tx.Tx"]},{"name":"constructor(rt: <Error class: unknown class><out <Error class: unknown class>>, cn: <Error class: unknown class><out <Error class: unknown class>>)","description":"io.github.smyrgeorge.sqlx4k.mysql.MySQL.Cn.Cn","location":"sqlx4k-mysql/io.github.smyrgeorge.sqlx4k.mysql/[native]-my-s-q-l/-cn/-cn.html","searchKeys":["Cn","constructor(rt: <Error class: unknown class><out <Error class: unknown class>>, cn: <Error class: unknown class><out <Error class: unknown class>>)","io.github.smyrgeorge.sqlx4k.mysql.MySQL.Cn.Cn"]},{"name":"constructor(rt: <Error class: unknown class><out <Error class: unknown class>>, tx: <Error class: unknown class><out <Error class: unknown class>>)","description":"io.github.smyrgeorge.sqlx4k.mysql.MySQL.Tx.Tx","location":"sqlx4k-mysql/io.github.smyrgeorge.sqlx4k.mysql/[native]-my-s-q-l/-tx/-tx.html","searchKeys":["Tx","constructor(rt: <Error class: unknown class><out <Error class: unknown class>>, tx: <Error class: unknown class><out <Error class: unknown class>>)","io.github.smyrgeorge.sqlx4k.mysql.MySQL.Tx.Tx"]},{"name":"constructor(url: String, username: String, password: String, options: ConnectionPool.Options = ConnectionPool.Options())","description":"io.github.smyrgeorge.sqlx4k.mysql.MySQL.MySQL","location":"sqlx4k-mysql/io.github.smyrgeorge.sqlx4k.mysql/[jvm]-my-s-q-l/-my-s-q-l.html","searchKeys":["MySQL","constructor(url: String, username: String, password: String, options: ConnectionPool.Options = ConnectionPool.Options())","io.github.smyrgeorge.sqlx4k.mysql.MySQL.MySQL"]},{"name":"constructor(url: String, username: String, password: String, options: ConnectionPool.Options = ConnectionPool.Options())","description":"io.github.smyrgeorge.sqlx4k.mysql.MySQL.MySQL","location":"sqlx4k-mysql/io.github.smyrgeorge.sqlx4k.mysql/[native]-my-s-q-l/-my-s-q-l.html","searchKeys":["MySQL","constructor(url: String, username: String, password: String, options: ConnectionPool.Options = ConnectionPool.Options())","io.github.smyrgeorge.sqlx4k.mysql.MySQL.MySQL"]},{"name":"expect fun mySQL(url: String, username: String, password: String, options: ConnectionPool.Options = ConnectionPool.Options()): IMySQL","description":"io.github.smyrgeorge.sqlx4k.mysql.mySQL","location":"sqlx4k-mysql/io.github.smyrgeorge.sqlx4k.mysql/my-s-q-l.html","searchKeys":["mySQL","expect fun mySQL(url: String, username: String, password: String, options: ConnectionPool.Options = ConnectionPool.Options()): IMySQL","io.github.smyrgeorge.sqlx4k.mysql.mySQL"]},{"name":"interface IMySQL : Driver","description":"io.github.smyrgeorge.sqlx4k.mysql.IMySQL","location":"sqlx4k-mysql/io.github.smyrgeorge.sqlx4k.mysql/-i-my-s-q-l/index.html","searchKeys":["IMySQL","interface IMySQL : Driver","io.github.smyrgeorge.sqlx4k.mysql.IMySQL"]},{"name":"object Companion","description":"io.github.smyrgeorge.sqlx4k.mysql.MySQL.Companion","location":"sqlx4k-mysql/io.github.smyrgeorge.sqlx4k.mysql/[jvm]-my-s-q-l/-companion/index.html","searchKeys":["Companion","object Companion","io.github.smyrgeorge.sqlx4k.mysql.MySQL.Companion"]},{"name":"object Companion","description":"io.github.smyrgeorge.sqlx4k.mysql.MySQL.Companion","location":"sqlx4k-mysql/io.github.smyrgeorge.sqlx4k.mysql/[native]-my-s-q-l/-companion/index.html","searchKeys":["Companion","object Companion","io.github.smyrgeorge.sqlx4k.mysql.MySQL.Companion"]},{"name":"open override fun poolIdleSize(): Int","description":"io.github.smyrgeorge.sqlx4k.mysql.MySQL.poolIdleSize","location":"sqlx4k-mysql/io.github.smyrgeorge.sqlx4k.mysql/[jvm]-my-s-q-l/pool-idle-size.html","searchKeys":["poolIdleSize","open override fun poolIdleSize(): Int","io.github.smyrgeorge.sqlx4k.mysql.MySQL.poolIdleSize"]},{"name":"open override fun poolIdleSize(): Int","description":"io.github.smyrgeorge.sqlx4k.mysql.MySQL.poolIdleSize","location":"sqlx4k-mysql/io.github.smyrgeorge.sqlx4k.mysql/[native]-my-s-q-l/pool-idle-size.html","searchKeys":["poolIdleSize","open override fun poolIdleSize(): Int","io.github.smyrgeorge.sqlx4k.mysql.MySQL.poolIdleSize"]},{"name":"open override fun poolSize(): Int","description":"io.github.smyrgeorge.sqlx4k.mysql.MySQL.poolSize","location":"sqlx4k-mysql/io.github.smyrgeorge.sqlx4k.mysql/[jvm]-my-s-q-l/pool-size.html","searchKeys":["poolSize","open override fun poolSize(): Int","io.github.smyrgeorge.sqlx4k.mysql.MySQL.poolSize"]},{"name":"open override fun poolSize(): Int","description":"io.github.smyrgeorge.sqlx4k.mysql.MySQL.poolSize","location":"sqlx4k-mysql/io.github.smyrgeorge.sqlx4k.mysql/[native]-my-s-q-l/pool-size.html","searchKeys":["poolSize","open override fun poolSize(): Int","io.github.smyrgeorge.sqlx4k.mysql.MySQL.poolSize"]},{"name":"open override val status: Connection.Status","description":"io.github.smyrgeorge.sqlx4k.mysql.MySQL.Cn.status","location":"sqlx4k-mysql/io.github.smyrgeorge.sqlx4k.mysql/[jvm]-my-s-q-l/-cn/status.html","searchKeys":["status","open override val status: Connection.Status","io.github.smyrgeorge.sqlx4k.mysql.MySQL.Cn.status"]},{"name":"open override val status: Connection.Status","description":"io.github.smyrgeorge.sqlx4k.mysql.MySQL.Cn.status","location":"sqlx4k-mysql/io.github.smyrgeorge.sqlx4k.mysql/[native]-my-s-q-l/-cn/status.html","searchKeys":["status","open override val status: Connection.Status","io.github.smyrgeorge.sqlx4k.mysql.MySQL.Cn.status"]},{"name":"open override val status: Transaction.Status","description":"io.github.smyrgeorge.sqlx4k.mysql.MySQL.Tx.status","location":"sqlx4k-mysql/io.github.smyrgeorge.sqlx4k.mysql/[jvm]-my-s-q-l/-tx/status.html","searchKeys":["status","open override val status: Transaction.Status","io.github.smyrgeorge.sqlx4k.mysql.MySQL.Tx.status"]},{"name":"open override val status: Transaction.Status","description":"io.github.smyrgeorge.sqlx4k.mysql.MySQL.Tx.status","location":"sqlx4k-mysql/io.github.smyrgeorge.sqlx4k.mysql/[native]-my-s-q-l/-tx/status.html","searchKeys":["status","open override val status: Transaction.Status","io.github.smyrgeorge.sqlx4k.mysql.MySQL.Tx.status"]},{"name":"open suspend override fun <T> fetchAll(statement: Statement, rowMapper: RowMapper<T>): Result<List<T>>","description":"io.github.smyrgeorge.sqlx4k.mysql.MySQL.Cn.fetchAll","location":"sqlx4k-mysql/io.github.smyrgeorge.sqlx4k.mysql/[jvm]-my-s-q-l/-cn/fetch-all.html","searchKeys":["fetchAll","open suspend override fun <T> fetchAll(statement: Statement, rowMapper: RowMapper<T>): Result<List<T>>","io.github.smyrgeorge.sqlx4k.mysql.MySQL.Cn.fetchAll"]},{"name":"open suspend override fun <T> fetchAll(statement: Statement, rowMapper: RowMapper<T>): Result<List<T>>","description":"io.github.smyrgeorge.sqlx4k.mysql.MySQL.Cn.fetchAll","location":"sqlx4k-mysql/io.github.smyrgeorge.sqlx4k.mysql/[native]-my-s-q-l/-cn/fetch-all.html","searchKeys":["fetchAll","open suspend override fun <T> fetchAll(statement: Statement, rowMapper: RowMapper<T>): Result<List<T>>","io.github.smyrgeorge.sqlx4k.mysql.MySQL.Cn.fetchAll"]},{"name":"open suspend override fun <T> fetchAll(statement: Statement, rowMapper: RowMapper<T>): Result<List<T>>","description":"io.github.smyrgeorge.sqlx4k.mysql.MySQL.Tx.fetchAll","location":"sqlx4k-mysql/io.github.smyrgeorge.sqlx4k.mysql/[jvm]-my-s-q-l/-tx/fetch-all.html","searchKeys":["fetchAll","open suspend override fun <T> fetchAll(statement: Statement, rowMapper: RowMapper<T>): Result<List<T>>","io.github.smyrgeorge.sqlx4k.mysql.MySQL.Tx.fetchAll"]},{"name":"open suspend override fun <T> fetchAll(statement: Statement, rowMapper: RowMapper<T>): Result<List<T>>","description":"io.github.smyrgeorge.sqlx4k.mysql.MySQL.Tx.fetchAll","location":"sqlx4k-mysql/io.github.smyrgeorge.sqlx4k.mysql/[native]-my-s-q-l/-tx/fetch-all.html","searchKeys":["fetchAll","open suspend override fun <T> fetchAll(statement: Statement, rowMapper: RowMapper<T>): Result<List<T>>","io.github.smyrgeorge.sqlx4k.mysql.MySQL.Tx.fetchAll"]},{"name":"open suspend override fun <T> fetchAll(statement: Statement, rowMapper: RowMapper<T>): Result<List<T>>","description":"io.github.smyrgeorge.sqlx4k.mysql.MySQL.fetchAll","location":"sqlx4k-mysql/io.github.smyrgeorge.sqlx4k.mysql/[jvm]-my-s-q-l/fetch-all.html","searchKeys":["fetchAll","open suspend override fun <T> fetchAll(statement: Statement, rowMapper: RowMapper<T>): Result<List<T>>","io.github.smyrgeorge.sqlx4k.mysql.MySQL.fetchAll"]},{"name":"open suspend override fun <T> fetchAll(statement: Statement, rowMapper: RowMapper<T>): Result<List<T>>","description":"io.github.smyrgeorge.sqlx4k.mysql.MySQL.fetchAll","location":"sqlx4k-mysql/io.github.smyrgeorge.sqlx4k.mysql/[native]-my-s-q-l/fetch-all.html","searchKeys":["fetchAll","open suspend override fun <T> fetchAll(statement: Statement, rowMapper: RowMapper<T>): Result<List<T>>","io.github.smyrgeorge.sqlx4k.mysql.MySQL.fetchAll"]},{"name":"open suspend override fun acquire(): Result<Connection>","description":"io.github.smyrgeorge.sqlx4k.mysql.MySQL.acquire","location":"sqlx4k-mysql/io.github.smyrgeorge.sqlx4k.mysql/[jvm]-my-s-q-l/acquire.html","searchKeys":["acquire","open suspend override fun acquire(): Result<Connection>","io.github.smyrgeorge.sqlx4k.mysql.MySQL.acquire"]},{"name":"open suspend override fun acquire(): Result<Connection>","description":"io.github.smyrgeorge.sqlx4k.mysql.MySQL.acquire","location":"sqlx4k-mysql/io.github.smyrgeorge.sqlx4k.mysql/[native]-my-s-q-l/acquire.html","searchKeys":["acquire","open suspend override fun acquire(): Result<Connection>","io.github.smyrgeorge.sqlx4k.mysql.MySQL.acquire"]},{"name":"open suspend override fun begin(): Result<Transaction>","description":"io.github.smyrgeorge.sqlx4k.mysql.MySQL.Cn.begin","location":"sqlx4k-mysql/io.github.smyrgeorge.sqlx4k.mysql/[jvm]-my-s-q-l/-cn/begin.html","searchKeys":["begin","open suspend override fun begin(): Result<Transaction>","io.github.smyrgeorge.sqlx4k.mysql.MySQL.Cn.begin"]},{"name":"open suspend override fun begin(): Result<Transaction>","description":"io.github.smyrgeorge.sqlx4k.mysql.MySQL.Cn.begin","location":"sqlx4k-mysql/io.github.smyrgeorge.sqlx4k.mysql/[native]-my-s-q-l/-cn/begin.html","searchKeys":["begin","open suspend override fun begin(): Result<Transaction>","io.github.smyrgeorge.sqlx4k.mysql.MySQL.Cn.begin"]},{"name":"open suspend override fun begin(): Result<Transaction>","description":"io.github.smyrgeorge.sqlx4k.mysql.MySQL.begin","location":"sqlx4k-mysql/io.github.smyrgeorge.sqlx4k.mysql/[jvm]-my-s-q-l/begin.html","searchKeys":["begin","open suspend override fun begin(): Result<Transaction>","io.github.smyrgeorge.sqlx4k.mysql.MySQL.begin"]},{"name":"open suspend override fun begin(): Result<Transaction>","description":"io.github.smyrgeorge.sqlx4k.mysql.MySQL.begin","location":"sqlx4k-mysql/io.github.smyrgeorge.sqlx4k.mysql/[native]-my-s-q-l/begin.html","searchKeys":["begin","open suspend override fun begin(): Result<Transaction>","io.github.smyrgeorge.sqlx4k.mysql.MySQL.begin"]},{"name":"open suspend override fun close(): Result<Unit>","description":"io.github.smyrgeorge.sqlx4k.mysql.MySQL.close","location":"sqlx4k-mysql/io.github.smyrgeorge.sqlx4k.mysql/[jvm]-my-s-q-l/close.html","searchKeys":["close","open suspend override fun close(): Result<Unit>","io.github.smyrgeorge.sqlx4k.mysql.MySQL.close"]},{"name":"open suspend override fun close(): Result<Unit>","description":"io.github.smyrgeorge.sqlx4k.mysql.MySQL.close","location":"sqlx4k-mysql/io.github.smyrgeorge.sqlx4k.mysql/[native]-my-s-q-l/close.html","searchKeys":["close","open suspend override fun close(): Result<Unit>","io.github.smyrgeorge.sqlx4k.mysql.MySQL.close"]},{"name":"open suspend override fun commit(): Result<Unit>","description":"io.github.smyrgeorge.sqlx4k.mysql.MySQL.Tx.commit","location":"sqlx4k-mysql/io.github.smyrgeorge.sqlx4k.mysql/[jvm]-my-s-q-l/-tx/commit.html","searchKeys":["commit","open suspend override fun commit(): Result<Unit>","io.github.smyrgeorge.sqlx4k.mysql.MySQL.Tx.commit"]},{"name":"open suspend override fun commit(): Result<Unit>","description":"io.github.smyrgeorge.sqlx4k.mysql.MySQL.Tx.commit","location":"sqlx4k-mysql/io.github.smyrgeorge.sqlx4k.mysql/[native]-my-s-q-l/-tx/commit.html","searchKeys":["commit","open suspend override fun commit(): Result<Unit>","io.github.smyrgeorge.sqlx4k.mysql.MySQL.Tx.commit"]},{"name":"open suspend override fun execute(sql: String): <Error class: unknown class>","description":"io.github.smyrgeorge.sqlx4k.mysql.MySQL.execute","location":"sqlx4k-mysql/io.github.smyrgeorge.sqlx4k.mysql/[jvm]-my-s-q-l/execute.html","searchKeys":["execute","open suspend override fun execute(sql: String): <Error class: unknown class>","io.github.smyrgeorge.sqlx4k.mysql.MySQL.execute"]},{"name":"open suspend override fun execute(sql: String): Result<Long>","description":"io.github.smyrgeorge.sqlx4k.mysql.MySQL.Cn.execute","location":"sqlx4k-mysql/io.github.smyrgeorge.sqlx4k.mysql/[jvm]-my-s-q-l/-cn/execute.html","searchKeys":["execute","open suspend override fun execute(sql: String): Result<Long>","io.github.smyrgeorge.sqlx4k.mysql.MySQL.Cn.execute"]},{"name":"open suspend override fun execute(sql: String): Result<Long>","description":"io.github.smyrgeorge.sqlx4k.mysql.MySQL.Cn.execute","location":"sqlx4k-mysql/io.github.smyrgeorge.sqlx4k.mysql/[native]-my-s-q-l/-cn/execute.html","searchKeys":["execute","open suspend override fun execute(sql: String): Result<Long>","io.github.smyrgeorge.sqlx4k.mysql.MySQL.Cn.execute"]},{"name":"open suspend override fun execute(sql: String): Result<Long>","description":"io.github.smyrgeorge.sqlx4k.mysql.MySQL.Tx.execute","location":"sqlx4k-mysql/io.github.smyrgeorge.sqlx4k.mysql/[jvm]-my-s-q-l/-tx/execute.html","searchKeys":["execute","open suspend override fun execute(sql: String): Result<Long>","io.github.smyrgeorge.sqlx4k.mysql.MySQL.Tx.execute"]},{"name":"open suspend override fun execute(sql: String): Result<Long>","description":"io.github.smyrgeorge.sqlx4k.mysql.MySQL.Tx.execute","location":"sqlx4k-mysql/io.github.smyrgeorge.sqlx4k.mysql/[native]-my-s-q-l/-tx/execute.html","searchKeys":["execute","open suspend override fun execute(sql: String): Result<Long>","io.github.smyrgeorge.sqlx4k.mysql.MySQL.Tx.execute"]},{"name":"open suspend override fun execute(sql: String): Result<Long>","description":"io.github.smyrgeorge.sqlx4k.mysql.MySQL.execute","location":"sqlx4k-mysql/io.github.smyrgeorge.sqlx4k.mysql/[native]-my-s-q-l/execute.html","searchKeys":["execute","open suspend override fun execute(sql: String): Result<Long>","io.github.smyrgeorge.sqlx4k.mysql.MySQL.execute"]},{"name":"open suspend override fun execute(statement: Statement): Result<Long>","description":"io.github.smyrgeorge.sqlx4k.mysql.MySQL.Cn.execute","location":"sqlx4k-mysql/io.github.smyrgeorge.sqlx4k.mysql/[jvm]-my-s-q-l/-cn/execute.html","searchKeys":["execute","open suspend override fun execute(statement: Statement): Result<Long>","io.github.smyrgeorge.sqlx4k.mysql.MySQL.Cn.execute"]},{"name":"open suspend override fun execute(statement: Statement): Result<Long>","description":"io.github.smyrgeorge.sqlx4k.mysql.MySQL.Cn.execute","location":"sqlx4k-mysql/io.github.smyrgeorge.sqlx4k.mysql/[native]-my-s-q-l/-cn/execute.html","searchKeys":["execute","open suspend override fun execute(statement: Statement): Result<Long>","io.github.smyrgeorge.sqlx4k.mysql.MySQL.Cn.execute"]},{"name":"open suspend override fun execute(statement: Statement): Result<Long>","description":"io.github.smyrgeorge.sqlx4k.mysql.MySQL.Tx.execute","location":"sqlx4k-mysql/io.github.smyrgeorge.sqlx4k.mysql/[jvm]-my-s-q-l/-tx/execute.html","searchKeys":["execute","open suspend override fun execute(statement: Statement): Result<Long>","io.github.smyrgeorge.sqlx4k.mysql.MySQL.Tx.execute"]},{"name":"open suspend override fun execute(statement: Statement): Result<Long>","description":"io.github.smyrgeorge.sqlx4k.mysql.MySQL.Tx.execute","location":"sqlx4k-mysql/io.github.smyrgeorge.sqlx4k.mysql/[native]-my-s-q-l/-tx/execute.html","searchKeys":["execute","open suspend override fun execute(statement: Statement): Result<Long>","io.github.smyrgeorge.sqlx4k.mysql.MySQL.Tx.execute"]},{"name":"open suspend override fun execute(statement: Statement): Result<Long>","description":"io.github.smyrgeorge.sqlx4k.mysql.MySQL.execute","location":"sqlx4k-mysql/io.github.smyrgeorge.sqlx4k.mysql/[jvm]-my-s-q-l/execute.html","searchKeys":["execute","open suspend override fun execute(statement: Statement): Result<Long>","io.github.smyrgeorge.sqlx4k.mysql.MySQL.execute"]},{"name":"open suspend override fun execute(statement: Statement): Result<Long>","description":"io.github.smyrgeorge.sqlx4k.mysql.MySQL.execute","location":"sqlx4k-mysql/io.github.smyrgeorge.sqlx4k.mysql/[native]-my-s-q-l/execute.html","searchKeys":["execute","open suspend override fun execute(statement: Statement): Result<Long>","io.github.smyrgeorge.sqlx4k.mysql.MySQL.execute"]},{"name":"open suspend override fun fetchAll(sql: String): Result<ResultSet>","description":"io.github.smyrgeorge.sqlx4k.mysql.MySQL.Cn.fetchAll","location":"sqlx4k-mysql/io.github.smyrgeorge.sqlx4k.mysql/[jvm]-my-s-q-l/-cn/fetch-all.html","searchKeys":["fetchAll","open suspend override fun fetchAll(sql: String): Result<ResultSet>","io.github.smyrgeorge.sqlx4k.mysql.MySQL.Cn.fetchAll"]},{"name":"open suspend override fun fetchAll(sql: String): Result<ResultSet>","description":"io.github.smyrgeorge.sqlx4k.mysql.MySQL.Cn.fetchAll","location":"sqlx4k-mysql/io.github.smyrgeorge.sqlx4k.mysql/[native]-my-s-q-l/-cn/fetch-all.html","searchKeys":["fetchAll","open suspend override fun fetchAll(sql: String): Result<ResultSet>","io.github.smyrgeorge.sqlx4k.mysql.MySQL.Cn.fetchAll"]},{"name":"open suspend override fun fetchAll(sql: String): Result<ResultSet>","description":"io.github.smyrgeorge.sqlx4k.mysql.MySQL.Tx.fetchAll","location":"sqlx4k-mysql/io.github.smyrgeorge.sqlx4k.mysql/[jvm]-my-s-q-l/-tx/fetch-all.html","searchKeys":["fetchAll","open suspend override fun fetchAll(sql: String): Result<ResultSet>","io.github.smyrgeorge.sqlx4k.mysql.MySQL.Tx.fetchAll"]},{"name":"open suspend override fun fetchAll(sql: String): Result<ResultSet>","description":"io.github.smyrgeorge.sqlx4k.mysql.MySQL.Tx.fetchAll","location":"sqlx4k-mysql/io.github.smyrgeorge.sqlx4k.mysql/[native]-my-s-q-l/-tx/fetch-all.html","searchKeys":["fetchAll","open suspend override fun fetchAll(sql: String): Result<ResultSet>","io.github.smyrgeorge.sqlx4k.mysql.MySQL.Tx.fetchAll"]},{"name":"open suspend override fun fetchAll(sql: String): Result<ResultSet>","description":"io.github.smyrgeorge.sqlx4k.mysql.MySQL.fetchAll","location":"sqlx4k-mysql/io.github.smyrgeorge.sqlx4k.mysql/[jvm]-my-s-q-l/fetch-all.html","searchKeys":["fetchAll","open suspend override fun fetchAll(sql: String): Result<ResultSet>","io.github.smyrgeorge.sqlx4k.mysql.MySQL.fetchAll"]},{"name":"open suspend override fun fetchAll(sql: String): Result<ResultSet>","description":"io.github.smyrgeorge.sqlx4k.mysql.MySQL.fetchAll","location":"sqlx4k-mysql/io.github.smyrgeorge.sqlx4k.mysql/[native]-my-s-q-l/fetch-all.html","searchKeys":["fetchAll","open suspend override fun fetchAll(sql: String): Result<ResultSet>","io.github.smyrgeorge.sqlx4k.mysql.MySQL.fetchAll"]},{"name":"open suspend override fun fetchAll(statement: Statement): Result<ResultSet>","description":"io.github.smyrgeorge.sqlx4k.mysql.MySQL.Cn.fetchAll","location":"sqlx4k-mysql/io.github.smyrgeorge.sqlx4k.mysql/[jvm]-my-s-q-l/-cn/fetch-all.html","searchKeys":["fetchAll","open suspend override fun fetchAll(statement: Statement): Result<ResultSet>","io.github.smyrgeorge.sqlx4k.mysql.MySQL.Cn.fetchAll"]},{"name":"open suspend override fun fetchAll(statement: Statement): Result<ResultSet>","description":"io.github.smyrgeorge.sqlx4k.mysql.MySQL.Cn.fetchAll","location":"sqlx4k-mysql/io.github.smyrgeorge.sqlx4k.mysql/[native]-my-s-q-l/-cn/fetch-all.html","searchKeys":["fetchAll","open suspend override fun fetchAll(statement: Statement): Result<ResultSet>","io.github.smyrgeorge.sqlx4k.mysql.MySQL.Cn.fetchAll"]},{"name":"open suspend override fun fetchAll(statement: Statement): Result<ResultSet>","description":"io.github.smyrgeorge.sqlx4k.mysql.MySQL.Tx.fetchAll","location":"sqlx4k-mysql/io.github.smyrgeorge.sqlx4k.mysql/[jvm]-my-s-q-l/-tx/fetch-all.html","searchKeys":["fetchAll","open suspend override fun fetchAll(statement: Statement): Result<ResultSet>","io.github.smyrgeorge.sqlx4k.mysql.MySQL.Tx.fetchAll"]},{"name":"open suspend override fun fetchAll(statement: Statement): Result<ResultSet>","description":"io.github.smyrgeorge.sqlx4k.mysql.MySQL.Tx.fetchAll","location":"sqlx4k-mysql/io.github.smyrgeorge.sqlx4k.mysql/[native]-my-s-q-l/-tx/fetch-all.html","searchKeys":["fetchAll","open suspend override fun fetchAll(statement: Statement): Result<ResultSet>","io.github.smyrgeorge.sqlx4k.mysql.MySQL.Tx.fetchAll"]},{"name":"open suspend override fun fetchAll(statement: Statement): Result<ResultSet>","description":"io.github.smyrgeorge.sqlx4k.mysql.MySQL.fetchAll","location":"sqlx4k-mysql/io.github.smyrgeorge.sqlx4k.mysql/[jvm]-my-s-q-l/fetch-all.html","searchKeys":["fetchAll","open suspend override fun fetchAll(statement: Statement): Result<ResultSet>","io.github.smyrgeorge.sqlx4k.mysql.MySQL.fetchAll"]},{"name":"open suspend override fun fetchAll(statement: Statement): Result<ResultSet>","description":"io.github.smyrgeorge.sqlx4k.mysql.MySQL.fetchAll","location":"sqlx4k-mysql/io.github.smyrgeorge.sqlx4k.mysql/[native]-my-s-q-l/fetch-all.html","searchKeys":["fetchAll","open suspend override fun fetchAll(statement: Statement): Result<ResultSet>","io.github.smyrgeorge.sqlx4k.mysql.MySQL.fetchAll"]},{"name":"open suspend override fun migrate(path: String, table: String, schema: String?, createSchema: Boolean, afterStatementExecution: suspend (Statement, Duration) -> Unit, afterFileMigration: suspend (Migration, Duration) -> Unit): Result<Migrator.Results>","description":"io.github.smyrgeorge.sqlx4k.mysql.MySQL.migrate","location":"sqlx4k-mysql/io.github.smyrgeorge.sqlx4k.mysql/[jvm]-my-s-q-l/migrate.html","searchKeys":["migrate","open suspend override fun migrate(path: String, table: String, schema: String?, createSchema: Boolean, afterStatementExecution: suspend (Statement, Duration) -> Unit, afterFileMigration: suspend (Migration, Duration) -> Unit): Result<Migrator.Results>","io.github.smyrgeorge.sqlx4k.mysql.MySQL.migrate"]},{"name":"open suspend override fun migrate(path: String, table: String, schema: String?, createSchema: Boolean, afterStatementExecution: suspend (Statement, Duration) -> Unit, afterFileMigration: suspend (Migration, Duration) -> Unit): Result<Migrator.Results>","description":"io.github.smyrgeorge.sqlx4k.mysql.MySQL.migrate","location":"sqlx4k-mysql/io.github.smyrgeorge.sqlx4k.mysql/[native]-my-s-q-l/migrate.html","searchKeys":["migrate","open suspend override fun migrate(path: String, table: String, schema: String?, createSchema: Boolean, afterStatementExecution: suspend (Statement, Duration) -> Unit, afterFileMigration: suspend (Migration, Duration) -> Unit): Result<Migrator.Results>","io.github.smyrgeorge.sqlx4k.mysql.MySQL.migrate"]},{"name":"open suspend override fun release(): Result<Unit>","description":"io.github.smyrgeorge.sqlx4k.mysql.MySQL.Cn.release","location":"sqlx4k-mysql/io.github.smyrgeorge.sqlx4k.mysql/[jvm]-my-s-q-l/-cn/release.html","searchKeys":["release","open suspend override fun release(): Result<Unit>","io.github.smyrgeorge.sqlx4k.mysql.MySQL.Cn.release"]},{"name":"open suspend override fun release(): Result<Unit>","description":"io.github.smyrgeorge.sqlx4k.mysql.MySQL.Cn.release","location":"sqlx4k-mysql/io.github.smyrgeorge.sqlx4k.mysql/[native]-my-s-q-l/-cn/release.html","searchKeys":["release","open suspend override fun release(): Result<Unit>","io.github.smyrgeorge.sqlx4k.mysql.MySQL.Cn.release"]},{"name":"open suspend override fun rollback(): Result<Unit>","description":"io.github.smyrgeorge.sqlx4k.mysql.MySQL.Tx.rollback","location":"sqlx4k-mysql/io.github.smyrgeorge.sqlx4k.mysql/[jvm]-my-s-q-l/-tx/rollback.html","searchKeys":["rollback","open suspend override fun rollback(): Result<Unit>","io.github.smyrgeorge.sqlx4k.mysql.MySQL.Tx.rollback"]},{"name":"open suspend override fun rollback(): Result<Unit>","description":"io.github.smyrgeorge.sqlx4k.mysql.MySQL.Tx.rollback","location":"sqlx4k-mysql/io.github.smyrgeorge.sqlx4k.mysql/[native]-my-s-q-l/-tx/rollback.html","searchKeys":["rollback","open suspend override fun rollback(): Result<Unit>","io.github.smyrgeorge.sqlx4k.mysql.MySQL.Tx.rollback"]},{"name":"val encoders: Statement.ValueEncoderRegistry","description":"io.github.smyrgeorge.sqlx4k.mysql.MySQL.Companion.encoders","location":"sqlx4k-mysql/io.github.smyrgeorge.sqlx4k.mysql/[jvm]-my-s-q-l/-companion/encoders.html","searchKeys":["encoders","val encoders: Statement.ValueEncoderRegistry","io.github.smyrgeorge.sqlx4k.mysql.MySQL.Companion.encoders"]},{"name":"val encoders: Statement.ValueEncoderRegistry","description":"io.github.smyrgeorge.sqlx4k.mysql.MySQL.Companion.encoders","location":"sqlx4k-mysql/io.github.smyrgeorge.sqlx4k.mysql/[native]-my-s-q-l/-companion/encoders.html","searchKeys":["encoders","val encoders: Statement.ValueEncoderRegistry","io.github.smyrgeorge.sqlx4k.mysql.MySQL.Companion.encoders"]},{"name":"class RepositoryProcessor(options: Map<String, String>, logger: KSPLogger, codeGenerator: CodeGenerator) : SymbolProcessor","description":"io.github.smyrgeorge.sqlx4k.processor.RepositoryProcessor","location":"sqlx4k-codegen/io.github.smyrgeorge.sqlx4k.processor/-repository-processor/index.html","searchKeys":["RepositoryProcessor","class RepositoryProcessor(options: Map<String, String>, logger: KSPLogger, codeGenerator: CodeGenerator) : SymbolProcessor","io.github.smyrgeorge.sqlx4k.processor.RepositoryProcessor"]},{"name":"class RepositoryProcessorProvider : SymbolProcessorProvider","description":"io.github.smyrgeorge.sqlx4k.processor.RepositoryProcessorProvider","location":"sqlx4k-codegen/io.github.smyrgeorge.sqlx4k.processor/-repository-processor-provider/index.html","searchKeys":["RepositoryProcessorProvider","class RepositoryProcessorProvider : SymbolProcessorProvider","io.github.smyrgeorge.sqlx4k.processor.RepositoryProcessorProvider"]},{"name":"class TableProcessor(options: Map<String, String>, logger: KSPLogger, codeGenerator: CodeGenerator) : SymbolProcessor","description":"io.github.smyrgeorge.sqlx4k.processor.TableProcessor","location":"sqlx4k-codegen/io.github.smyrgeorge.sqlx4k.processor/-table-processor/index.html","searchKeys":["TableProcessor","class TableProcessor(options: Map<String, String>, logger: KSPLogger, codeGenerator: CodeGenerator) : SymbolProcessor","io.github.smyrgeorge.sqlx4k.processor.TableProcessor"]},{"name":"class TableProcessorProvider : SymbolProcessorProvider","description":"io.github.smyrgeorge.sqlx4k.processor.TableProcessorProvider","location":"sqlx4k-codegen/io.github.smyrgeorge.sqlx4k.processor/-table-processor-provider/index.html","searchKeys":["TableProcessorProvider","class TableProcessorProvider : SymbolProcessorProvider","io.github.smyrgeorge.sqlx4k.processor.TableProcessorProvider"]},{"name":"const val COLUMN_ANNOTATION: String","description":"io.github.smyrgeorge.sqlx4k.processor.TypeNames.COLUMN_ANNOTATION","location":"sqlx4k-codegen/io.github.smyrgeorge.sqlx4k.processor/-type-names/-c-o-l-u-m-n_-a-n-n-o-t-a-t-i-o-n.html","searchKeys":["COLUMN_ANNOTATION","const val COLUMN_ANNOTATION: String","io.github.smyrgeorge.sqlx4k.processor.TypeNames.COLUMN_ANNOTATION"]},{"name":"const val CONTEXT_CRUD_REPOSITORY: String","description":"io.github.smyrgeorge.sqlx4k.processor.TypeNames.CONTEXT_CRUD_REPOSITORY","location":"sqlx4k-codegen/io.github.smyrgeorge.sqlx4k.processor/-type-names/-c-o-n-t-e-x-t_-c-r-u-d_-r-e-p-o-s-i-t-o-r-y.html","searchKeys":["CONTEXT_CRUD_REPOSITORY","const val CONTEXT_CRUD_REPOSITORY: String","io.github.smyrgeorge.sqlx4k.processor.TypeNames.CONTEXT_CRUD_REPOSITORY"]},{"name":"const val CRUD_REPOSITORY: String","description":"io.github.smyrgeorge.sqlx4k.processor.TypeNames.CRUD_REPOSITORY","location":"sqlx4k-codegen/io.github.smyrgeorge.sqlx4k.processor/-type-names/-c-r-u-d_-r-e-p-o-s-i-t-o-r-y.html","searchKeys":["CRUD_REPOSITORY","const val CRUD_REPOSITORY: String","io.github.smyrgeorge.sqlx4k.processor.TypeNames.CRUD_REPOSITORY"]},{"name":"const val ID_ANNOTATION: String","description":"io.github.smyrgeorge.sqlx4k.processor.TypeNames.ID_ANNOTATION","location":"sqlx4k-codegen/io.github.smyrgeorge.sqlx4k.processor/-type-names/-i-d_-a-n-n-o-t-a-t-i-o-n.html","searchKeys":["ID_ANNOTATION","const val ID_ANNOTATION: String","io.github.smyrgeorge.sqlx4k.processor.TypeNames.ID_ANNOTATION"]},{"name":"const val KOTLIN_INT: String","description":"io.github.smyrgeorge.sqlx4k.processor.TypeNames.KOTLIN_INT","location":"sqlx4k-codegen/io.github.smyrgeorge.sqlx4k.processor/-type-names/-k-o-t-l-i-n_-i-n-t.html","searchKeys":["KOTLIN_INT","const val KOTLIN_INT: String","io.github.smyrgeorge.sqlx4k.processor.TypeNames.KOTLIN_INT"]},{"name":"const val KOTLIN_LIST: String","description":"io.github.smyrgeorge.sqlx4k.processor.TypeNames.KOTLIN_LIST","location":"sqlx4k-codegen/io.github.smyrgeorge.sqlx4k.processor/-type-names/-k-o-t-l-i-n_-l-i-s-t.html","searchKeys":["KOTLIN_LIST","const val KOTLIN_LIST: String","io.github.smyrgeorge.sqlx4k.processor.TypeNames.KOTLIN_LIST"]},{"name":"const val KOTLIN_LONG: String","description":"io.github.smyrgeorge.sqlx4k.processor.TypeNames.KOTLIN_LONG","location":"sqlx4k-codegen/io.github.smyrgeorge.sqlx4k.processor/-type-names/-k-o-t-l-i-n_-l-o-n-g.html","searchKeys":["KOTLIN_LONG","const val KOTLIN_LONG: String","io.github.smyrgeorge.sqlx4k.processor.TypeNames.KOTLIN_LONG"]},{"name":"const val KOTLIN_RESULT: String","description":"io.github.smyrgeorge.sqlx4k.processor.TypeNames.KOTLIN_RESULT","location":"sqlx4k-codegen/io.github.smyrgeorge.sqlx4k.processor/-type-names/-k-o-t-l-i-n_-r-e-s-u-l-t.html","searchKeys":["KOTLIN_RESULT","const val KOTLIN_RESULT: String","io.github.smyrgeorge.sqlx4k.processor.TypeNames.KOTLIN_RESULT"]},{"name":"const val PACKAGE_OPTION: String","description":"io.github.smyrgeorge.sqlx4k.processor.TableProcessor.Companion.PACKAGE_OPTION","location":"sqlx4k-codegen/io.github.smyrgeorge.sqlx4k.processor/-table-processor/-companion/-p-a-c-k-a-g-e_-o-p-t-i-o-n.html","searchKeys":["PACKAGE_OPTION","const val PACKAGE_OPTION: String","io.github.smyrgeorge.sqlx4k.processor.TableProcessor.Companion.PACKAGE_OPTION"]},{"name":"const val QUERY_ANNOTATION: String","description":"io.github.smyrgeorge.sqlx4k.processor.TypeNames.QUERY_ANNOTATION","location":"sqlx4k-codegen/io.github.smyrgeorge.sqlx4k.processor/-type-names/-q-u-e-r-y_-a-n-n-o-t-a-t-i-o-n.html","searchKeys":["QUERY_ANNOTATION","const val QUERY_ANNOTATION: String","io.github.smyrgeorge.sqlx4k.processor.TypeNames.QUERY_ANNOTATION"]},{"name":"const val QUERY_EXECUTOR: String","description":"io.github.smyrgeorge.sqlx4k.processor.TypeNames.QUERY_EXECUTOR","location":"sqlx4k-codegen/io.github.smyrgeorge.sqlx4k.processor/-type-names/-q-u-e-r-y_-e-x-e-c-u-t-o-r.html","searchKeys":["QUERY_EXECUTOR","const val QUERY_EXECUTOR: String","io.github.smyrgeorge.sqlx4k.processor.TypeNames.QUERY_EXECUTOR"]},{"name":"const val REPOSITORY_ANNOTATION: String","description":"io.github.smyrgeorge.sqlx4k.processor.TypeNames.REPOSITORY_ANNOTATION","location":"sqlx4k-codegen/io.github.smyrgeorge.sqlx4k.processor/-type-names/-r-e-p-o-s-i-t-o-r-y_-a-n-n-o-t-a-t-i-o-n.html","searchKeys":["REPOSITORY_ANNOTATION","const val REPOSITORY_ANNOTATION: String","io.github.smyrgeorge.sqlx4k.processor.TypeNames.REPOSITORY_ANNOTATION"]},{"name":"const val STATEMENT: String","description":"io.github.smyrgeorge.sqlx4k.processor.TypeNames.STATEMENT","location":"sqlx4k-codegen/io.github.smyrgeorge.sqlx4k.processor/-type-names/-s-t-a-t-e-m-e-n-t.html","searchKeys":["STATEMENT","const val STATEMENT: String","io.github.smyrgeorge.sqlx4k.processor.TypeNames.STATEMENT"]},{"name":"const val TABLE_ANNOTATION: String","description":"io.github.smyrgeorge.sqlx4k.processor.TypeNames.TABLE_ANNOTATION","location":"sqlx4k-codegen/io.github.smyrgeorge.sqlx4k.processor/-type-names/-t-a-b-l-e_-a-n-n-o-t-a-t-i-o-n.html","searchKeys":["TABLE_ANNOTATION","const val TABLE_ANNOTATION: String","io.github.smyrgeorge.sqlx4k.processor.TypeNames.TABLE_ANNOTATION"]},{"name":"constructor()","description":"io.github.smyrgeorge.sqlx4k.processor.RepositoryProcessorProvider.RepositoryProcessorProvider","location":"sqlx4k-codegen/io.github.smyrgeorge.sqlx4k.processor/-repository-processor-provider/-repository-processor-provider.html","searchKeys":["RepositoryProcessorProvider","constructor()","io.github.smyrgeorge.sqlx4k.processor.RepositoryProcessorProvider.RepositoryProcessorProvider"]},{"name":"constructor()","description":"io.github.smyrgeorge.sqlx4k.processor.TableProcessorProvider.TableProcessorProvider","location":"sqlx4k-codegen/io.github.smyrgeorge.sqlx4k.processor/-table-processor-provider/-table-processor-provider.html","searchKeys":["TableProcessorProvider","constructor()","io.github.smyrgeorge.sqlx4k.processor.TableProcessorProvider.TableProcessorProvider"]},{"name":"constructor(columns: List<SqlValidator.ColumnDef>)","description":"io.github.smyrgeorge.sqlx4k.processor.SqlValidator.MigrationTable.MigrationTable","location":"sqlx4k-codegen/io.github.smyrgeorge.sqlx4k.processor/-sql-validator/-migration-table/-migration-table.html","searchKeys":["MigrationTable","constructor(columns: List<SqlValidator.ColumnDef>)","io.github.smyrgeorge.sqlx4k.processor.SqlValidator.MigrationTable.MigrationTable"]},{"name":"constructor(file: OutputStream)","description":"io.github.smyrgeorge.sqlx4k.processor.TableProcessor.Visitor.Visitor","location":"sqlx4k-codegen/io.github.smyrgeorge.sqlx4k.processor/-table-processor/-visitor/-visitor.html","searchKeys":["Visitor","constructor(file: OutputStream)","io.github.smyrgeorge.sqlx4k.processor.TableProcessor.Visitor.Visitor"]},{"name":"constructor(name: String, columns: MutableList<SqlValidator.ColumnDef>)","description":"io.github.smyrgeorge.sqlx4k.processor.SqlValidator.TableDef.TableDef","location":"sqlx4k-codegen/io.github.smyrgeorge.sqlx4k.processor/-sql-validator/-table-def/-table-def.html","searchKeys":["TableDef","constructor(name: String, columns: MutableList<SqlValidator.ColumnDef>)","io.github.smyrgeorge.sqlx4k.processor.SqlValidator.TableDef.TableDef"]},{"name":"constructor(name: String, type: String)","description":"io.github.smyrgeorge.sqlx4k.processor.SqlValidator.ColumnDef.ColumnDef","location":"sqlx4k-codegen/io.github.smyrgeorge.sqlx4k.processor/-sql-validator/-column-def/-column-def.html","searchKeys":["ColumnDef","constructor(name: String, type: String)","io.github.smyrgeorge.sqlx4k.processor.SqlValidator.ColumnDef.ColumnDef"]},{"name":"constructor(options: Map<String, String>, logger: KSPLogger, codeGenerator: CodeGenerator)","description":"io.github.smyrgeorge.sqlx4k.processor.RepositoryProcessor.RepositoryProcessor","location":"sqlx4k-codegen/io.github.smyrgeorge.sqlx4k.processor/-repository-processor/-repository-processor.html","searchKeys":["RepositoryProcessor","constructor(options: Map<String, String>, logger: KSPLogger, codeGenerator: CodeGenerator)","io.github.smyrgeorge.sqlx4k.processor.RepositoryProcessor.RepositoryProcessor"]},{"name":"constructor(options: Map<String, String>, logger: KSPLogger, codeGenerator: CodeGenerator)","description":"io.github.smyrgeorge.sqlx4k.processor.TableProcessor.TableProcessor","location":"sqlx4k-codegen/io.github.smyrgeorge.sqlx4k.processor/-table-processor/-table-processor.html","searchKeys":["TableProcessor","constructor(options: Map<String, String>, logger: KSPLogger, codeGenerator: CodeGenerator)","io.github.smyrgeorge.sqlx4k.processor.TableProcessor.TableProcessor"]},{"name":"data class ColumnDef(val name: String, val type: String)","description":"io.github.smyrgeorge.sqlx4k.processor.SqlValidator.ColumnDef","location":"sqlx4k-codegen/io.github.smyrgeorge.sqlx4k.processor/-sql-validator/-column-def/index.html","searchKeys":["ColumnDef","data class ColumnDef(val name: String, val type: String)","io.github.smyrgeorge.sqlx4k.processor.SqlValidator.ColumnDef"]},{"name":"data class MigrationTable(columns: List<SqlValidator.ColumnDef>) : AbstractTable","description":"io.github.smyrgeorge.sqlx4k.processor.SqlValidator.MigrationTable","location":"sqlx4k-codegen/io.github.smyrgeorge.sqlx4k.processor/-sql-validator/-migration-table/index.html","searchKeys":["MigrationTable","data class MigrationTable(columns: List<SqlValidator.ColumnDef>) : AbstractTable","io.github.smyrgeorge.sqlx4k.processor.SqlValidator.MigrationTable"]},{"name":"data class TableDef(val name: String, val columns: MutableList<SqlValidator.ColumnDef>)","description":"io.github.smyrgeorge.sqlx4k.processor.SqlValidator.TableDef","location":"sqlx4k-codegen/io.github.smyrgeorge.sqlx4k.processor/-sql-validator/-table-def/index.html","searchKeys":["TableDef","data class TableDef(val name: String, val columns: MutableList<SqlValidator.ColumnDef>)","io.github.smyrgeorge.sqlx4k.processor.SqlValidator.TableDef"]},{"name":"fun loadSchema(path: String)","description":"io.github.smyrgeorge.sqlx4k.processor.SqlValidator.loadSchema","location":"sqlx4k-codegen/io.github.smyrgeorge.sqlx4k.processor/-sql-validator/load-schema.html","searchKeys":["loadSchema","fun loadSchema(path: String)","io.github.smyrgeorge.sqlx4k.processor.SqlValidator.loadSchema"]},{"name":"fun validateParameters(sql: String, fn: KSFunctionDeclaration, useContextParameters: Boolean)","description":"io.github.smyrgeorge.sqlx4k.processor.RepositoryProcessor.validateParameters","location":"sqlx4k-codegen/io.github.smyrgeorge.sqlx4k.processor/-repository-processor/validate-parameters.html","searchKeys":["validateParameters","fun validateParameters(sql: String, fn: KSFunctionDeclaration, useContextParameters: Boolean)","io.github.smyrgeorge.sqlx4k.processor.RepositoryProcessor.validateParameters"]},{"name":"fun validateQuerySchema(fn: String, sql: String)","description":"io.github.smyrgeorge.sqlx4k.processor.SqlValidator.validateQuerySchema","location":"sqlx4k-codegen/io.github.smyrgeorge.sqlx4k.processor/-sql-validator/validate-query-schema.html","searchKeys":["validateQuerySchema","fun validateQuerySchema(fn: String, sql: String)","io.github.smyrgeorge.sqlx4k.processor.SqlValidator.validateQuerySchema"]},{"name":"fun validateQuerySyntax(fn: String, sql: String)","description":"io.github.smyrgeorge.sqlx4k.processor.SqlValidator.validateQuerySyntax","location":"sqlx4k-codegen/io.github.smyrgeorge.sqlx4k.processor/-sql-validator/validate-query-syntax.html","searchKeys":["validateQuerySyntax","fun validateQuerySyntax(fn: String, sql: String)","io.github.smyrgeorge.sqlx4k.processor.SqlValidator.validateQuerySyntax"]},{"name":"inner class Visitor(file: OutputStream) : KSVisitorVoid","description":"io.github.smyrgeorge.sqlx4k.processor.TableProcessor.Visitor","location":"sqlx4k-codegen/io.github.smyrgeorge.sqlx4k.processor/-table-processor/-visitor/index.html","searchKeys":["Visitor","inner class Visitor(file: OutputStream) : KSVisitorVoid","io.github.smyrgeorge.sqlx4k.processor.TableProcessor.Visitor"]},{"name":"object Companion","description":"io.github.smyrgeorge.sqlx4k.processor.RepositoryProcessor.Companion","location":"sqlx4k-codegen/io.github.smyrgeorge.sqlx4k.processor/-repository-processor/-companion/index.html","searchKeys":["Companion","object Companion","io.github.smyrgeorge.sqlx4k.processor.RepositoryProcessor.Companion"]},{"name":"object Companion","description":"io.github.smyrgeorge.sqlx4k.processor.TableProcessor.Companion","location":"sqlx4k-codegen/io.github.smyrgeorge.sqlx4k.processor/-table-processor/-companion/index.html","searchKeys":["Companion","object Companion","io.github.smyrgeorge.sqlx4k.processor.TableProcessor.Companion"]},{"name":"object SqlValidator","description":"io.github.smyrgeorge.sqlx4k.processor.SqlValidator","location":"sqlx4k-codegen/io.github.smyrgeorge.sqlx4k.processor/-sql-validator/index.html","searchKeys":["SqlValidator","object SqlValidator","io.github.smyrgeorge.sqlx4k.processor.SqlValidator"]},{"name":"object TypeNames","description":"io.github.smyrgeorge.sqlx4k.processor.TypeNames","location":"sqlx4k-codegen/io.github.smyrgeorge.sqlx4k.processor/-type-names/index.html","searchKeys":["TypeNames","object TypeNames","io.github.smyrgeorge.sqlx4k.processor.TypeNames"]},{"name":"open override fun create(environment: SymbolProcessorEnvironment): SymbolProcessor","description":"io.github.smyrgeorge.sqlx4k.processor.RepositoryProcessorProvider.create","location":"sqlx4k-codegen/io.github.smyrgeorge.sqlx4k.processor/-repository-processor-provider/create.html","searchKeys":["create","open override fun create(environment: SymbolProcessorEnvironment): SymbolProcessor","io.github.smyrgeorge.sqlx4k.processor.RepositoryProcessorProvider.create"]},{"name":"open override fun create(environment: SymbolProcessorEnvironment): SymbolProcessor","description":"io.github.smyrgeorge.sqlx4k.processor.TableProcessorProvider.create","location":"sqlx4k-codegen/io.github.smyrgeorge.sqlx4k.processor/-table-processor-provider/create.html","searchKeys":["create","open override fun create(environment: SymbolProcessorEnvironment): SymbolProcessor","io.github.smyrgeorge.sqlx4k.processor.TableProcessorProvider.create"]},{"name":"open override fun getRowType(typeFactory: RelDataTypeFactory): RelDataType","description":"io.github.smyrgeorge.sqlx4k.processor.SqlValidator.MigrationTable.getRowType","location":"sqlx4k-codegen/io.github.smyrgeorge.sqlx4k.processor/-sql-validator/-migration-table/get-row-type.html","searchKeys":["getRowType","open override fun getRowType(typeFactory: RelDataTypeFactory): RelDataType","io.github.smyrgeorge.sqlx4k.processor.SqlValidator.MigrationTable.getRowType"]},{"name":"open override fun process(resolver: Resolver): List<KSAnnotated>","description":"io.github.smyrgeorge.sqlx4k.processor.RepositoryProcessor.process","location":"sqlx4k-codegen/io.github.smyrgeorge.sqlx4k.processor/-repository-processor/process.html","searchKeys":["process","open override fun process(resolver: Resolver): List<KSAnnotated>","io.github.smyrgeorge.sqlx4k.processor.RepositoryProcessor.process"]},{"name":"open override fun process(resolver: Resolver): List<KSAnnotated>","description":"io.github.smyrgeorge.sqlx4k.processor.TableProcessor.process","location":"sqlx4k-codegen/io.github.smyrgeorge.sqlx4k.processor/-table-processor/process.html","searchKeys":["process","open override fun process(resolver: Resolver): List<KSAnnotated>","io.github.smyrgeorge.sqlx4k.processor.TableProcessor.process"]},{"name":"open override fun visitClassDeclaration(classDeclaration: KSClassDeclaration, data: Unit)","description":"io.github.smyrgeorge.sqlx4k.processor.TableProcessor.Visitor.visitClassDeclaration","location":"sqlx4k-codegen/io.github.smyrgeorge.sqlx4k.processor/-table-processor/-visitor/visit-class-declaration.html","searchKeys":["visitClassDeclaration","open override fun visitClassDeclaration(classDeclaration: KSClassDeclaration, data: Unit)","io.github.smyrgeorge.sqlx4k.processor.TableProcessor.Visitor.visitClassDeclaration"]},{"name":"operator fun OutputStream.plusAssign(str: String)","description":"io.github.smyrgeorge.sqlx4k.processor.RepositoryProcessor.plusAssign","location":"sqlx4k-codegen/io.github.smyrgeorge.sqlx4k.processor/-repository-processor/plus-assign.html","searchKeys":["plusAssign","operator fun OutputStream.plusAssign(str: String)","io.github.smyrgeorge.sqlx4k.processor.RepositoryProcessor.plusAssign"]},{"name":"operator fun OutputStream.plusAssign(str: String)","description":"io.github.smyrgeorge.sqlx4k.processor.TableProcessor.plusAssign","location":"sqlx4k-codegen/io.github.smyrgeorge.sqlx4k.processor/-table-processor/plus-assign.html","searchKeys":["plusAssign","operator fun OutputStream.plusAssign(str: String)","io.github.smyrgeorge.sqlx4k.processor.TableProcessor.plusAssign"]},{"name":"val columns: MutableList<SqlValidator.ColumnDef>","description":"io.github.smyrgeorge.sqlx4k.processor.SqlValidator.TableDef.columns","location":"sqlx4k-codegen/io.github.smyrgeorge.sqlx4k.processor/-sql-validator/-table-def/columns.html","searchKeys":["columns","val columns: MutableList<SqlValidator.ColumnDef>","io.github.smyrgeorge.sqlx4k.processor.SqlValidator.TableDef.columns"]},{"name":"val name: String","description":"io.github.smyrgeorge.sqlx4k.processor.SqlValidator.ColumnDef.name","location":"sqlx4k-codegen/io.github.smyrgeorge.sqlx4k.processor/-sql-validator/-column-def/name.html","searchKeys":["name","val name: String","io.github.smyrgeorge.sqlx4k.processor.SqlValidator.ColumnDef.name"]},{"name":"val name: String","description":"io.github.smyrgeorge.sqlx4k.processor.SqlValidator.TableDef.name","location":"sqlx4k-codegen/io.github.smyrgeorge.sqlx4k.processor/-sql-validator/-table-def/name.html","searchKeys":["name","val name: String","io.github.smyrgeorge.sqlx4k.processor.SqlValidator.TableDef.name"]},{"name":"val type: String","description":"io.github.smyrgeorge.sqlx4k.processor.SqlValidator.ColumnDef.type","location":"sqlx4k-codegen/io.github.smyrgeorge.sqlx4k.processor/-sql-validator/-column-def/type.html","searchKeys":["type","val type: String","io.github.smyrgeorge.sqlx4k.processor.SqlValidator.ColumnDef.type"]},{"name":"abstract suspend fun listen(channel: String, f: suspend (Notification) -> Unit)","description":"io.github.smyrgeorge.sqlx4k.postgres.IPostgresSQL.listen","location":"sqlx4k-postgres/io.github.smyrgeorge.sqlx4k.postgres/-i-postgres-s-q-l/listen.html","searchKeys":["listen","abstract suspend fun listen(channel: String, f: suspend (Notification) -> Unit)","io.github.smyrgeorge.sqlx4k.postgres.IPostgresSQL.listen"]},{"name":"abstract suspend fun listen(channels: List<String>, f: suspend (Notification) -> Unit)","description":"io.github.smyrgeorge.sqlx4k.postgres.IPostgresSQL.listen","location":"sqlx4k-postgres/io.github.smyrgeorge.sqlx4k.postgres/-i-postgres-s-q-l/listen.html","searchKeys":["listen","abstract suspend fun listen(channels: List<String>, f: suspend (Notification) -> Unit)","io.github.smyrgeorge.sqlx4k.postgres.IPostgresSQL.listen"]},{"name":"abstract suspend fun notify(channel: String, value: String)","description":"io.github.smyrgeorge.sqlx4k.postgres.IPostgresSQL.notify","location":"sqlx4k-postgres/io.github.smyrgeorge.sqlx4k.postgres/-i-postgres-s-q-l/notify.html","searchKeys":["notify","abstract suspend fun notify(channel: String, value: String)","io.github.smyrgeorge.sqlx4k.postgres.IPostgresSQL.notify"]},{"name":"class Cn(connection: Connection) : Connection","description":"io.github.smyrgeorge.sqlx4k.postgres.PostgreSQL.Cn","location":"sqlx4k-postgres/io.github.smyrgeorge.sqlx4k.postgres/[jvm]-postgre-s-q-l/-cn/index.html","searchKeys":["Cn","class Cn(connection: Connection) : Connection","io.github.smyrgeorge.sqlx4k.postgres.PostgreSQL.Cn"]},{"name":"class Cn(rt: <Error class: unknown class><out <Error class: unknown class>>, cn: <Error class: unknown class><out <Error class: unknown class>>) : Connection","description":"io.github.smyrgeorge.sqlx4k.postgres.PostgreSQL.Cn","location":"sqlx4k-postgres/io.github.smyrgeorge.sqlx4k.postgres/[native]-postgre-s-q-l/-cn/index.html","searchKeys":["Cn","class Cn(rt: <Error class: unknown class><out <Error class: unknown class>>, cn: <Error class: unknown class><out <Error class: unknown class>>) : Connection","io.github.smyrgeorge.sqlx4k.postgres.PostgreSQL.Cn"]},{"name":"class PostgreSQL(url: String, username: String, password: String, options: ConnectionPool.Options = ConnectionPool.Options()) : IPostgresSQL","description":"io.github.smyrgeorge.sqlx4k.postgres.PostgreSQL","location":"sqlx4k-postgres/io.github.smyrgeorge.sqlx4k.postgres/[jvm]-postgre-s-q-l/index.html","searchKeys":["PostgreSQL","class PostgreSQL(url: String, username: String, password: String, options: ConnectionPool.Options = ConnectionPool.Options()) : IPostgresSQL","io.github.smyrgeorge.sqlx4k.postgres.PostgreSQL"]},{"name":"class PostgreSQL(url: String, username: String, password: String, options: ConnectionPool.Options = ConnectionPool.Options()) : IPostgresSQL","description":"io.github.smyrgeorge.sqlx4k.postgres.PostgreSQL","location":"sqlx4k-postgres/io.github.smyrgeorge.sqlx4k.postgres/[native]-postgre-s-q-l/index.html","searchKeys":["PostgreSQL","class PostgreSQL(url: String, username: String, password: String, options: ConnectionPool.Options = ConnectionPool.Options()) : IPostgresSQL","io.github.smyrgeorge.sqlx4k.postgres.PostgreSQL"]},{"name":"class Tx(connection: Connection, closeConnectionAfterTx: Boolean) : Transaction","description":"io.github.smyrgeorge.sqlx4k.postgres.PostgreSQL.Tx","location":"sqlx4k-postgres/io.github.smyrgeorge.sqlx4k.postgres/[jvm]-postgre-s-q-l/-tx/index.html","searchKeys":["Tx","class Tx(connection: Connection, closeConnectionAfterTx: Boolean) : Transaction","io.github.smyrgeorge.sqlx4k.postgres.PostgreSQL.Tx"]},{"name":"class Tx(rt: <Error class: unknown class><out <Error class: unknown class>>, tx: <Error class: unknown class><out <Error class: unknown class>>) : Transaction","description":"io.github.smyrgeorge.sqlx4k.postgres.PostgreSQL.Tx","location":"sqlx4k-postgres/io.github.smyrgeorge.sqlx4k.postgres/[native]-postgre-s-q-l/-tx/index.html","searchKeys":["Tx","class Tx(rt: <Error class: unknown class><out <Error class: unknown class>>, tx: <Error class: unknown class><out <Error class: unknown class>>) : Transaction","io.github.smyrgeorge.sqlx4k.postgres.PostgreSQL.Tx"]},{"name":"constructor(channel: String, value: ResultSet.Row.Column)","description":"io.github.smyrgeorge.sqlx4k.postgres.Notification.Notification","location":"sqlx4k-postgres/io.github.smyrgeorge.sqlx4k.postgres/-notification/-notification.html","searchKeys":["Notification","constructor(channel: String, value: ResultSet.Row.Column)","io.github.smyrgeorge.sqlx4k.postgres.Notification.Notification"]},{"name":"constructor(connection: Connection)","description":"io.github.smyrgeorge.sqlx4k.postgres.PostgreSQL.Cn.Cn","location":"sqlx4k-postgres/io.github.smyrgeorge.sqlx4k.postgres/[jvm]-postgre-s-q-l/-cn/-cn.html","searchKeys":["Cn","constructor(connection: Connection)","io.github.smyrgeorge.sqlx4k.postgres.PostgreSQL.Cn.Cn"]},{"name":"constructor(connection: Connection, closeConnectionAfterTx: Boolean)","description":"io.github.smyrgeorge.sqlx4k.postgres.PostgreSQL.Tx.Tx","location":"sqlx4k-postgres/io.github.smyrgeorge.sqlx4k.postgres/[jvm]-postgre-s-q-l/-tx/-tx.html","searchKeys":["Tx","constructor(connection: Connection, closeConnectionAfterTx: Boolean)","io.github.smyrgeorge.sqlx4k.postgres.PostgreSQL.Tx.Tx"]},{"name":"constructor(rt: <Error class: unknown class><out <Error class: unknown class>>, cn: <Error class: unknown class><out <Error class: unknown class>>)","description":"io.github.smyrgeorge.sqlx4k.postgres.PostgreSQL.Cn.Cn","location":"sqlx4k-postgres/io.github.smyrgeorge.sqlx4k.postgres/[native]-postgre-s-q-l/-cn/-cn.html","searchKeys":["Cn","constructor(rt: <Error class: unknown class><out <Error class: unknown class>>, cn: <Error class: unknown class><out <Error class: unknown class>>)","io.github.smyrgeorge.sqlx4k.postgres.PostgreSQL.Cn.Cn"]},{"name":"constructor(rt: <Error class: unknown class><out <Error class: unknown class>>, tx: <Error class: unknown class><out <Error class: unknown class>>)","description":"io.github.smyrgeorge.sqlx4k.postgres.PostgreSQL.Tx.Tx","location":"sqlx4k-postgres/io.github.smyrgeorge.sqlx4k.postgres/[native]-postgre-s-q-l/-tx/-tx.html","searchKeys":["Tx","constructor(rt: <Error class: unknown class><out <Error class: unknown class>>, tx: <Error class: unknown class><out <Error class: unknown class>>)","io.github.smyrgeorge.sqlx4k.postgres.PostgreSQL.Tx.Tx"]},{"name":"constructor(url: String, username: String, password: String, options: ConnectionPool.Options = ConnectionPool.Options())","description":"io.github.smyrgeorge.sqlx4k.postgres.PostgreSQL.PostgreSQL","location":"sqlx4k-postgres/io.github.smyrgeorge.sqlx4k.postgres/[jvm]-postgre-s-q-l/-postgre-s-q-l.html","searchKeys":["PostgreSQL","constructor(url: String, username: String, password: String, options: ConnectionPool.Options = ConnectionPool.Options())","io.github.smyrgeorge.sqlx4k.postgres.PostgreSQL.PostgreSQL"]},{"name":"constructor(url: String, username: String, password: String, options: ConnectionPool.Options = ConnectionPool.Options())","description":"io.github.smyrgeorge.sqlx4k.postgres.PostgreSQL.PostgreSQL","location":"sqlx4k-postgres/io.github.smyrgeorge.sqlx4k.postgres/[native]-postgre-s-q-l/-postgre-s-q-l.html","searchKeys":["PostgreSQL","constructor(url: String, username: String, password: String, options: ConnectionPool.Options = ConnectionPool.Options())","io.github.smyrgeorge.sqlx4k.postgres.PostgreSQL.PostgreSQL"]},{"name":"data class Notification(val channel: String, val value: ResultSet.Row.Column)","description":"io.github.smyrgeorge.sqlx4k.postgres.Notification","location":"sqlx4k-postgres/io.github.smyrgeorge.sqlx4k.postgres/-notification/index.html","searchKeys":["Notification","data class Notification(val channel: String, val value: ResultSet.Row.Column)","io.github.smyrgeorge.sqlx4k.postgres.Notification"]},{"name":"expect fun postgreSQL(url: String, username: String, password: String, options: ConnectionPool.Options = ConnectionPool.Options()): IPostgresSQL","description":"io.github.smyrgeorge.sqlx4k.postgres.postgreSQL","location":"sqlx4k-postgres/io.github.smyrgeorge.sqlx4k.postgres/postgre-s-q-l.html","searchKeys":["postgreSQL","expect fun postgreSQL(url: String, username: String, password: String, options: ConnectionPool.Options = ConnectionPool.Options()): IPostgresSQL","io.github.smyrgeorge.sqlx4k.postgres.postgreSQL"]},{"name":"fun ResultSet.Row.Column.asBooleanArray(): BooleanArray","description":"io.github.smyrgeorge.sqlx4k.postgres.extensions.asBooleanArray","location":"sqlx4k-postgres/io.github.smyrgeorge.sqlx4k.postgres.extensions/as-boolean-array.html","searchKeys":["asBooleanArray","fun ResultSet.Row.Column.asBooleanArray(): BooleanArray","io.github.smyrgeorge.sqlx4k.postgres.extensions.asBooleanArray"]},{"name":"fun ResultSet.Row.Column.asBooleanArrayOrNull(): BooleanArray?","description":"io.github.smyrgeorge.sqlx4k.postgres.extensions.asBooleanArrayOrNull","location":"sqlx4k-postgres/io.github.smyrgeorge.sqlx4k.postgres.extensions/as-boolean-array-or-null.html","searchKeys":["asBooleanArrayOrNull","fun ResultSet.Row.Column.asBooleanArrayOrNull(): BooleanArray?","io.github.smyrgeorge.sqlx4k.postgres.extensions.asBooleanArrayOrNull"]},{"name":"fun ResultSet.Row.Column.asByteArray(): ByteArray","description":"io.github.smyrgeorge.sqlx4k.postgres.extensions.asByteArray","location":"sqlx4k-postgres/io.github.smyrgeorge.sqlx4k.postgres.extensions/as-byte-array.html","searchKeys":["asByteArray","fun ResultSet.Row.Column.asByteArray(): ByteArray","io.github.smyrgeorge.sqlx4k.postgres.extensions.asByteArray"]},{"name":"fun ResultSet.Row.Column.asByteArrayOrNull(): ByteArray?","description":"io.github.smyrgeorge.sqlx4k.postgres.extensions.asByteArrayOrNull","location":"sqlx4k-postgres/io.github.smyrgeorge.sqlx4k.postgres.extensions/as-byte-array-or-null.html","searchKeys":["asByteArrayOrNull","fun ResultSet.Row.Column.asByteArrayOrNull(): ByteArray?","io.github.smyrgeorge.sqlx4k.postgres.extensions.asByteArrayOrNull"]},{"name":"fun ResultSet.Row.Column.asDoubleArray(): DoubleArray","description":"io.github.smyrgeorge.sqlx4k.postgres.extensions.asDoubleArray","location":"sqlx4k-postgres/io.github.smyrgeorge.sqlx4k.postgres.extensions/as-double-array.html","searchKeys":["asDoubleArray","fun ResultSet.Row.Column.asDoubleArray(): DoubleArray","io.github.smyrgeorge.sqlx4k.postgres.extensions.asDoubleArray"]},{"name":"fun ResultSet.Row.Column.asDoubleArrayOrNull(): DoubleArray?","description":"io.github.smyrgeorge.sqlx4k.postgres.extensions.asDoubleArrayOrNull","location":"sqlx4k-postgres/io.github.smyrgeorge.sqlx4k.postgres.extensions/as-double-array-or-null.html","searchKeys":["asDoubleArrayOrNull","fun ResultSet.Row.Column.asDoubleArrayOrNull(): DoubleArray?","io.github.smyrgeorge.sqlx4k.postgres.extensions.asDoubleArrayOrNull"]},{"name":"fun ResultSet.Row.Column.asFloatArray(): FloatArray","description":"io.github.smyrgeorge.sqlx4k.postgres.extensions.asFloatArray","location":"sqlx4k-postgres/io.github.smyrgeorge.sqlx4k.postgres.extensions/as-float-array.html","searchKeys":["asFloatArray","fun ResultSet.Row.Column.asFloatArray(): FloatArray","io.github.smyrgeorge.sqlx4k.postgres.extensions.asFloatArray"]},{"name":"fun ResultSet.Row.Column.asFloatArrayOrNull(): FloatArray?","description":"io.github.smyrgeorge.sqlx4k.postgres.extensions.asFloatArrayOrNull","location":"sqlx4k-postgres/io.github.smyrgeorge.sqlx4k.postgres.extensions/as-float-array-or-null.html","searchKeys":["asFloatArrayOrNull","fun ResultSet.Row.Column.asFloatArrayOrNull(): FloatArray?","io.github.smyrgeorge.sqlx4k.postgres.extensions.asFloatArrayOrNull"]},{"name":"fun ResultSet.Row.Column.asIntArray(): IntArray","description":"io.github.smyrgeorge.sqlx4k.postgres.extensions.asIntArray","location":"sqlx4k-postgres/io.github.smyrgeorge.sqlx4k.postgres.extensions/as-int-array.html","searchKeys":["asIntArray","fun ResultSet.Row.Column.asIntArray(): IntArray","io.github.smyrgeorge.sqlx4k.postgres.extensions.asIntArray"]},{"name":"fun ResultSet.Row.Column.asIntArrayOrNull(): IntArray?","description":"io.github.smyrgeorge.sqlx4k.postgres.extensions.asIntArrayOrNull","location":"sqlx4k-postgres/io.github.smyrgeorge.sqlx4k.postgres.extensions/as-int-array-or-null.html","searchKeys":["asIntArrayOrNull","fun ResultSet.Row.Column.asIntArrayOrNull(): IntArray?","io.github.smyrgeorge.sqlx4k.postgres.extensions.asIntArrayOrNull"]},{"name":"fun ResultSet.Row.Column.asLongArray(): LongArray","description":"io.github.smyrgeorge.sqlx4k.postgres.extensions.asLongArray","location":"sqlx4k-postgres/io.github.smyrgeorge.sqlx4k.postgres.extensions/as-long-array.html","searchKeys":["asLongArray","fun ResultSet.Row.Column.asLongArray(): LongArray","io.github.smyrgeorge.sqlx4k.postgres.extensions.asLongArray"]},{"name":"fun ResultSet.Row.Column.asLongArrayOrNull(): LongArray?","description":"io.github.smyrgeorge.sqlx4k.postgres.extensions.asLongArrayOrNull","location":"sqlx4k-postgres/io.github.smyrgeorge.sqlx4k.postgres.extensions/as-long-array-or-null.html","searchKeys":["asLongArrayOrNull","fun ResultSet.Row.Column.asLongArrayOrNull(): LongArray?","io.github.smyrgeorge.sqlx4k.postgres.extensions.asLongArrayOrNull"]},{"name":"fun ResultSet.Row.Column.asShortArray(): ShortArray","description":"io.github.smyrgeorge.sqlx4k.postgres.extensions.asShortArray","location":"sqlx4k-postgres/io.github.smyrgeorge.sqlx4k.postgres.extensions/as-short-array.html","searchKeys":["asShortArray","fun ResultSet.Row.Column.asShortArray(): ShortArray","io.github.smyrgeorge.sqlx4k.postgres.extensions.asShortArray"]},{"name":"fun ResultSet.Row.Column.asShortArrayOrNull(): ShortArray?","description":"io.github.smyrgeorge.sqlx4k.postgres.extensions.asShortArrayOrNull","location":"sqlx4k-postgres/io.github.smyrgeorge.sqlx4k.postgres.extensions/as-short-array-or-null.html","searchKeys":["asShortArrayOrNull","fun ResultSet.Row.Column.asShortArrayOrNull(): ShortArray?","io.github.smyrgeorge.sqlx4k.postgres.extensions.asShortArrayOrNull"]},{"name":"interface IPostgresSQL : Driver","description":"io.github.smyrgeorge.sqlx4k.postgres.IPostgresSQL","location":"sqlx4k-postgres/io.github.smyrgeorge.sqlx4k.postgres/-i-postgres-s-q-l/index.html","searchKeys":["IPostgresSQL","interface IPostgresSQL : Driver","io.github.smyrgeorge.sqlx4k.postgres.IPostgresSQL"]},{"name":"object Companion","description":"io.github.smyrgeorge.sqlx4k.postgres.PostgreSQL.Companion","location":"sqlx4k-postgres/io.github.smyrgeorge.sqlx4k.postgres/[jvm]-postgre-s-q-l/-companion/index.html","searchKeys":["Companion","object Companion","io.github.smyrgeorge.sqlx4k.postgres.PostgreSQL.Companion"]},{"name":"object Companion","description":"io.github.smyrgeorge.sqlx4k.postgres.PostgreSQL.Companion","location":"sqlx4k-postgres/io.github.smyrgeorge.sqlx4k.postgres/[native]-postgre-s-q-l/-companion/index.html","searchKeys":["Companion","object Companion","io.github.smyrgeorge.sqlx4k.postgres.PostgreSQL.Companion"]},{"name":"open fun validateChannelName(channel: String)","description":"io.github.smyrgeorge.sqlx4k.postgres.IPostgresSQL.validateChannelName","location":"sqlx4k-postgres/io.github.smyrgeorge.sqlx4k.postgres/-i-postgres-s-q-l/validate-channel-name.html","searchKeys":["validateChannelName","open fun validateChannelName(channel: String)","io.github.smyrgeorge.sqlx4k.postgres.IPostgresSQL.validateChannelName"]},{"name":"open override fun poolIdleSize(): Int","description":"io.github.smyrgeorge.sqlx4k.postgres.PostgreSQL.poolIdleSize","location":"sqlx4k-postgres/io.github.smyrgeorge.sqlx4k.postgres/[jvm]-postgre-s-q-l/pool-idle-size.html","searchKeys":["poolIdleSize","open override fun poolIdleSize(): Int","io.github.smyrgeorge.sqlx4k.postgres.PostgreSQL.poolIdleSize"]},{"name":"open override fun poolIdleSize(): Int","description":"io.github.smyrgeorge.sqlx4k.postgres.PostgreSQL.poolIdleSize","location":"sqlx4k-postgres/io.github.smyrgeorge.sqlx4k.postgres/[native]-postgre-s-q-l/pool-idle-size.html","searchKeys":["poolIdleSize","open override fun poolIdleSize(): Int","io.github.smyrgeorge.sqlx4k.postgres.PostgreSQL.poolIdleSize"]},{"name":"open override fun poolSize(): Int","description":"io.github.smyrgeorge.sqlx4k.postgres.PostgreSQL.poolSize","location":"sqlx4k-postgres/io.github.smyrgeorge.sqlx4k.postgres/[jvm]-postgre-s-q-l/pool-size.html","searchKeys":["poolSize","open override fun poolSize(): Int","io.github.smyrgeorge.sqlx4k.postgres.PostgreSQL.poolSize"]},{"name":"open override fun poolSize(): Int","description":"io.github.smyrgeorge.sqlx4k.postgres.PostgreSQL.poolSize","location":"sqlx4k-postgres/io.github.smyrgeorge.sqlx4k.postgres/[native]-postgre-s-q-l/pool-size.html","searchKeys":["poolSize","open override fun poolSize(): Int","io.github.smyrgeorge.sqlx4k.postgres.PostgreSQL.poolSize"]},{"name":"open override val status: Connection.Status","description":"io.github.smyrgeorge.sqlx4k.postgres.PostgreSQL.Cn.status","location":"sqlx4k-postgres/io.github.smyrgeorge.sqlx4k.postgres/[jvm]-postgre-s-q-l/-cn/status.html","searchKeys":["status","open override val status: Connection.Status","io.github.smyrgeorge.sqlx4k.postgres.PostgreSQL.Cn.status"]},{"name":"open override val status: Connection.Status","description":"io.github.smyrgeorge.sqlx4k.postgres.PostgreSQL.Cn.status","location":"sqlx4k-postgres/io.github.smyrgeorge.sqlx4k.postgres/[native]-postgre-s-q-l/-cn/status.html","searchKeys":["status","open override val status: Connection.Status","io.github.smyrgeorge.sqlx4k.postgres.PostgreSQL.Cn.status"]},{"name":"open override val status: Transaction.Status","description":"io.github.smyrgeorge.sqlx4k.postgres.PostgreSQL.Tx.status","location":"sqlx4k-postgres/io.github.smyrgeorge.sqlx4k.postgres/[jvm]-postgre-s-q-l/-tx/status.html","searchKeys":["status","open override val status: Transaction.Status","io.github.smyrgeorge.sqlx4k.postgres.PostgreSQL.Tx.status"]},{"name":"open override val status: Transaction.Status","description":"io.github.smyrgeorge.sqlx4k.postgres.PostgreSQL.Tx.status","location":"sqlx4k-postgres/io.github.smyrgeorge.sqlx4k.postgres/[native]-postgre-s-q-l/-tx/status.html","searchKeys":["status","open override val status: Transaction.Status","io.github.smyrgeorge.sqlx4k.postgres.PostgreSQL.Tx.status"]},{"name":"open suspend override fun <T> fetchAll(statement: Statement, rowMapper: RowMapper<T>): Result<List<T>>","description":"io.github.smyrgeorge.sqlx4k.postgres.PostgreSQL.Cn.fetchAll","location":"sqlx4k-postgres/io.github.smyrgeorge.sqlx4k.postgres/[jvm]-postgre-s-q-l/-cn/fetch-all.html","searchKeys":["fetchAll","open suspend override fun <T> fetchAll(statement: Statement, rowMapper: RowMapper<T>): Result<List<T>>","io.github.smyrgeorge.sqlx4k.postgres.PostgreSQL.Cn.fetchAll"]},{"name":"open suspend override fun <T> fetchAll(statement: Statement, rowMapper: RowMapper<T>): Result<List<T>>","description":"io.github.smyrgeorge.sqlx4k.postgres.PostgreSQL.Cn.fetchAll","location":"sqlx4k-postgres/io.github.smyrgeorge.sqlx4k.postgres/[native]-postgre-s-q-l/-cn/fetch-all.html","searchKeys":["fetchAll","open suspend override fun <T> fetchAll(statement: Statement, rowMapper: RowMapper<T>): Result<List<T>>","io.github.smyrgeorge.sqlx4k.postgres.PostgreSQL.Cn.fetchAll"]},{"name":"open suspend override fun <T> fetchAll(statement: Statement, rowMapper: RowMapper<T>): Result<List<T>>","description":"io.github.smyrgeorge.sqlx4k.postgres.PostgreSQL.Tx.fetchAll","location":"sqlx4k-postgres/io.github.smyrgeorge.sqlx4k.postgres/[jvm]-postgre-s-q-l/-tx/fetch-all.html","searchKeys":["fetchAll","open suspend override fun <T> fetchAll(statement: Statement, rowMapper: RowMapper<T>): Result<List<T>>","io.github.smyrgeorge.sqlx4k.postgres.PostgreSQL.Tx.fetchAll"]},{"name":"open suspend override fun <T> fetchAll(statement: Statement, rowMapper: RowMapper<T>): Result<List<T>>","description":"io.github.smyrgeorge.sqlx4k.postgres.PostgreSQL.Tx.fetchAll","location":"sqlx4k-postgres/io.github.smyrgeorge.sqlx4k.postgres/[native]-postgre-s-q-l/-tx/fetch-all.html","searchKeys":["fetchAll","open suspend override fun <T> fetchAll(statement: Statement, rowMapper: RowMapper<T>): Result<List<T>>","io.github.smyrgeorge.sqlx4k.postgres.PostgreSQL.Tx.fetchAll"]},{"name":"open suspend override fun <T> fetchAll(statement: Statement, rowMapper: RowMapper<T>): Result<List<T>>","description":"io.github.smyrgeorge.sqlx4k.postgres.PostgreSQL.fetchAll","location":"sqlx4k-postgres/io.github.smyrgeorge.sqlx4k.postgres/[jvm]-postgre-s-q-l/fetch-all.html","searchKeys":["fetchAll","open suspend override fun <T> fetchAll(statement: Statement, rowMapper: RowMapper<T>): Result<List<T>>","io.github.smyrgeorge.sqlx4k.postgres.PostgreSQL.fetchAll"]},{"name":"open suspend override fun <T> fetchAll(statement: Statement, rowMapper: RowMapper<T>): Result<List<T>>","description":"io.github.smyrgeorge.sqlx4k.postgres.PostgreSQL.fetchAll","location":"sqlx4k-postgres/io.github.smyrgeorge.sqlx4k.postgres/[native]-postgre-s-q-l/fetch-all.html","searchKeys":["fetchAll","open suspend override fun <T> fetchAll(statement: Statement, rowMapper: RowMapper<T>): Result<List<T>>","io.github.smyrgeorge.sqlx4k.postgres.PostgreSQL.fetchAll"]},{"name":"open suspend override fun acquire(): Result<Connection>","description":"io.github.smyrgeorge.sqlx4k.postgres.PostgreSQL.acquire","location":"sqlx4k-postgres/io.github.smyrgeorge.sqlx4k.postgres/[jvm]-postgre-s-q-l/acquire.html","searchKeys":["acquire","open suspend override fun acquire(): Result<Connection>","io.github.smyrgeorge.sqlx4k.postgres.PostgreSQL.acquire"]},{"name":"open suspend override fun acquire(): Result<Connection>","description":"io.github.smyrgeorge.sqlx4k.postgres.PostgreSQL.acquire","location":"sqlx4k-postgres/io.github.smyrgeorge.sqlx4k.postgres/[native]-postgre-s-q-l/acquire.html","searchKeys":["acquire","open suspend override fun acquire(): Result<Connection>","io.github.smyrgeorge.sqlx4k.postgres.PostgreSQL.acquire"]},{"name":"open suspend override fun begin(): Result<Transaction>","description":"io.github.smyrgeorge.sqlx4k.postgres.PostgreSQL.Cn.begin","location":"sqlx4k-postgres/io.github.smyrgeorge.sqlx4k.postgres/[jvm]-postgre-s-q-l/-cn/begin.html","searchKeys":["begin","open suspend override fun begin(): Result<Transaction>","io.github.smyrgeorge.sqlx4k.postgres.PostgreSQL.Cn.begin"]},{"name":"open suspend override fun begin(): Result<Transaction>","description":"io.github.smyrgeorge.sqlx4k.postgres.PostgreSQL.Cn.begin","location":"sqlx4k-postgres/io.github.smyrgeorge.sqlx4k.postgres/[native]-postgre-s-q-l/-cn/begin.html","searchKeys":["begin","open suspend override fun begin(): Result<Transaction>","io.github.smyrgeorge.sqlx4k.postgres.PostgreSQL.Cn.begin"]},{"name":"open suspend override fun begin(): Result<Transaction>","description":"io.github.smyrgeorge.sqlx4k.postgres.PostgreSQL.begin","location":"sqlx4k-postgres/io.github.smyrgeorge.sqlx4k.postgres/[jvm]-postgre-s-q-l/begin.html","searchKeys":["begin","open suspend override fun begin(): Result<Transaction>","io.github.smyrgeorge.sqlx4k.postgres.PostgreSQL.begin"]},{"name":"open suspend override fun begin(): Result<Transaction>","description":"io.github.smyrgeorge.sqlx4k.postgres.PostgreSQL.begin","location":"sqlx4k-postgres/io.github.smyrgeorge.sqlx4k.postgres/[native]-postgre-s-q-l/begin.html","searchKeys":["begin","open suspend override fun begin(): Result<Transaction>","io.github.smyrgeorge.sqlx4k.postgres.PostgreSQL.begin"]},{"name":"open suspend override fun close(): Result<Unit>","description":"io.github.smyrgeorge.sqlx4k.postgres.PostgreSQL.close","location":"sqlx4k-postgres/io.github.smyrgeorge.sqlx4k.postgres/[jvm]-postgre-s-q-l/close.html","searchKeys":["close","open suspend override fun close(): Result<Unit>","io.github.smyrgeorge.sqlx4k.postgres.PostgreSQL.close"]},{"name":"open suspend override fun close(): Result<Unit>","description":"io.github.smyrgeorge.sqlx4k.postgres.PostgreSQL.close","location":"sqlx4k-postgres/io.github.smyrgeorge.sqlx4k.postgres/[native]-postgre-s-q-l/close.html","searchKeys":["close","open suspend override fun close(): Result<Unit>","io.github.smyrgeorge.sqlx4k.postgres.PostgreSQL.close"]},{"name":"open suspend override fun commit(): Result<Unit>","description":"io.github.smyrgeorge.sqlx4k.postgres.PostgreSQL.Tx.commit","location":"sqlx4k-postgres/io.github.smyrgeorge.sqlx4k.postgres/[jvm]-postgre-s-q-l/-tx/commit.html","searchKeys":["commit","open suspend override fun commit(): Result<Unit>","io.github.smyrgeorge.sqlx4k.postgres.PostgreSQL.Tx.commit"]},{"name":"open suspend override fun commit(): Result<Unit>","description":"io.github.smyrgeorge.sqlx4k.postgres.PostgreSQL.Tx.commit","location":"sqlx4k-postgres/io.github.smyrgeorge.sqlx4k.postgres/[native]-postgre-s-q-l/-tx/commit.html","searchKeys":["commit","open suspend override fun commit(): Result<Unit>","io.github.smyrgeorge.sqlx4k.postgres.PostgreSQL.Tx.commit"]},{"name":"open suspend override fun execute(sql: String): Result<Long>","description":"io.github.smyrgeorge.sqlx4k.postgres.PostgreSQL.Cn.execute","location":"sqlx4k-postgres/io.github.smyrgeorge.sqlx4k.postgres/[jvm]-postgre-s-q-l/-cn/execute.html","searchKeys":["execute","open suspend override fun execute(sql: String): Result<Long>","io.github.smyrgeorge.sqlx4k.postgres.PostgreSQL.Cn.execute"]},{"name":"open suspend override fun execute(sql: String): Result<Long>","description":"io.github.smyrgeorge.sqlx4k.postgres.PostgreSQL.Cn.execute","location":"sqlx4k-postgres/io.github.smyrgeorge.sqlx4k.postgres/[native]-postgre-s-q-l/-cn/execute.html","searchKeys":["execute","open suspend override fun execute(sql: String): Result<Long>","io.github.smyrgeorge.sqlx4k.postgres.PostgreSQL.Cn.execute"]},{"name":"open suspend override fun execute(sql: String): Result<Long>","description":"io.github.smyrgeorge.sqlx4k.postgres.PostgreSQL.Tx.execute","location":"sqlx4k-postgres/io.github.smyrgeorge.sqlx4k.postgres/[jvm]-postgre-s-q-l/-tx/execute.html","searchKeys":["execute","open suspend override fun execute(sql: String): Result<Long>","io.github.smyrgeorge.sqlx4k.postgres.PostgreSQL.Tx.execute"]},{"name":"open suspend override fun execute(sql: String): Result<Long>","description":"io.github.smyrgeorge.sqlx4k.postgres.PostgreSQL.Tx.execute","location":"sqlx4k-postgres/io.github.smyrgeorge.sqlx4k.postgres/[native]-postgre-s-q-l/-tx/execute.html","searchKeys":["execute","open suspend override fun execute(sql: String): Result<Long>","io.github.smyrgeorge.sqlx4k.postgres.PostgreSQL.Tx.execute"]},{"name":"open suspend override fun execute(sql: String): Result<Long>","description":"io.github.smyrgeorge.sqlx4k.postgres.PostgreSQL.execute","location":"sqlx4k-postgres/io.github.smyrgeorge.sqlx4k.postgres/[jvm]-postgre-s-q-l/execute.html","searchKeys":["execute","open suspend override fun execute(sql: String): Result<Long>","io.github.smyrgeorge.sqlx4k.postgres.PostgreSQL.execute"]},{"name":"open suspend override fun execute(sql: String): Result<Long>","description":"io.github.smyrgeorge.sqlx4k.postgres.PostgreSQL.execute","location":"sqlx4k-postgres/io.github.smyrgeorge.sqlx4k.postgres/[native]-postgre-s-q-l/execute.html","searchKeys":["execute","open suspend override fun execute(sql: String): Result<Long>","io.github.smyrgeorge.sqlx4k.postgres.PostgreSQL.execute"]},{"name":"open suspend override fun execute(statement: Statement): Result<Long>","description":"io.github.smyrgeorge.sqlx4k.postgres.PostgreSQL.Cn.execute","location":"sqlx4k-postgres/io.github.smyrgeorge.sqlx4k.postgres/[jvm]-postgre-s-q-l/-cn/execute.html","searchKeys":["execute","open suspend override fun execute(statement: Statement): Result<Long>","io.github.smyrgeorge.sqlx4k.postgres.PostgreSQL.Cn.execute"]},{"name":"open suspend override fun execute(statement: Statement): Result<Long>","description":"io.github.smyrgeorge.sqlx4k.postgres.PostgreSQL.Cn.execute","location":"sqlx4k-postgres/io.github.smyrgeorge.sqlx4k.postgres/[native]-postgre-s-q-l/-cn/execute.html","searchKeys":["execute","open suspend override fun execute(statement: Statement): Result<Long>","io.github.smyrgeorge.sqlx4k.postgres.PostgreSQL.Cn.execute"]},{"name":"open suspend override fun execute(statement: Statement): Result<Long>","description":"io.github.smyrgeorge.sqlx4k.postgres.PostgreSQL.Tx.execute","location":"sqlx4k-postgres/io.github.smyrgeorge.sqlx4k.postgres/[jvm]-postgre-s-q-l/-tx/execute.html","searchKeys":["execute","open suspend override fun execute(statement: Statement): Result<Long>","io.github.smyrgeorge.sqlx4k.postgres.PostgreSQL.Tx.execute"]},{"name":"open suspend override fun execute(statement: Statement): Result<Long>","description":"io.github.smyrgeorge.sqlx4k.postgres.PostgreSQL.Tx.execute","location":"sqlx4k-postgres/io.github.smyrgeorge.sqlx4k.postgres/[native]-postgre-s-q-l/-tx/execute.html","searchKeys":["execute","open suspend override fun execute(statement: Statement): Result<Long>","io.github.smyrgeorge.sqlx4k.postgres.PostgreSQL.Tx.execute"]},{"name":"open suspend override fun execute(statement: Statement): Result<Long>","description":"io.github.smyrgeorge.sqlx4k.postgres.PostgreSQL.execute","location":"sqlx4k-postgres/io.github.smyrgeorge.sqlx4k.postgres/[jvm]-postgre-s-q-l/execute.html","searchKeys":["execute","open suspend override fun execute(statement: Statement): Result<Long>","io.github.smyrgeorge.sqlx4k.postgres.PostgreSQL.execute"]},{"name":"open suspend override fun execute(statement: Statement): Result<Long>","description":"io.github.smyrgeorge.sqlx4k.postgres.PostgreSQL.execute","location":"sqlx4k-postgres/io.github.smyrgeorge.sqlx4k.postgres/[native]-postgre-s-q-l/execute.html","searchKeys":["execute","open suspend override fun execute(statement: Statement): Result<Long>","io.github.smyrgeorge.sqlx4k.postgres.PostgreSQL.execute"]},{"name":"open suspend override fun fetchAll(sql: String): Result<ResultSet>","description":"io.github.smyrgeorge.sqlx4k.postgres.PostgreSQL.Cn.fetchAll","location":"sqlx4k-postgres/io.github.smyrgeorge.sqlx4k.postgres/[jvm]-postgre-s-q-l/-cn/fetch-all.html","searchKeys":["fetchAll","open suspend override fun fetchAll(sql: String): Result<ResultSet>","io.github.smyrgeorge.sqlx4k.postgres.PostgreSQL.Cn.fetchAll"]},{"name":"open suspend override fun fetchAll(sql: String): Result<ResultSet>","description":"io.github.smyrgeorge.sqlx4k.postgres.PostgreSQL.Cn.fetchAll","location":"sqlx4k-postgres/io.github.smyrgeorge.sqlx4k.postgres/[native]-postgre-s-q-l/-cn/fetch-all.html","searchKeys":["fetchAll","open suspend override fun fetchAll(sql: String): Result<ResultSet>","io.github.smyrgeorge.sqlx4k.postgres.PostgreSQL.Cn.fetchAll"]},{"name":"open suspend override fun fetchAll(sql: String): Result<ResultSet>","description":"io.github.smyrgeorge.sqlx4k.postgres.PostgreSQL.Tx.fetchAll","location":"sqlx4k-postgres/io.github.smyrgeorge.sqlx4k.postgres/[jvm]-postgre-s-q-l/-tx/fetch-all.html","searchKeys":["fetchAll","open suspend override fun fetchAll(sql: String): Result<ResultSet>","io.github.smyrgeorge.sqlx4k.postgres.PostgreSQL.Tx.fetchAll"]},{"name":"open suspend override fun fetchAll(sql: String): Result<ResultSet>","description":"io.github.smyrgeorge.sqlx4k.postgres.PostgreSQL.Tx.fetchAll","location":"sqlx4k-postgres/io.github.smyrgeorge.sqlx4k.postgres/[native]-postgre-s-q-l/-tx/fetch-all.html","searchKeys":["fetchAll","open suspend override fun fetchAll(sql: String): Result<ResultSet>","io.github.smyrgeorge.sqlx4k.postgres.PostgreSQL.Tx.fetchAll"]},{"name":"open suspend override fun fetchAll(sql: String): Result<ResultSet>","description":"io.github.smyrgeorge.sqlx4k.postgres.PostgreSQL.fetchAll","location":"sqlx4k-postgres/io.github.smyrgeorge.sqlx4k.postgres/[jvm]-postgre-s-q-l/fetch-all.html","searchKeys":["fetchAll","open suspend override fun fetchAll(sql: String): Result<ResultSet>","io.github.smyrgeorge.sqlx4k.postgres.PostgreSQL.fetchAll"]},{"name":"open suspend override fun fetchAll(sql: String): Result<ResultSet>","description":"io.github.smyrgeorge.sqlx4k.postgres.PostgreSQL.fetchAll","location":"sqlx4k-postgres/io.github.smyrgeorge.sqlx4k.postgres/[native]-postgre-s-q-l/fetch-all.html","searchKeys":["fetchAll","open suspend override fun fetchAll(sql: String): Result<ResultSet>","io.github.smyrgeorge.sqlx4k.postgres.PostgreSQL.fetchAll"]},{"name":"open suspend override fun fetchAll(statement: Statement): Result<ResultSet>","description":"io.github.smyrgeorge.sqlx4k.postgres.PostgreSQL.Cn.fetchAll","location":"sqlx4k-postgres/io.github.smyrgeorge.sqlx4k.postgres/[jvm]-postgre-s-q-l/-cn/fetch-all.html","searchKeys":["fetchAll","open suspend override fun fetchAll(statement: Statement): Result<ResultSet>","io.github.smyrgeorge.sqlx4k.postgres.PostgreSQL.Cn.fetchAll"]},{"name":"open suspend override fun fetchAll(statement: Statement): Result<ResultSet>","description":"io.github.smyrgeorge.sqlx4k.postgres.PostgreSQL.Cn.fetchAll","location":"sqlx4k-postgres/io.github.smyrgeorge.sqlx4k.postgres/[native]-postgre-s-q-l/-cn/fetch-all.html","searchKeys":["fetchAll","open suspend override fun fetchAll(statement: Statement): Result<ResultSet>","io.github.smyrgeorge.sqlx4k.postgres.PostgreSQL.Cn.fetchAll"]},{"name":"open suspend override fun fetchAll(statement: Statement): Result<ResultSet>","description":"io.github.smyrgeorge.sqlx4k.postgres.PostgreSQL.Tx.fetchAll","location":"sqlx4k-postgres/io.github.smyrgeorge.sqlx4k.postgres/[jvm]-postgre-s-q-l/-tx/fetch-all.html","searchKeys":["fetchAll","open suspend override fun fetchAll(statement: Statement): Result<ResultSet>","io.github.smyrgeorge.sqlx4k.postgres.PostgreSQL.Tx.fetchAll"]},{"name":"open suspend override fun fetchAll(statement: Statement): Result<ResultSet>","description":"io.github.smyrgeorge.sqlx4k.postgres.PostgreSQL.Tx.fetchAll","location":"sqlx4k-postgres/io.github.smyrgeorge.sqlx4k.postgres/[native]-postgre-s-q-l/-tx/fetch-all.html","searchKeys":["fetchAll","open suspend override fun fetchAll(statement: Statement): Result<ResultSet>","io.github.smyrgeorge.sqlx4k.postgres.PostgreSQL.Tx.fetchAll"]},{"name":"open suspend override fun fetchAll(statement: Statement): Result<ResultSet>","description":"io.github.smyrgeorge.sqlx4k.postgres.PostgreSQL.fetchAll","location":"sqlx4k-postgres/io.github.smyrgeorge.sqlx4k.postgres/[jvm]-postgre-s-q-l/fetch-all.html","searchKeys":["fetchAll","open suspend override fun fetchAll(statement: Statement): Result<ResultSet>","io.github.smyrgeorge.sqlx4k.postgres.PostgreSQL.fetchAll"]},{"name":"open suspend override fun fetchAll(statement: Statement): Result<ResultSet>","description":"io.github.smyrgeorge.sqlx4k.postgres.PostgreSQL.fetchAll","location":"sqlx4k-postgres/io.github.smyrgeorge.sqlx4k.postgres/[native]-postgre-s-q-l/fetch-all.html","searchKeys":["fetchAll","open suspend override fun fetchAll(statement: Statement): Result<ResultSet>","io.github.smyrgeorge.sqlx4k.postgres.PostgreSQL.fetchAll"]},{"name":"open suspend override fun listen(channel: String, f: suspend (Notification) -> Unit)","description":"io.github.smyrgeorge.sqlx4k.postgres.PostgreSQL.listen","location":"sqlx4k-postgres/io.github.smyrgeorge.sqlx4k.postgres/[jvm]-postgre-s-q-l/listen.html","searchKeys":["listen","open suspend override fun listen(channel: String, f: suspend (Notification) -> Unit)","io.github.smyrgeorge.sqlx4k.postgres.PostgreSQL.listen"]},{"name":"open suspend override fun listen(channel: String, f: suspend (Notification) -> Unit)","description":"io.github.smyrgeorge.sqlx4k.postgres.PostgreSQL.listen","location":"sqlx4k-postgres/io.github.smyrgeorge.sqlx4k.postgres/[native]-postgre-s-q-l/listen.html","searchKeys":["listen","open suspend override fun listen(channel: String, f: suspend (Notification) -> Unit)","io.github.smyrgeorge.sqlx4k.postgres.PostgreSQL.listen"]},{"name":"open suspend override fun listen(channels: List<String>, f: suspend (Notification) -> Unit)","description":"io.github.smyrgeorge.sqlx4k.postgres.PostgreSQL.listen","location":"sqlx4k-postgres/io.github.smyrgeorge.sqlx4k.postgres/[jvm]-postgre-s-q-l/listen.html","searchKeys":["listen","open suspend override fun listen(channels: List<String>, f: suspend (Notification) -> Unit)","io.github.smyrgeorge.sqlx4k.postgres.PostgreSQL.listen"]},{"name":"open suspend override fun listen(channels: List<String>, f: suspend (Notification) -> Unit)","description":"io.github.smyrgeorge.sqlx4k.postgres.PostgreSQL.listen","location":"sqlx4k-postgres/io.github.smyrgeorge.sqlx4k.postgres/[native]-postgre-s-q-l/listen.html","searchKeys":["listen","open suspend override fun listen(channels: List<String>, f: suspend (Notification) -> Unit)","io.github.smyrgeorge.sqlx4k.postgres.PostgreSQL.listen"]},{"name":"open suspend override fun migrate(path: String, table: String, schema: String?, createSchema: Boolean, afterStatementExecution: suspend (Statement, Duration) -> Unit, afterFileMigration: suspend (Migration, Duration) -> Unit): Result<Migrator.Results>","description":"io.github.smyrgeorge.sqlx4k.postgres.PostgreSQL.migrate","location":"sqlx4k-postgres/io.github.smyrgeorge.sqlx4k.postgres/[jvm]-postgre-s-q-l/migrate.html","searchKeys":["migrate","open suspend override fun migrate(path: String, table: String, schema: String?, createSchema: Boolean, afterStatementExecution: suspend (Statement, Duration) -> Unit, afterFileMigration: suspend (Migration, Duration) -> Unit): Result<Migrator.Results>","io.github.smyrgeorge.sqlx4k.postgres.PostgreSQL.migrate"]},{"name":"open suspend override fun migrate(path: String, table: String, schema: String?, createSchema: Boolean, afterStatementExecution: suspend (Statement, Duration) -> Unit, afterFileMigration: suspend (Migration, Duration) -> Unit): Result<Migrator.Results>","description":"io.github.smyrgeorge.sqlx4k.postgres.PostgreSQL.migrate","location":"sqlx4k-postgres/io.github.smyrgeorge.sqlx4k.postgres/[native]-postgre-s-q-l/migrate.html","searchKeys":["migrate","open suspend override fun migrate(path: String, table: String, schema: String?, createSchema: Boolean, afterStatementExecution: suspend (Statement, Duration) -> Unit, afterFileMigration: suspend (Migration, Duration) -> Unit): Result<Migrator.Results>","io.github.smyrgeorge.sqlx4k.postgres.PostgreSQL.migrate"]},{"name":"open suspend override fun notify(channel: String, value: String)","description":"io.github.smyrgeorge.sqlx4k.postgres.PostgreSQL.notify","location":"sqlx4k-postgres/io.github.smyrgeorge.sqlx4k.postgres/[jvm]-postgre-s-q-l/notify.html","searchKeys":["notify","open suspend override fun notify(channel: String, value: String)","io.github.smyrgeorge.sqlx4k.postgres.PostgreSQL.notify"]},{"name":"open suspend override fun notify(channel: String, value: String)","description":"io.github.smyrgeorge.sqlx4k.postgres.PostgreSQL.notify","location":"sqlx4k-postgres/io.github.smyrgeorge.sqlx4k.postgres/[native]-postgre-s-q-l/notify.html","searchKeys":["notify","open suspend override fun notify(channel: String, value: String)","io.github.smyrgeorge.sqlx4k.postgres.PostgreSQL.notify"]},{"name":"open suspend override fun release(): Result<Unit>","description":"io.github.smyrgeorge.sqlx4k.postgres.PostgreSQL.Cn.release","location":"sqlx4k-postgres/io.github.smyrgeorge.sqlx4k.postgres/[jvm]-postgre-s-q-l/-cn/release.html","searchKeys":["release","open suspend override fun release(): Result<Unit>","io.github.smyrgeorge.sqlx4k.postgres.PostgreSQL.Cn.release"]},{"name":"open suspend override fun release(): Result<Unit>","description":"io.github.smyrgeorge.sqlx4k.postgres.PostgreSQL.Cn.release","location":"sqlx4k-postgres/io.github.smyrgeorge.sqlx4k.postgres/[native]-postgre-s-q-l/-cn/release.html","searchKeys":["release","open suspend override fun release(): Result<Unit>","io.github.smyrgeorge.sqlx4k.postgres.PostgreSQL.Cn.release"]},{"name":"open suspend override fun rollback(): Result<Unit>","description":"io.github.smyrgeorge.sqlx4k.postgres.PostgreSQL.Tx.rollback","location":"sqlx4k-postgres/io.github.smyrgeorge.sqlx4k.postgres/[jvm]-postgre-s-q-l/-tx/rollback.html","searchKeys":["rollback","open suspend override fun rollback(): Result<Unit>","io.github.smyrgeorge.sqlx4k.postgres.PostgreSQL.Tx.rollback"]},{"name":"open suspend override fun rollback(): Result<Unit>","description":"io.github.smyrgeorge.sqlx4k.postgres.PostgreSQL.Tx.rollback","location":"sqlx4k-postgres/io.github.smyrgeorge.sqlx4k.postgres/[native]-postgre-s-q-l/-tx/rollback.html","searchKeys":["rollback","open suspend override fun rollback(): Result<Unit>","io.github.smyrgeorge.sqlx4k.postgres.PostgreSQL.Tx.rollback"]},{"name":"val channel: String","description":"io.github.smyrgeorge.sqlx4k.postgres.Notification.channel","location":"sqlx4k-postgres/io.github.smyrgeorge.sqlx4k.postgres/-notification/channel.html","searchKeys":["channel","val channel: String","io.github.smyrgeorge.sqlx4k.postgres.Notification.channel"]},{"name":"val encoders: Statement.ValueEncoderRegistry","description":"io.github.smyrgeorge.sqlx4k.postgres.PostgreSQL.Companion.encoders","location":"sqlx4k-postgres/io.github.smyrgeorge.sqlx4k.postgres/[jvm]-postgre-s-q-l/-companion/encoders.html","searchKeys":["encoders","val encoders: Statement.ValueEncoderRegistry","io.github.smyrgeorge.sqlx4k.postgres.PostgreSQL.Companion.encoders"]},{"name":"val encoders: Statement.ValueEncoderRegistry","description":"io.github.smyrgeorge.sqlx4k.postgres.PostgreSQL.Companion.encoders","location":"sqlx4k-postgres/io.github.smyrgeorge.sqlx4k.postgres/[native]-postgre-s-q-l/-companion/encoders.html","searchKeys":["encoders","val encoders: Statement.ValueEncoderRegistry","io.github.smyrgeorge.sqlx4k.postgres.PostgreSQL.Companion.encoders"]},{"name":"val value: ResultSet.Row.Column","description":"io.github.smyrgeorge.sqlx4k.postgres.Notification.value","location":"sqlx4k-postgres/io.github.smyrgeorge.sqlx4k.postgres/-notification/value.html","searchKeys":["value","val value: ResultSet.Row.Column","io.github.smyrgeorge.sqlx4k.postgres.Notification.value"]}]